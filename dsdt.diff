--- dsdt.orig	2015-03-08 05:59:50.487236402 +0100
+++ dsdt.dsl	2015-03-08 06:00:01.327648912 +0100
@@ -1,75 +1,34 @@
-/*
- * Intel ACPI Component Architecture
- * AML Disassembler version 20140926-64 [Oct 16 2014]
- * Copyright (c) 2000 - 2014 Intel Corporation
- * 
- * Disassembly of orig.aml, Thu Mar  5 03:46:06 2015
- *
- * Original Table Header:
- *     Signature        "DSDT"
- *     Length           0x000248EA (149738)
- *     Revision         0x02
- *     Checksum         0xD3
- *     OEM ID           "HPQOEM"
- *     OEM Table ID     "167C    "
- *     OEM Revision     0x00000001 (1)
- *     Compiler ID      "INTL"
- *     Compiler Version 0x20060912 (537266450)
- */
-DefinitionBlock ("orig.aml", "DSDT", 2, "HPQOEM", "167C    ", 0x00000001)
+DefinitionBlock ("dsdt.aml", "DSDT", 2, "HPQOEM", "167C    ", 0x00000001)
 {
-    /*
-     * iASL Warning: There were 2 external control methods found during
-     * disassembly, but additional ACPI tables to resolve these externals
-     * were not specified. This resulting disassembler output file may not
-     * compile because the disassembler did not know how many arguments
-     * to assign to these methods. To specify the tables needed to resolve
-     * external control method references, the -e option can be used to
-     * specify the filenames. Example iASL invocations:
-     *     iasl -e ssdt1.aml ssdt2.aml ssdt3.aml -d dsdt.aml
-     *     iasl -e dsdt.aml ssdt2.aml -d ssdt1.aml
-     *     iasl -e ssdt*.aml -d dsdt.aml
-     *
-     * In addition, the -fe option can be used to specify a file containing
-     * control method external declarations with the associated method
-     * argument counts. Each line of the file must be of the form:
-     *     External (<method pathname>, MethodObj, <argument count>)
-     * Invocation:
-     *     iasl -fe refs.txt -d dsdt.aml
-     *
-     * The following methods were unresolved and many not compile properly
-     * because the disassembler had to guess at the number of arguments
-     * required for each:
-     */
-    External (FPED, MethodObj)    // Warning: Unresolved method, guessing 0 arguments
-    External (WMAB, MethodObj)    // Warning: Unresolved method, guessing 1 arguments
-
-    External (_PR_.CPU0._PPC, UnknownObj)
-    External (_PR_.CPU0._PSS, IntObj)
-    External (_SB_.PCI0.PEGP.DGFX.DD02, UnknownObj)
-    External (_SB_.PCI0.PEGP.DGFX.SVID, UnknownObj)
-    External (CFGD, UnknownObj)
-    External (PDC0, UnknownObj)
-    External (PDC1, UnknownObj)
-    External (PDC2, UnknownObj)
-    External (PDC3, UnknownObj)
-    External (PDC4, UnknownObj)
-    External (PDC5, UnknownObj)
-    External (PDC6, UnknownObj)
-    External (PDC7, UnknownObj)
-
+    External (WMAB, MethodObj)    // 1 Arguments
+    External (FPED, MethodObj)    // 0 Arguments
+    External (SNXD)
+    External (IDAB)
+    External (CFGD)
+    External (PDC7)
+    External (PDC6)
+    External (PDC5)
+    External (PDC4)
+    External (PDC3)
+    External (PDC2)
+    External (PDC1)
+    External (PDC0)
+    External (\_GPE._L1C)
+    External (\_PR_.CPU0._PSS, IntObj)
+    External (\_PR_.CPU0._PPC)
+    External (\_SB_.PCI0.PEGP.DGFX.DD02)
+    External (\_SB_.PCI0.PEGP.DGFX.SVID)
     Name (FMBL, 0x01)
     Name (LSTA, 0x00)
     Name (IDPM, 0x00)
     Method (\HPTS, 1, NotSerialized)
     {
-        Store (Arg0, SLPT) /* \SLPT */
+        Store (Arg0, SLPT)
         \_SB.ODGW (Or (0x5400, Arg0))
         If (LEqual (Arg0, 0x05))
         {
             \_SB.SSMI (0xEA82, Arg0, 0x00, 0x00, 0x00)
         }
-
         If (LGreater (Arg0, 0x00))
         {
             \_SB.SSMI (0xEA83, 0x00, 0x00, 0x00, 0x00)
@@ -77,7 +36,6 @@
             {
                 Store (0x00, \_SB.PCI0.LPCB.EC0.HSST)
             }
-
             PPTS (Arg0)
             If (LNotEqual (Arg0, 0x05))
             {
@@ -85,25 +43,23 @@
                 Store (0x01, \_SB.NFBS)
                 If (LEqual (Arg0, 0x03))
                 {
-                    Store (\_SB.LID._LID (), LSTA) /* \LSTA */
+                    Store (\_SB.LID._LID (), LSTA)
                     If (LNotEqual (And (PNHM, 0x000F0FF0), 0x000106E0))
                     {
-                        Store (\APMC, IDPM) /* \IDPM */
+                        Store (\APMC, IDPM)
                     }
                 }
             }
         }
     }
-
     Method (\HWAK, 1, NotSerialized)
     {
-        Store (0x00, SLPT) /* \SLPT */
+        Store (0x00, SLPT)
         \_SB.ODGW (Or (0x5600, Arg0))
         If (LEqual (Arg0, 0x03))
         {
             \_SB.SSMI (0xEA80, 0x00, 0x00, 0x00, 0x00)
         }
-
         \_SB.PCI0.LPCB.EC0.ITLB ()
         \_SB.PCI0.LPCB.EC0.RPPC (0x01)
         If (\_SB.PCI0.LPCB.EC0.ECRG)
@@ -113,7 +69,6 @@
             Store (0x00, \_SB.PCI0.LPCB.EC0.SLPT)
             Release (\_SB.PCI0.LPCB.EC0.ECMX)
         }
-
         If (LGreater (Arg0, 0x02))
         {
             \_TZ.RETD ()
@@ -126,36 +81,31 @@
                 {
                     \_SB.PCI0.GFX0.GLID (Local0)
                 }
-
                 If (LNotEqual (And (PNHM, 0x000F0FF0), 0x000106E0))
                 {
                     Store (IDPM, \APMC)
                 }
             }
-
             If (LEqual (Arg0, 0x04))
             {
                 \_SB.WMID.WGWE (0x05, 0x00)
             }
         }
-
         If (LOr (LEqual (Arg0, 0x04), LEqual (\WCOS (), 0x01)))
         {
-            Notify (\_SB.SLPB, 0x02) // Device Wake
+            Notify (\_SB.SLPB, 0x02)
         }
-
         Store (\_SB.PCI0.LPCB.EC0.GACS (), Local2)
         \_SB.PCI0.LPCB.EC0.PWUP (0x03, 0xFF)
         Store (\_SB.PCI0.LPCB.EC0.GBAP (), Local1)
         Store (\_SB.PCI0.LPCB.EC0.GACS (), Local3)
-        Store (Local3, PWRS) /* \PWRS */
+        Store (Local3, PWRS)
         XOr (Local2, Local3, Local3)
         If (LGreater (Arg0, 0x02))
         {
-            Notify (\_SB.AC, 0x80) // Status Change
+            Notify (\_SB.AC, 0x80)
             PCNT ()
         }
-
         If (LEqual (Local3, 0x00))
         {
             If (LEqual (Arg0, 0x04))
@@ -163,104 +113,88 @@
                 XOr (Local2, 0x01, \_SB.ACST)
             }
         }
-
         PWAK (Arg0)
         \_SB.VWAK (Arg0)
         Store (\_SB.HST1.GHID (), Local0)
         \_SB.PCI0.ACEL.ITAL ()
     }
-
     Method (PCNT, 0, Serialized)
     {
         If (LGreater (TCNT, 0x01))
         {
             If (And (PDC0, 0x18))
             {
-                Notify (\_PR.CPU0, 0x81) // C-State Change
+                Notify (\_PR.CPU0, 0x81)
             }
-
             If (And (PDC1, 0x18))
             {
-                Notify (\_PR.CPU1, 0x81) // C-State Change
+                Notify (\_PR.CPU1, 0x81)
             }
-
             If (And (PDC2, 0x18))
             {
-                Notify (\_PR.CPU2, 0x81) // C-State Change
+                Notify (\_PR.CPU2, 0x81)
             }
-
             If (And (PDC3, 0x18))
             {
-                Notify (\_PR.CPU3, 0x81) // C-State Change
+                Notify (\_PR.CPU3, 0x81)
             }
-
             If (And (PDC4, 0x18))
             {
-                Notify (\_PR.CPU4, 0x81) // C-State Change
+                Notify (\_PR.CPU4, 0x81)
             }
-
             If (And (PDC5, 0x18))
             {
-                Notify (\_PR.CPU5, 0x81) // C-State Change
+                Notify (\_PR.CPU5, 0x81)
             }
-
             If (And (PDC6, 0x18))
             {
-                Notify (\_PR.CPU6, 0x81) // C-State Change
+                Notify (\_PR.CPU6, 0x81)
             }
-
             If (And (PDC7, 0x18))
             {
-                Notify (\_PR.CPU7, 0x81) // C-State Change
+                Notify (\_PR.CPU7, 0x81)
             }
         }
         Else
         {
-            Notify (\_PR.CPU0, 0x81) // C-State Change
+            Notify (\_PR.CPU0, 0x81)
         }
     }
-
     Mutex (MUTX, 0x00)
     Method (P8XH, 2, Serialized)
     {
         If (LEqual (Arg0, 0x00))
         {
             \_SB.ODBG (Arg1)
-            Store (Or (And (P80D, 0xFFFFFF00), Arg1), P80D) /* \P80D */
+            Store (Or (And (P80D, 0xFFFFFF00), Arg1), P80D)
         }
-
         If (LEqual (Arg0, 0x01))
         {
             \_SB.ODG1 (Arg1)
             Store (Or (And (P80D, 0xFFFF00FF), ShiftLeft (Arg1, 0x08)
-                ), P80D) /* \P80D */
+                ), P80D)
         }
-
         If (LEqual (Arg0, 0x02))
         {
             Store (Or (And (P80D, 0xFF00FFFF), ShiftLeft (Arg1, 0x10)
-                ), P80D) /* \P80D */
+                ), P80D)
         }
-
         If (LEqual (Arg0, 0x03))
         {
             Store (Or (And (P80D, 0x00FFFFFF), ShiftLeft (Arg1, 0x18)
-                ), P80D) /* \P80D */
+                ), P80D)
         }
     }
-
     OperationRegion (SPRT, SystemIO, 0xB2, 0x02)
     Field (SPRT, ByteAcc, Lock, Preserve)
     {
         SSMP,   8
     }
-
-    Method (\_PIC, 1, NotSerialized)  // _PIC: Interrupt Model
+    Method (\_PIC, 1, NotSerialized)
     {
-        Store (Arg0, GPIC) /* \GPIC */
+        Store (Arg0, GPIC)
     }
-
-    Method (_PTS, 1, NotSerialized)  // _PTS: Prepare To Sleep
+    Method (_PTS, 1, NotSerialized)
     {
         HPTS (Arg0)
         If (LEqual (Arg0, 0x03))
@@ -271,8 +205,7 @@
             }
         }
     }
-
-    Method (_WAK, 1, NotSerialized)  // _WAK: Wake
+    Method (_WAK, 1, NotSerialized)
     {
         HWAK (Arg0)
         \_SB.PCI0.POSC (OSCC, 0x00)
@@ -283,7 +216,6 @@
             {
                 TRAP (0x02, 0x14)
             }
-
             If (And (CFGD, 0x01000000))
             {
                 If (LAnd (And (CFGD, 0xF0), LAnd (LEqual (OSYS, 0x07D1), 
@@ -292,198 +224,176 @@
                     TRAP (0x01, 0x48)
                 }
             }
-
             If (LEqual (OSYS, 0x07D2))
             {
                 If (And (CFGD, 0x01))
                 {
                     If (LGreater (\_PR.CPU0._PPC, 0x00))
                     {
-                        Subtract (\_PR.CPU0._PPC, 0x01, \_PR.CPU0._PPC) /* External reference */
+                        Subtract (\_PR.CPU0._PPC, 0x01, \_PR.CPU0._PPC)
                         PNOT ()
-                        Add (\_PR.CPU0._PPC, 0x01, \_PR.CPU0._PPC) /* External reference */
+                        Add (\_PR.CPU0._PPC, 0x01, \_PR.CPU0._PPC)
                         PNOT ()
                     }
                     Else
                     {
-                        Add (\_PR.CPU0._PPC, 0x01, \_PR.CPU0._PPC) /* External reference */
+                        Add (\_PR.CPU0._PPC, 0x01, \_PR.CPU0._PPC)
                         PNOT ()
-                        Subtract (\_PR.CPU0._PPC, 0x01, \_PR.CPU0._PPC) /* External reference */
+                        Subtract (\_PR.CPU0._PPC, 0x01, \_PR.CPU0._PPC)
                         PNOT ()
                     }
                 }
             }
         }
-
         Return (Package (0x02)
         {
             0x00, 
             0x00
         })
     }
-
     Method (GETB, 3, Serialized)
     {
         Multiply (Arg0, 0x08, Local0)
         Multiply (Arg1, 0x08, Local1)
         CreateField (Arg2, Local0, Local1, TBF3)
-        Return (TBF3) /* \GETB.TBF3 */
+        Return (TBF3)
     }
-
     Method (PNOT, 0, Serialized)
     {
         If (LGreater (TCNT, 0x01))
         {
             If (And (PDC0, 0x08))
             {
-                Notify (\_PR.CPU0, 0x80) // Performance Capability Change
+                Notify (\_PR.CPU0, 0x80)
                 If (And (PDC0, 0x10))
                 {
                     Sleep (0x64)
-                    Notify (\_PR.CPU0, 0x81) // C-State Change
+                    Notify (\_PR.CPU0, 0x81)
                 }
             }
-
             If (And (PDC1, 0x08))
             {
-                Notify (\_PR.CPU1, 0x80) // Performance Capability Change
+                Notify (\_PR.CPU1, 0x80)
                 If (And (PDC1, 0x10))
                 {
                     Sleep (0x64)
-                    Notify (\_PR.CPU1, 0x81) // C-State Change
+                    Notify (\_PR.CPU1, 0x81)
                 }
             }
-
             If (And (PDC2, 0x08))
             {
-                Notify (\_PR.CPU2, 0x80) // Performance Capability Change
+                Notify (\_PR.CPU2, 0x80)
                 If (And (PDC2, 0x10))
                 {
                     Sleep (0x64)
-                    Notify (\_PR.CPU2, 0x81) // C-State Change
+                    Notify (\_PR.CPU2, 0x81)
                 }
             }
-
             If (And (PDC3, 0x08))
             {
-                Notify (\_PR.CPU3, 0x80) // Performance Capability Change
+                Notify (\_PR.CPU3, 0x80)
                 If (And (PDC3, 0x10))
                 {
                     Sleep (0x64)
-                    Notify (\_PR.CPU3, 0x81) // C-State Change
+                    Notify (\_PR.CPU3, 0x81)
                 }
             }
-
             If (And (PDC4, 0x08))
             {
-                Notify (\_PR.CPU4, 0x80) // Performance Capability Change
+                Notify (\_PR.CPU4, 0x80)
                 If (And (PDC4, 0x10))
                 {
                     Sleep (0x64)
-                    Notify (\_PR.CPU4, 0x81) // C-State Change
+                    Notify (\_PR.CPU4, 0x81)
                 }
             }
-
             If (And (PDC5, 0x08))
             {
-                Notify (\_PR.CPU5, 0x80) // Performance Capability Change
+                Notify (\_PR.CPU5, 0x80)
                 If (And (PDC5, 0x10))
                 {
                     Sleep (0x64)
-                    Notify (\_PR.CPU5, 0x81) // C-State Change
+                    Notify (\_PR.CPU5, 0x81)
                 }
             }
-
             If (And (PDC6, 0x08))
             {
-                Notify (\_PR.CPU6, 0x80) // Performance Capability Change
+                Notify (\_PR.CPU6, 0x80)
                 If (And (PDC6, 0x10))
                 {
                     Sleep (0x64)
-                    Notify (\_PR.CPU6, 0x81) // C-State Change
+                    Notify (\_PR.CPU6, 0x81)
                 }
             }
-
             If (And (PDC7, 0x08))
             {
-                Notify (\_PR.CPU7, 0x80) // Performance Capability Change
+                Notify (\_PR.CPU7, 0x80)
                 If (And (PDC7, 0x10))
                 {
                     Sleep (0x64)
-                    Notify (\_PR.CPU7, 0x81) // C-State Change
+                    Notify (\_PR.CPU7, 0x81)
                 }
             }
         }
         Else
         {
-            Notify (\_PR.CPU0, 0x80) // Performance Capability Change
+            Notify (\_PR.CPU0, 0x80)
             Sleep (0x64)
-            Notify (\_PR.CPU0, 0x81) // C-State Change
+            Notify (\_PR.CPU0, 0x81)
         }
     }
-
     Method (TRAP, 2, Serialized)
     {
-        Store (Arg1, SMIF) /* \SMIF */
+        Store (Arg1, SMIF)
         If (LEqual (Arg0, 0x01))
         {
-            Store (0x00, TRP0) /* \TRP0 */
+            Store (0x00, TRP0)
         }
-
         If (LEqual (Arg0, 0x02))
         {
-            Store (Arg1, DTSF) /* \DTSF */
-            Store (0x00, TRPD) /* \TRPD */
-            Return (DTSF) /* \DTSF */
+            Store (Arg1, DTSF)
+            Store (0x00, TRPD)
+            Return (DTSF)
         }
-
-        Return (SMIF) /* \SMIF */
+        Return (SMIF)
     }
-
     Scope (\_SB)
     {
-        Method (_INI, 0, NotSerialized)  // _INI: Initialize
+        Method (_INI, 0, NotSerialized)
         {
-            Store (0x07D0, OSYS) /* \OSYS */
+            Store (0x07D0, OSYS)
             If (CondRefOf (_OSI, Local0))
             {
                 If (_OSI ("Linux"))
                 {
-                    Store (0x03E8, OSYS) /* \OSYS */
+                    Store (0x03E8, OSYS)
                 }
-
                 If (_OSI ("Windows 2001"))
                 {
-                    Store (0x07D1, OSYS) /* \OSYS */
+                    Store (0x07D1, OSYS)
                 }
-
                 If (_OSI ("Windows 2001 SP1"))
                 {
-                    Store (0x07D1, OSYS) /* \OSYS */
+                    Store (0x07D1, OSYS)
                 }
-
                 If (_OSI ("Windows 2001 SP2"))
                 {
-                    Store (0x07D2, OSYS) /* \OSYS */
+                    Store (0x07D2, OSYS)
                 }
-
                 If (_OSI ("Windows 2006"))
                 {
-                    Store (0x07D6, OSYS) /* \OSYS */
+                    Store (0x07D6, OSYS)
                 }
-
                 If (_OSI ("Windows 2009"))
                 {
-                    Store (0x07D9, OSYS) /* \OSYS */
+                    Store (0x07D9, OSYS)
                 }
             }
-
             \_TZ.BOTT ()
             \_TZ.RETD ()
-            Store (0x01, PFLV) /* \PFLV */
+            Store (0x01, PFLV)
         }
     }
-
     OperationRegion (GNVS, SystemMemory, 0xACFBCB98, 0x019F)
     Field (GNVS, AnyAcc, Lock, Preserve)
     {
@@ -669,13 +579,11 @@
         ALFP,   8, 
         IMON,   8
     }
-
     OperationRegion (ASMA, SystemMemory, 0xACFBA018, 0x1060)
     Field (ASMA, AnyAcc, NoLock, Preserve)
     {
         ASMB,   33536
     }
-
     OperationRegion (AF10, SystemMemory, 0xACFBC018, 0x0B58)
     Field (AF10, AnyAcc, Lock, Preserve)
     {
@@ -751,7 +659,6 @@
         MMS4,   640, 
         NMMS,   8
     }
-
     OperationRegion (HPDF, SystemMemory, 0xACFBDE18, 0x017C)
     Field (HPDF, AnyAcc, Lock, Preserve)
     {
@@ -814,7 +721,6 @@
         AMVS,   32, 
         AMVP,   32
     }
-
     OperationRegion (HPD2, SystemMemory, 0xACE6AF18, 0x006D)
     Field (HPD2, AnyAcc, Lock, Preserve)
     {
@@ -831,7 +737,6 @@
         W2IX,   8, 
         GPSI,   8
     }
-
     OperationRegion (HPBR, SystemMemory, 0xACFB9F18, 0x007E)
     Field (HPBR, AnyAcc, Lock, Preserve)
     {
@@ -848,12 +753,11 @@
         BPWO,   16, 
         PNLF,   8
     }
-
     Scope (\_GPE)
     {
-        Method (_L01, 0, NotSerialized)  // _Lxx: Level-Triggered GPE
+        Method (_L01, 0, NotSerialized)
         {
-            Add (L01C, 0x01, L01C) /* \L01C */
+            Add (L01C, 0x01, L01C)
             \_SB.PCI0.RP01.HPLG ()
             \_SB.PCI0.RP02.HPLG ()
             \_SB.PCI0.RP03.HPLG ()
@@ -863,42 +767,36 @@
             \_SB.PCI0.RP07.HPLG ()
             \_SB.PCI0.RP08.HPLG ()
         }
-
-        Method (_L02, 0, NotSerialized)  // _Lxx: Level-Triggered GPE
+        Method (_L02, 0, NotSerialized)
         {
-            Store (0x00, GPEC) /* \GPEC */
+            Store (0x00, GPEC)
             Store (SSCI, Local0)
             If (Local0)
             {
-                Store (0x00, SSCI) /* \SSCI */
+                Store (0x00, SSCI)
                 If (LEqual (Local0, 0x01))
                 {
                     VFN4 ()
                 }
-
                 If (LEqual (Local0, 0x04))
                 {
                     \_SB.WMID.WGWE (Local0, 0x00)
                 }
-
                 If (LEqual (Local0, 0x05))
                 {
                     \_SB.WMID.WGWE (Local0, 0x00)
                 }
-
                 If (LEqual (Local0, 0x03))
                 {
                     VBRE (0x87)
                 }
-
                 If (LEqual (Local0, 0x02))
                 {
                     VBRE (0x86)
                 }
             }
         }
-
-        Method (_L09, 0, NotSerialized)  // _Lxx: Level-Triggered GPE
+        Method (_L09, 0, NotSerialized)
         {
             \_SB.PCI0.RP01.PME ()
             \_SB.PCI0.RP02.PME ()
@@ -909,57 +807,49 @@
             \_SB.PCI0.RP07.PME ()
             \_SB.PCI0.RP08.PME ()
         }
-
-        Method (_L0B, 0, NotSerialized)  // _Lxx: Level-Triggered GPE
+        Method (_L0B, 0, NotSerialized)
         {
-            Notify (\_SB.PCI0.PCIB, 0x02) // Device Wake
+            Notify (\_SB.PCI0.PCIB, 0x02)
         }
-
-        Method (_L0D, 0, NotSerialized)  // _Lxx: Level-Triggered GPE
+        Method (_L0D, 0, NotSerialized)
         {
             If (\_SB.PCI0.EHC1.PMES)
             {
                 Store (0x01, \_SB.PCI0.EHC1.PMES)
-                Notify (\_SB.PCI0.EHC1, 0x02) // Device Wake
+                Notify (\_SB.PCI0.EHC1, 0x02)
             }
-
             If (\_SB.PCI0.EHC2.PMES)
             {
                 Store (0x01, \_SB.PCI0.EHC2.PMES)
-                Notify (\_SB.PCI0.EHC2, 0x02) // Device Wake
+                Notify (\_SB.PCI0.EHC2, 0x02)
             }
-
             If (\_SB.PCI0.HDEF.PMES)
             {
                 Store (0x01, \_SB.PCI0.HDEF.PMES)
-                Notify (\_SB.PCI0.HDEF, 0x02) // Device Wake
+                Notify (\_SB.PCI0.HDEF, 0x02)
             }
-
-            Notify (\_SB.PCI0.LANC, 0x02) // Device Wake
+            Notify (\_SB.PCI0.LANC, 0x02)
         }
-
-        Method (_L13, 0, NotSerialized)  // _Lxx: Level-Triggered GPE
+        Method (_L13, 0, NotSerialized)
         {
             And (GPIE, Not (0x08), Local0)
-            Store (Local0, GPIE) /* \GPIE */
+            Store (Local0, GPIE)
             Or (GPL3, 0x10, Local0)
-            Store (Local0, GPL3) /* \GPL3 */
+            Store (Local0, GPL3)
             Sleep (0x03E8)
-            Notify (\_SB.PCI0.SATA, 0x81) // Information Change
+            Notify (\_SB.PCI0.SATA, 0x81)
         }
-
-        Method (_L1D, 0, NotSerialized)  // _Lxx: Level-Triggered GPE
+        Method (_L1D, 0, NotSerialized)
         {
             XOr (GIV, 0x2000, Local0)
-            Store (Local0, GIV) /* \GIV_ */
+            Store (Local0, GIV)
             VDET ()
             \_SB.WMID.WGWE (0x01, 0x00)
             Sleep (0x03E8)
-            Notify (\_SB.PCI0.EHC2, 0x00) // Bus Check
-            Notify (\_SB.PCI0.SATA, 0x00) // Bus Check
+            Notify (\_SB.PCI0.EHC2, 0x00)
+            Notify (\_SB.PCI0.SATA, 0x00)
             DKET ()
         }
-
         Method (HWWP, 1, Serialized)
         {
             If (LOr (LEqual (INQW, 0x00), LEqual (Arg0, 0x01)))
@@ -969,24 +859,37 @@
                 {
                     Store (0x01, Local0)
                 }
-
                 \_SB.PCI0.LPCB.EC0.HWWP (Local0)
             }
         }
     }
-
     Scope (\_PR)
     {
-        Processor (CPU0, 0x00, 0x00000410, 0x06) {}
-        Processor (CPU1, 0x01, 0x00000410, 0x06) {}
-        Processor (CPU2, 0x02, 0x00000410, 0x06) {}
-        Processor (CPU3, 0x03, 0x00000410, 0x06) {}
-        Processor (CPU4, 0x04, 0x00000410, 0x06) {}
-        Processor (CPU5, 0x05, 0x00000410, 0x06) {}
-        Processor (CPU6, 0x06, 0x00000410, 0x06) {}
-        Processor (CPU7, 0x07, 0x00000410, 0x06) {}
+        Processor (CPU0, 0x00, 0x00000410, 0x06)
+        {
+        }
+        Processor (CPU1, 0x01, 0x00000410, 0x06)
+        {
+        }
+        Processor (CPU2, 0x02, 0x00000410, 0x06)
+        {
+        }
+        Processor (CPU3, 0x03, 0x00000410, 0x06)
+        {
+        }
+        Processor (CPU4, 0x04, 0x00000410, 0x06)
+        {
+        }
+        Processor (CPU5, 0x05, 0x00000410, 0x06)
+        {
+        }
+        Processor (CPU6, 0x06, 0x00000410, 0x06)
+        {
+        }
+        Processor (CPU7, 0x07, 0x00000410, 0x06)
+        {
+        }
     }
-
     Scope (\_TZ)
     {
         Name (TRPC, Package (0x05)
@@ -998,7 +901,6 @@
                 0x63, 
                 0x80
             }, 
-
             Package (0x04)
             {
                 0x65, 
@@ -1006,7 +908,6 @@
                 0x80, 
                 0x80
             }, 
-
             Package (0x04)
             {
                 0x80, 
@@ -1014,7 +915,6 @@
                 0x80, 
                 0x80
             }, 
-
             Package (0x04)
             {
                 0x80, 
@@ -1022,7 +922,6 @@
                 0x80, 
                 0x80
             }, 
-
             Package (0x04)
             {
                 0x36, 
@@ -1048,29 +947,28 @@
         })
         Method (TRUP, 0, Serialized)
         {
-            Name (_T_0, Zero)  // _T_x: Emitted by ASL Compiler
-            Store (PRDT, _T_0) /* \_TZ_.TRUP._T_0 */
+            Name (_T_0, Zero)
+            Store (PRDT, _T_0)
             If (LEqual (_T_0, 0x01))
             {
-                Store (0x10CC, MRPM) /* \_TZ_.MRPM */
+                Store (0x10CC, MRPM)
             }
             Else
             {
                 If (LEqual (_T_0, 0x02))
                 {
-                    Store (0x10CC, MRPM) /* \_TZ_.MRPM */
+                    Store (0x10CC, MRPM)
                     Store (CLSH, Index (TRPC, 0x01))
                 }
                 Else
                 {
                     If (LEqual (_T_0, 0x03))
                     {
-                        Store (0x10CC, MRPM) /* \_TZ_.MRPM */
+                        Store (0x10CC, MRPM)
                     }
                 }
             }
-
-            Store (0x10CC, MRPM) /* \_TZ_.MRPM */
+            Store (0x10CC, MRPM)
             If (LGreater (TJMX, 0x00))
             {
                 Subtract (TJMX, 0x01, Local0)
@@ -1080,13 +978,11 @@
                     ))
             }
         }
-
         Method (INTM, 1, Serialized)
         {
             Store (0x00, Local0)
             OTHI (Arg0)
         }
-
         Name (WHTR, 0x1F)
         Name (OSTH, 0x00)
         Name (LARE, Package (0x06) {})
@@ -1114,16 +1010,14 @@
                     Store (Local7, Index (DerefOf (Index (TRIP, Local0)), Local1))
                     Increment (Local1)
                 }
-
                 Increment (Local0)
             }
         }
-
         Method (RETD, 0, Serialized)
         {
             Acquire (THER, 0xFFFF)
-            Store (0x1F, THSC) /* \_TZ_.THSC */
-            Store (0x1F, WHTR) /* \_TZ_.WHTR */
+            Store (0x1F, THSC)
+            Store (0x1F, WHTR)
             Store (0x00, Local0)
             While (LLess (Local0, 0x06))
             {
@@ -1133,10 +1027,8 @@
                 Store (0x00, Index (LATR, Local0))
                 Increment (Local0)
             }
-
             Release (THER)
         }
-
         Method (OTHI, 1, Serialized)
         {
             ECTI (0x01)
@@ -1145,32 +1037,28 @@
                 NTHS (0x1F)
             }
         }
-
         Name (OTID, 0x00)
         Method (ECTI, 1, Serialized)
         {
             Store (0x00, Local0)
             If (LEqual (Arg0, 0x01))
             {
-                Store (0x01, OTID) /* \_TZ_.OTID */
+                Store (0x01, OTID)
             }
-
             If (LAnd (\_SB.PCI0.LPCB.EC0.ECRG, OTID))
             {
                 NTHS (0x1F)
-                Store (0x00, OTID) /* \_TZ_.OTID */
+                Store (0x00, OTID)
             }
         }
-
         Method (OSIT, 0, Serialized)
         {
             If (LEqual (OSTH, 0x00))
             {
                 \_TZ.INTM (0x00)
-                Store (0x01, OSTH) /* \_TZ_.OSTH */
+                Store (0x01, OSTH)
             }
         }
-
         Method (GETP, 2, Serialized)
         {
             Store (Arg1, Local0)
@@ -1182,19 +1070,16 @@
                     Store (0x00, Local0)
                 }
             }
-
             Store (DerefOf (Index (DerefOf (Index (TRIP, Arg0)), Local0)), 
                 Local2)
             Return (Local2)
         }
-
         Method (GETK, 1, Serialized)
         {
             Multiply (Arg0, 0x0A, Local0)
             Add (Local0, 0x0AAC, Local1)
             Return (Local1)
         }
-
         Method (GTTP, 5, Serialized)
         {
             Store (Arg2, Local1)
@@ -1205,7 +1090,6 @@
                 Store (\_SB.PCI0.LPCB.EC0.TEMP, Local1)
                 Release (\_SB.PCI0.LPCB.EC0.ECMX)
             }
-
             Store (Local1, Local2)
             If (LLess (Local1, Arg3))
             {
@@ -1213,7 +1097,6 @@
                 {
                     Store (Arg3, Index (LARP, Arg0))
                 }
-
                 Store (DerefOf (Index (LARP, Arg0)), Local1)
             }
             Else
@@ -1224,16 +1107,13 @@
                     {
                         Store (Arg4, Index (LARP, Arg0))
                     }
-
                     Store (DerefOf (Index (LARP, Arg0)), Local1)
                 }
             }
-
             Store (Local2, Index (LARE, Arg0))
             Store (Local1, Index (LARP, Arg0))
             Return (Local1)
         }
-
         Method (SETM, 3, Serialized)
         {
             Store (0x00, Local5)
@@ -1252,7 +1132,6 @@
                     {
                         Store (Arg2, Local4)
                     }
-
                     Store (DerefOf (Index (DerefOf (Index (TRPC, Arg0)), 0x00)), 
                         Local2)
                     Store (0x01, Local0)
@@ -1269,7 +1148,6 @@
                             Increment (Local0)
                         }
                     }
-
                     If (LEqual (Local0, 0x01))
                     {
                         If (LGreater (Arg2, Local2))
@@ -1280,7 +1158,6 @@
                             }
                         }
                     }
-
                     Store (DerefOf (Index (TRPC, Arg0)), Local3)
                     Store (SizeOf (Local3), Local4)
                     If (LAnd (LNotEqual (Local0, DerefOf (Index (CUZO, Arg0))), 
@@ -1296,23 +1173,17 @@
                             {
                                 Store (Local2, \_SB.PCI0.LPCB.EC0.PLTP)
                             }
-
                             Store (Local6, \_SB.PCI0.LPCB.EC0.PHTP)
                             Release (\_SB.PCI0.LPCB.EC0.ECMX)
                         }
-
                         Store (Local6, Index (LATR, Arg0))
                     }
-
-                    And (THSC, Not (Local7), THSC) /* \_TZ_.THSC */
+                    And (THSC, Not (Local7), THSC)
                 }
-
                 Release (THER)
             }
-
             Return (Local5)
         }
-
         Method (CHOT, 1, Serialized)
         {
             If (And (DTCD, 0x00020000))
@@ -1323,160 +1194,147 @@
             {
                 Store (GETP (Arg0, 0x02), Local0)
             }
-
             Return (Local0)
         }
-
         ThermalZone (CPUZ)
         {
-            Method (_HOT, 0, Serialized)  // _HOT: Hot Temperature
+            Method (_HOT, 0, Serialized)
             {
                 Return (CHOT (0x00))
             }
-
-            Method (_CRT, 0, Serialized)  // _CRT: Critical Temperature
+            Method (_CRT, 0, Serialized)
             {
                 Return (GETP (0x00, 0x03))
             }
-
-            Method (_TMP, 0, Serialized)  // _TMP: Temperature
+            Method (_TMP, 0, Serialized)
             {
-                \_TZ.OSIT ()
-                Store (0x00, Local0)
-                Store (GTTP (0x00, 0x01, 0x10, 0x00, 0x7F), Local0)
-                If (SETM (0x00, 0x01, Local0))
-                {
-                    Notify (\_TZ.CPUZ, 0x81) // Thermal Trip Point Change
-                }
-
+                Acquire (\_SB.PCI0.LPCB.EC0.ECMX, 0xFFFF)
+                Store (1, \_SB.PCI0.LPCB.EC0.CRZN)
+                Store (\_SB.PCI0.LPCB.EC0.DTMP, Local0)
+                Release (\_SB.PCI0.LPCB.EC0.ECMX)
                 Return (GETK (Local0))
             }
+            Method (_AC0, 0, Serialized) {
+                Return (GETK(75))
+            }
+            Name (_AL0, Package () {\_SB.PCI0.LPCB.FAN0})
+            Method (_AC1, 0, Serialized) {
+                Return (GETK(60))
+            }
+            Name (_AL1, Package () {\_SB.PCI0.LPCB.FAN0})
+            Method (_AC2, 0, Serialized) {
+                Return (GETK(45))
+            }
+            Name (_AL2, Package () {\_SB.PCI0.LPCB.FAN0})
+            Method (_TZP, 0, Serialized) {
+                Return (300)
+            }
         }
-
         ThermalZone (GFXZ)
         {
-            Method (_PSV, 0, NotSerialized)  // _PSV: Passive Temperature
+            Method (_PSV, 0, NotSerialized)
             {
                 Return (GETP (0x01, 0x01))
             }
-
-            Method (_PSL, 0, NotSerialized)  // _PSL: Passive List
+            Method (_PSL, 0, NotSerialized)
             {
                 Return (PSL ())
             }
-
-            Name (_TSP, 0x012C)  // _TSP: Thermal Sampling Period
-            Name (_TC1, 0x01)  // _TC1: Thermal Constant 1
-            Name (_TC2, 0x02)  // _TC2: Thermal Constant 2
-            Method (_CRT, 0, Serialized)  // _CRT: Critical Temperature
+            Name (_TSP, 0x012C)
+            Name (_TC1, 0x01)
+            Name (_TC2, 0x02)
+            Method (_CRT, 0, Serialized)
             {
                 Return (GETP (0x01, 0x03))
             }
-
-            Method (_TMP, 0, Serialized)  // _TMP: Temperature
+            Method (_TMP, 0, Serialized)
             {
                 Store (0x00, Local0)
                 Store (GTTP (0x01, 0x02, 0x10, 0x00, 0x7F), Local0)
                 If (SETM (0x01, 0x02, Local0))
                 {
-                    Notify (\_TZ.GFXZ, 0x81) // Thermal Trip Point Change
+                    Notify (\_TZ.GFXZ, 0x81)
                 }
-
                 Return (GETK (Local0))
             }
         }
-
         ThermalZone (EXTZ)
         {
-            Method (_CRT, 0, Serialized)  // _CRT: Critical Temperature
+            Method (_CRT, 0, Serialized)
             {
                 Return (GETP (0x02, 0x03))
             }
-
-            Method (_TMP, 0, Serialized)  // _TMP: Temperature
+            Method (_TMP, 0, Serialized)
             {
                 Store (0x00, Local0)
                 Store (GTTP (0x02, 0x03, 0x10, 0x00, 0x7F), Local0)
                 Return (GETK (Local0))
             }
         }
-
         ThermalZone (LOCZ)
         {
-            Method (_CRT, 0, Serialized)  // _CRT: Critical Temperature
+            Method (_CRT, 0, Serialized)
             {
                 Return (GETP (0x03, 0x03))
             }
-
-            Method (_TMP, 0, Serialized)  // _TMP: Temperature
+            Method (_TMP, 0, Serialized)
             {
                 Store (0x00, Local0)
                 Store (GTTP (0x03, 0x04, 0x10, 0x00, 0x7F), Local0)
                 Return (GETK (Local0))
             }
         }
-
         ThermalZone (BATZ)
         {
-            Method (_PSV, 0, NotSerialized)  // _PSV: Passive Temperature
+            Method (_PSV, 0, NotSerialized)
             {
                 Return (GETP (0x04, 0x01))
             }
-
-            Method (_PSL, 0, NotSerialized)  // _PSL: Passive List
+            Method (_PSL, 0, NotSerialized)
             {
                 Return (PSL ())
             }
-
-            Name (_TSP, 0x012C)  // _TSP: Thermal Sampling Period
-            Name (_TC1, 0x32)  // _TC1: Thermal Constant 1
-            Name (_TC2, 0x00)  // _TC2: Thermal Constant 2
-            Method (_CRT, 0, Serialized)  // _CRT: Critical Temperature
+            Name (_TSP, 0x012C)
+            Name (_TC1, 0x32)
+            Name (_TC2, 0x00)
+            Method (_CRT, 0, Serialized)
             {
                 Return (GETP (0x04, 0x03))
             }
-
-            Method (_TMP, 0, Serialized)  // _TMP: Temperature
+            Method (_TMP, 0, Serialized)
             {
                 Store (0x00, Local0)
                 Store (GTTP (0x04, 0x05, 0x00, 0x00, 0x7F), Local0)
                 If (SETM (0x04, 0x05, Local0))
                 {
-                    Notify (\_TZ.BATZ, 0x81) // Thermal Trip Point Change
+                    Notify (\_TZ.BATZ, 0x81)
                 }
-
                 Return (GETK (Local0))
             }
         }
-
         Method (NTHS, 1, Serialized)
         {
             If (And (Arg0, 0x01))
             {
-                Notify (CPUZ, 0x80) // Thermal Status Change
+                Notify (CPUZ, 0x80)
             }
-
             If (And (Arg0, 0x02))
             {
-                Notify (GFXZ, 0x80) // Thermal Status Change
+                Notify (GFXZ, 0x80)
             }
-
             If (And (Arg0, 0x04))
             {
-                Notify (EXTZ, 0x80) // Thermal Status Change
+                Notify (EXTZ, 0x80)
             }
-
             If (And (Arg0, 0x08))
             {
-                Notify (LOCZ, 0x80) // Thermal Status Change
+                Notify (LOCZ, 0x80)
             }
-
             If (And (Arg0, 0x10))
             {
-                Notify (BATZ, 0x80) // Thermal Status Change
+                Notify (BATZ, 0x80)
             }
         }
-
         Method (ECTE, 1, Serialized)
         {
             Store (0x00, Local1)
@@ -1486,22 +1344,18 @@
                 {
                     Or (Local1, 0x01, Local1)
                 }
-
                 If (And (Arg0, 0x02))
                 {
                     Or (Local1, 0x02, Local1)
                 }
-
                 If (And (Arg0, 0x04))
                 {
                     Or (Local1, 0x04, Local1)
                 }
-
                 If (And (Arg0, 0x08))
                 {
                     Or (Local1, 0x08, Local1)
                 }
-
                 If (And (Arg0, 0x10))
                 {
                     Or (Local1, 0x10, Local1)
@@ -1511,13 +1365,11 @@
             {
                 Or (Local1, 0x10, Local1)
             }
-
             Acquire (THER, 0xFFFF)
-            Or (THSC, Local1, THSC) /* \_TZ_.THSC */
+            Or (THSC, Local1, THSC)
             Release (THER)
             NTHS (Local1)
         }
-
         Method (GFRM, 0, Serialized)
         {
             Store (0x00, Local0)
@@ -1533,10 +1385,8 @@
                     Divide (Local2, Local0, Local1, Local0)
                 }
             }
-
             Return (Local0)
         }
-
         Method (GTRM, 0, Serialized)
         {
             Store (0x00, Local0)
@@ -1552,10 +1402,8 @@
                     Divide (Local2, Local0, Local1, Local0)
                 }
             }
-
             Return (Local0)
         }
-
         Method (GFSD, 0, Serialized)
         {
             Store (GFRM (), Local0)
@@ -1563,7 +1411,6 @@
             Divide (Local1, MRPM, Local1, Local2)
             Return (Local2)
         }
-
         Method (CTCT, 1, Serialized)
         {
             Multiply (Arg0, MRPM, Local1)
@@ -1574,15 +1421,12 @@
                 Add (0x0003C000, Local1, Local2)
                 Divide (Local2, Local0, Local1, Local0)
             }
-
             If (LGreater (Local0, 0xF4))
             {
                 Store (0xF4, Local0)
             }
-
             Return (Local0)
         }
-
         Method (PSL, 0, Serialized)
         {
             If (And (CFGD, 0x01000000))
@@ -1601,7 +1445,6 @@
                         \_PR.CPU7
                     })
                 }
-
                 If (LEqual (TCNT, 0x04))
                 {
                     Return (Package (0x04)
@@ -1612,7 +1455,6 @@
                         \_PR.CPU3
                     })
                 }
-
                 Return (Package (0x02)
                 {
                     \_PR.CPU0, 
@@ -1627,15 +1469,13 @@
                 })
             }
         }
-
         ThermalZone (PCHZ)
         {
-            Method (_CRT, 0, Serialized)  // _CRT: Critical Temperature
+            Method (_CRT, 0, Serialized)
             {
                 Return (0x0FAC)
             }
-
-            Method (_TMP, 0, Serialized)  // _TMP: Temperature
+            Method (_TMP, 0, Serialized)
             {
                 Store (0x00, Local0)
                 Store (GTTP (0x05, 0x00, PCHT, 0x00, 0x7F), Local0)
@@ -1645,11 +1485,9 @@
                 {
                     Store (Local1, Local0)
                 }
-
                 Return (GETK (Local0))
             }
         }
-
         Method (GDTP, 2, Serialized)
         {
             If (LOr (Arg1, DTZS ()))
@@ -1671,7 +1509,6 @@
                         And (Local0, 0xFF, Local0)
                     }
                 }
-
                 Return (\_TZ.GETK (Local0))
             }
             Else
@@ -1679,54 +1516,45 @@
                 Return (0x0AAC)
             }
         }
-
         Method (DTZS, 0, NotSerialized)
         {
             If (And (DTCD, 0x00010000))
             {
                 Return (0x0F)
             }
-
             Return (0x00)
         }
-
         ThermalZone (DM1Z)
         {
-            Method (_STA, 0, NotSerialized)  // _STA: Status
+            Method (_STA, 0, NotSerialized)
             {
                 Return (DTZS ())
             }
-
-            Method (_TMP, 0, Serialized)  // _TMP: Temperature
+            Method (_TMP, 0, Serialized)
             {
                 Return (GDTP (0x30, 0x00))
             }
-
-            Method (_CRT, 0, Serialized)  // _CRT: Critical Temperature
+            Method (_CRT, 0, Serialized)
             {
                 Return (0x0FAC)
             }
         }
-
         ThermalZone (DM2Z)
         {
-            Method (_STA, 0, NotSerialized)  // _STA: Status
+            Method (_STA, 0, NotSerialized)
             {
                 Return (DTZS ())
             }
-
-            Method (_TMP, 0, Serialized)  // _TMP: Temperature
+            Method (_TMP, 0, Serialized)
             {
                 Return (GDTP (0x34, 0x00))
             }
-
-            Method (_CRT, 0, Serialized)  // _CRT: Critical Temperature
+            Method (_CRT, 0, Serialized)
             {
                 Return (0x0FAC)
             }
         }
     }
-
     Name (\NIST, Package (0x10)
     {
         "0", 
@@ -1760,10 +1588,8 @@
             ShiftRight (Local0, 0x04, Local0)
             Decrement (Local4)
         }
-
         Return (Local7)
     }
-
     Method (\SRCP, 2, NotSerialized)
     {
         Store (SizeOf (Arg0), Local7)
@@ -1771,11 +1597,10 @@
         {
             Return (0x00)
         }
-
         Name (ST00, Buffer (Local7) {})
         Name (ST01, Buffer (Local7) {})
-        Store (Arg0, ST00) /* \SRCP.ST00 */
-        Store (Arg1, ST01) /* \SRCP.ST01 */
+        Store (Arg0, ST00)
+        Store (Arg1, ST01)
         Store (0x00, Local6)
         Store (0x01, Local0)
         While (LAnd (LNotEqual (Local6, Local7), Local0))
@@ -1788,10 +1613,8 @@
                 Store (0x00, Local0)
             }
         }
-
         Return (Local0)
     }
-
     Name (WOSI, 0xFF)
     Name (OSID, Package (0x03)
     {
@@ -1803,8 +1626,8 @@
     {
         Name (ST00, Buffer (0x8C) {})
         Name (ST01, Buffer (0x8C) {})
-        Store (Arg0, ST00) /* \SRCM.ST00 */
-        Store (Arg1, ST01) /* \SRCM.ST01 */
+        Store (Arg0, ST00)
+        Store (Arg1, ST01)
         Store (0x00, Local6)
         Store (0x01, Local0)
         While (LAnd (LNotEqual (Local6, Arg2), Local0))
@@ -1817,10 +1640,8 @@
                 Store (0x00, Local0)
             }
         }
-
         Return (Local0)
     }
-
     Method (WCOS, 0, Serialized)
     {
         If (LEqual (WOSI, 0xFF))
@@ -1833,56 +1654,47 @@
                 Store (\SRCP (Local0, DerefOf (Index (OSID, Local1))), Local2)
                 If (Local2)
                 {
-                    Add (Local1, 0x01, WOSI) /* \WOSI */
+                    Add (Local1, 0x01, WOSI)
                 }
                 Else
                 {
                     Increment (Local1)
                 }
             }
-
             If (LEqual (WOSI, 0xFF))
             {
-                Store (0x00, WOSI) /* \WOSI */
+                Store (0x00, WOSI)
             }
-
             If (LOr (LEqual (WOSI, 0x00), LEqual (WOSI, 0x03)))
             {
                 If (CondRefOf (\_OSI, Local0))
                 {
                     If (\_OSI ("Windows 2001"))
                     {
-                        Store (0x04, WOSI) /* \WOSI */
+                        Store (0x04, WOSI)
                     }
-
                     If (\_OSI ("Windows 2001 SP1"))
                     {
-                        Store (0x04, WOSI) /* \WOSI */
+                        Store (0x04, WOSI)
                     }
-
                     If (\_OSI ("Windows 2001 SP2"))
                     {
-                        Store (0x05, WOSI) /* \WOSI */
+                        Store (0x05, WOSI)
                     }
-
                     If (\_OSI ("Windows 2006"))
                     {
-                        Store (0x06, WOSI) /* \WOSI */
+                        Store (0x06, WOSI)
                     }
-
                     If (\_OSI ("Windows 2009"))
                     {
-                        Store (0x07, WOSI) /* \WOSI */
+                        Store (0x07, WOSI)
                     }
                 }
             }
-
-            Store (WOSI, WHOS) /* \WHOS */
+            Store (WOSI, WHOS)
         }
-
-        Return (WOSI) /* \WOSI */
+        Return (WOSI)
     }
-
     Method (UPRW, 2, Serialized)
     {
         Store (Package (0x02)
@@ -1895,10 +1707,8 @@
         {
             Store (Arg1, Index (Local0, 0x01))
         }
-
         Return (Local0)
     }
-
     Name (EUPC, Package (0x04)
     {
         0xFF, 
@@ -1908,8 +1718,8 @@
     })
     Name (EPLD, Buffer (0x10)
     {
-        /* 0000 */  0x81, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,  /* ........ */
-        /* 0008 */  0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   /* 0....... */
+        /* 0000 */   0x81, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
+        /* 0008 */   0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
     })
     Method (CBRT, 2, Serialized)
     {
@@ -1920,13 +1730,11 @@
             Store (Arg1, Local0)
             Return (Local0)
         }
-
         If (LEqual (Local7, 0x00))
         {
             Store (Arg0, Local0)
             Return (Local0)
         }
-
         Add (Local7, Local6, Local1)
         Subtract (Local1, 0x02, Local1)
         Store (Buffer (Local1) {}, Local0)
@@ -1936,7 +1744,6 @@
             Store (DerefOf (Index (Arg0, Local1)), Index (Local0, Local1))
             Increment (Local1)
         }
-
         Subtract (Local1, 0x02, Local1)
         Store (0x00, Local2)
         While (LLess (Local2, SizeOf (Arg1)))
@@ -1945,10 +1752,8 @@
             Increment (Local1)
             Increment (Local2)
         }
-
         Return (Local0)
     }
-
     Scope (\_SB)
     {
         Mutex (MSMI, 0x00)
@@ -1959,23 +1764,20 @@
             {
                 Acquire (\_GL, 0xFFFF)
             }
-
-            ShiftLeft (Arg0, 0x10, EAX) /* \EAX_ */
-            Store (Arg1, EBX) /* \EBX_ */
-            Store (Arg2, ECX) /* \ECX_ */
-            Store (Arg3, EDX) /* \EDX_ */
-            Store (0x00, REFS) /* \REFS */
+            ShiftLeft (Arg0, 0x10, EAX)
+            Store (Arg1, EBX)
+            Store (Arg2, ECX)
+            Store (Arg3, EDX)
+            Store (0x00, REFS)
             \_SB.PCI0.GSWS (Arg0)
             Store (REFS, Local0)
             If (Arg4)
             {
                 Release (\_GL)
             }
-
             Release (MSMI)
             Return (Local0)
         }
-
         Name (BCLI, 0x00)
         Name (BCLS, Package (0x03)
         {
@@ -1996,20 +1798,18 @@
             {
                 If (LGreater (\WCOS (), 0x06))
                 {
-                    Store (BCCT, BRCT) /* \BRCT */
+                    Store (BCCT, BRCT)
                 }
-
                 Store (0x00, Local7)
                 If (LGreaterEqual (BRCT, 0x15))
                 {
-                    Store (0x01, BCLI) /* \_SB_.BCLI */
+                    Store (0x01, BCLI)
                     Store (0x01, Local7)
                     If (LEqual (BRCT, 0x19))
                     {
-                        Store (0x02, BCLI) /* \_SB_.BCLI */
+                        Store (0x02, BCLI)
                     }
                 }
-
                 Store (0x00, Local1)
                 If (And (DCAP, 0x10))
                 {
@@ -2026,7 +1826,6 @@
                         {
                             Store (DerefOf (Index (Local4, Local1)), Local3)
                         }
-
                         Store (DerefOf (Index (Local0, Local3)), Local2)
                         Multiply (Local2, 0x64, Local3)
                         Divide (Add (Local3, 0x7F), 0xFF, Local6, Local2)
@@ -2036,10 +1835,8 @@
                         {
                             Store (Local2, Local5)
                         }
-
                         Increment (Local1)
                     }
-
                     ShiftRight (BRCT, 0x01, Local3)
                     Store (DerefOf (Index (DerefOf (Index (BCLS, BCLI)), Local3)), 
                         Index (DerefOf (Index (BCLS, BCLI)), 0x01))
@@ -2060,13 +1857,11 @@
                             Store (DerefOf (Index (Local0, Subtract (Local1, 0x02))), Local3)
                             Add (Local3, 0x02, Local3)
                         }
-
                         Store (DerefOf (Index (Local4, Local3)), Local2)
                         Store (Local2, Index (DerefOf (Index (BCLS, BCLI)), Local1))
                         Increment (Local1)
                     }
                 }
-
                 Store (BRNT, Local0)
                 Store (BMAP, Local1)
                 Store (0x00, Local2)
@@ -2080,7 +1875,6 @@
                     {
                         Store (DerefOf (Index (Local1, Local2)), Local3)
                     }
-
                     ShiftLeft (Local3, 0x01, Local3)
                     ShiftLeft (Local2, 0x01, Local5)
                     Store (DerefOf (Index (Local0, Local3)), Local4)
@@ -2090,46 +1884,38 @@
                         0x01)))
                     Increment (Local2)
                 }
-
-                Store (0x01, BCLC) /* \_SB_.BCLC */
+                Store (0x01, BCLC)
             }
-
             Return (DerefOf (Index (BCLS, BCLI)))
         }
-
         Name (BRIG, 0x64)
         Method (BCM, 1, Serialized)
         {
             Store (0x00, Local0)
             If (LGreater (\WCOS (), 0x05))
             {
-                Or (WDPE, 0x40, WDPE) /* \WDPE */
+                Or (WDPE, 0x40, WDPE)
                 Store (0x01, Local0)
             }
-
-            Store (Arg0, BRIG) /* \_SB_.BRIG */
+            Store (Arg0, BRIG)
             Store (Match (DerefOf (Index (BCLS, BCLI)), MGE, Arg0, MTR, 
                 0x00, 0x02), Local1)
             If (LEqual (Local1, Ones))
             {
                 Subtract (SizeOf (DerefOf (Index (BCLS, BCLI))), 0x01, Local1)
             }
-
             Subtract (Local1, 0x02, Local1)
             If (Local0)
             {
-                Store (Local1, BRID) /* \BRID */
+                Store (Local1, BRID)
             }
-
             Return (Local0)
         }
-
         Method (BQC, 0, Serialized)
         {
             Store (BRIG, Local0)
             Return (Local0)
         }
-
         Method (HDDC, 1, Serialized)
         {
             If (LEqual (Arg0, 0x02))
@@ -2148,10 +1934,8 @@
                     Increment (Local2)
                 }
             }
-
             Return (Local1)
         }
-
         Method (SBRC, 0, Serialized)
         {
             Store (BRID, Local0)
@@ -2160,49 +1944,43 @@
             {
                 Store (Local4, Local0)
             }
-
             If (LLess (BRID, 0x00))
             {
                 Store (0x00, Local0)
             }
-
             Store (BRLV, Local2)
             Store (BMAP, Local5)
             If (LEqual (BRCT, 0x0B))
             {
                 Store (DerefOf (Index (Local5, Local0)), Local0)
             }
-
             Store (DerefOf (Index (Local2, Local0)), Local1)
             Store (Local1, Debug)
             Return (Local1)
         }
     }
-
     Scope (\_SB)
     {
         Device (PCI0)
         {
-            Name (_HPP, Package (0x04)  // _HPP: Hot Plug Parameters
+            Name (_HPP, Package (0x04)
             {
                 0x10, 
                 0x40, 
                 0x00, 
                 0x00
             })
-            Method (_S3D, 0, NotSerialized)  // _S3D: S3 Device State
+            Method (_S3D, 0, NotSerialized)
             {
                 Return (0x02)
             }
-
-            Method (_S4D, 0, NotSerialized)  // _S4D: S4 Device State
+            Method (_S4D, 0, NotSerialized)
             {
                 Return (0x02)
             }
-
-            Name (_HID, EisaId ("PNP0A08") /* PCI Express Bus */)  // _HID: Hardware ID
-            Name (_CID, EisaId ("PNP0A03") /* PCI Bus */)  // _CID: Compatible ID
-            Name (_ADR, 0x00)  // _ADR: Address
+            Name (_HID, EisaId ("PNP0A08"))
+            Name (_CID, EisaId ("PNP0A03"))
+            Name (_ADR, 0x00)
             OperationRegion (HBUS, PCI_Config, 0x00, 0x0100)
             Field (HBUS, DWordAcc, NoLock, Preserve)
             {
@@ -2268,12 +2046,10 @@
                     ,   7, 
                 HTSE,   1
             }
-
             OperationRegion (MCHT, SystemMemory, 0xFED10000, 0x1100)
             Field (MCHT, ByteAcc, NoLock, Preserve)
             {
             }
-
             Name (BUF0, ResourceTemplate ()
             {
                 WordBusNumber (ResourceProducer, MinFixed, MaxFixed, PosDecode,
@@ -2402,18 +2178,18 @@
                     0x00010000,         // Length
                     ,, _Y0D, AddressRangeMemory, TypeStatic)
                 DWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, Cacheable, ReadWrite,
-                    0x00000000,         // Granularity
-                    0x00000000,         // Range Minimum
-                    0x00000000,         // Range Maximum
-                    0x00000000,         // Translation Offset
-                    0x00000000,         // Length
+     0x00000000,         // Granularity
+     0x00000000,         // Range Minimum
+     0x00000000,         // Range Maximum
+     0x00000000,         // Translation Offset
+     0x00000001,         // Length
                     ,, _Y0E, AddressRangeMemory, TypeStatic)
                 DWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, Cacheable, ReadWrite,
-                    0x00000000,         // Granularity
-                    0x00000000,         // Range Minimum
-                    0xFEDFFFFF,         // Range Maximum
-                    0x00000000,         // Translation Offset
-                    0x00000000,         // Length
+     0x00000000,         // Granularity
+     0x00000000,         // Range Minimum
+     0xFEDFFFFF,         // Range Maximum
+     0x00000000,         // Translation Offset
+     0xFEE00000,         // Length
                     ,, _Y0F, AddressRangeMemory, TypeStatic)
                 DWordMemory (ResourceProducer, PosDecode, MinFixed, MaxFixed, Cacheable, ReadWrite,
                     0x00000000,         // Granularity
@@ -2423,188 +2199,161 @@
                     0x011FF000,         // Length
                     ,, , AddressRangeMemory, TypeStatic)
             })
-            Method (_CRS, 0, Serialized)  // _CRS: Current Resource Settings
+            Method (_CRS, 0, Serialized)
             {
-                CreateWordField (BUF0, \_SB.PCI0._Y00._MAX, PBMX)  // _MAX: Maximum Base Address
-                Store (Subtract (ShiftRight (0x04000000, 0x14), 0x02), PBMX) /* \_SB_.PCI0._CRS.PBMX */
-                CreateWordField (BUF0, \_SB.PCI0._Y00._LEN, PBLN)  // _LEN: Length
-                Store (Subtract (ShiftRight (0x04000000, 0x14), 0x01), PBLN) /* \_SB_.PCI0._CRS.PBLN */
+                CreateWordField (BUF0, \_SB.PCI0._Y00._MAX, PBMX)
+                Store (Subtract (ShiftRight (0x04000000, 0x14), 0x02), PBMX)
+                CreateWordField (BUF0, \_SB.PCI0._Y00._LEN, PBLN)
+                Store (Subtract (ShiftRight (0x04000000, 0x14), 0x01), PBLN)
                 If (PM1L)
                 {
-                    CreateDWordField (BUF0, \_SB.PCI0._Y01._LEN, C0LN)  // _LEN: Length
-                    Store (Zero, C0LN) /* \_SB_.PCI0._CRS.C0LN */
+                    CreateDWordField (BUF0, \_SB.PCI0._Y01._LEN, C0LN)
+                    Store (Zero, C0LN)
                 }
-
                 If (LEqual (PM1L, 0x01))
                 {
-                    CreateBitField (BUF0, \_SB.PCI0._Y01._RW, C0RW)  // _RW_: Read-Write Status
-                    Store (Zero, C0RW) /* \_SB_.PCI0._CRS.C0RW */
+                    CreateBitField (BUF0, \_SB.PCI0._Y01._RW, C0RW)
+                    Store (Zero, C0RW)
                 }
-
                 If (PM1H)
                 {
-                    CreateDWordField (BUF0, \_SB.PCI0._Y02._LEN, C4LN)  // _LEN: Length
-                    Store (Zero, C4LN) /* \_SB_.PCI0._CRS.C4LN */
+                    CreateDWordField (BUF0, \_SB.PCI0._Y02._LEN, C4LN)
+                    Store (Zero, C4LN)
                 }
-
                 If (LEqual (PM1H, 0x01))
                 {
-                    CreateBitField (BUF0, \_SB.PCI0._Y02._RW, C4RW)  // _RW_: Read-Write Status
-                    Store (Zero, C4RW) /* \_SB_.PCI0._CRS.C4RW */
+                    CreateBitField (BUF0, \_SB.PCI0._Y02._RW, C4RW)
+                    Store (Zero, C4RW)
                 }
-
                 If (PM2L)
                 {
-                    CreateDWordField (BUF0, \_SB.PCI0._Y03._LEN, C8LN)  // _LEN: Length
-                    Store (Zero, C8LN) /* \_SB_.PCI0._CRS.C8LN */
+                    CreateDWordField (BUF0, \_SB.PCI0._Y03._LEN, C8LN)
+                    Store (Zero, C8LN)
                 }
-
                 If (LEqual (PM2L, 0x01))
                 {
-                    CreateBitField (BUF0, \_SB.PCI0._Y03._RW, C8RW)  // _RW_: Read-Write Status
-                    Store (Zero, C8RW) /* \_SB_.PCI0._CRS.C8RW */
+                    CreateBitField (BUF0, \_SB.PCI0._Y03._RW, C8RW)
+                    Store (Zero, C8RW)
                 }
-
                 If (PM2H)
                 {
-                    CreateDWordField (BUF0, \_SB.PCI0._Y04._LEN, CCLN)  // _LEN: Length
-                    Store (Zero, CCLN) /* \_SB_.PCI0._CRS.CCLN */
+                    CreateDWordField (BUF0, \_SB.PCI0._Y04._LEN, CCLN)
+                    Store (Zero, CCLN)
                 }
-
                 If (LEqual (PM2H, 0x01))
                 {
-                    CreateBitField (BUF0, \_SB.PCI0._Y04._RW, CCRW)  // _RW_: Read-Write Status
-                    Store (Zero, CCRW) /* \_SB_.PCI0._CRS.CCRW */
+                    CreateBitField (BUF0, \_SB.PCI0._Y04._RW, CCRW)
+                    Store (Zero, CCRW)
                 }
-
                 If (PM3L)
                 {
-                    CreateDWordField (BUF0, \_SB.PCI0._Y05._LEN, D0LN)  // _LEN: Length
-                    Store (Zero, D0LN) /* \_SB_.PCI0._CRS.D0LN */
+                    CreateDWordField (BUF0, \_SB.PCI0._Y05._LEN, D0LN)
+                    Store (Zero, D0LN)
                 }
-
                 If (LEqual (PM3L, 0x01))
                 {
-                    CreateBitField (BUF0, \_SB.PCI0._Y05._RW, D0RW)  // _RW_: Read-Write Status
-                    Store (Zero, D0RW) /* \_SB_.PCI0._CRS.D0RW */
+                    CreateBitField (BUF0, \_SB.PCI0._Y05._RW, D0RW)
+                    Store (Zero, D0RW)
                 }
-
                 If (PM3H)
                 {
-                    CreateDWordField (BUF0, \_SB.PCI0._Y06._LEN, D4LN)  // _LEN: Length
-                    Store (Zero, D4LN) /* \_SB_.PCI0._CRS.D4LN */
+                    CreateDWordField (BUF0, \_SB.PCI0._Y06._LEN, D4LN)
+                    Store (Zero, D4LN)
                 }
-
                 If (LEqual (PM3H, 0x01))
                 {
-                    CreateBitField (BUF0, \_SB.PCI0._Y06._RW, D4RW)  // _RW_: Read-Write Status
-                    Store (Zero, D4RW) /* \_SB_.PCI0._CRS.D4RW */
+                    CreateBitField (BUF0, \_SB.PCI0._Y06._RW, D4RW)
+                    Store (Zero, D4RW)
                 }
-
                 If (PM4L)
                 {
-                    CreateDWordField (BUF0, \_SB.PCI0._Y07._LEN, D8LN)  // _LEN: Length
-                    Store (Zero, D8LN) /* \_SB_.PCI0._CRS.D8LN */
+                    CreateDWordField (BUF0, \_SB.PCI0._Y07._LEN, D8LN)
+                    Store (Zero, D8LN)
                 }
-
                 If (LEqual (PM4L, 0x01))
                 {
-                    CreateBitField (BUF0, \_SB.PCI0._Y07._RW, D8RW)  // _RW_: Read-Write Status
-                    Store (Zero, D8RW) /* \_SB_.PCI0._CRS.D8RW */
+                    CreateBitField (BUF0, \_SB.PCI0._Y07._RW, D8RW)
+                    Store (Zero, D8RW)
                 }
-
                 If (PM4H)
                 {
-                    CreateDWordField (BUF0, \_SB.PCI0._Y08._LEN, DCLN)  // _LEN: Length
-                    Store (Zero, DCLN) /* \_SB_.PCI0._CRS.DCLN */
+                    CreateDWordField (BUF0, \_SB.PCI0._Y08._LEN, DCLN)
+                    Store (Zero, DCLN)
                 }
-
                 If (LEqual (PM4H, 0x01))
                 {
-                    CreateBitField (BUF0, \_SB.PCI0._Y08._RW, DCRW)  // _RW_: Read-Write Status
-                    Store (Zero, DCRW) /* \_SB_.PCI0._CRS.DCRW */
+                    CreateBitField (BUF0, \_SB.PCI0._Y08._RW, DCRW)
+                    Store (Zero, DCRW)
                 }
-
                 If (PM5L)
                 {
-                    CreateDWordField (BUF0, \_SB.PCI0._Y09._LEN, E0LN)  // _LEN: Length
-                    Store (Zero, E0LN) /* \_SB_.PCI0._CRS.E0LN */
+                    CreateDWordField (BUF0, \_SB.PCI0._Y09._LEN, E0LN)
+                    Store (Zero, E0LN)
                 }
-
                 If (LEqual (PM5L, 0x01))
                 {
-                    CreateBitField (BUF0, \_SB.PCI0._Y09._RW, E0RW)  // _RW_: Read-Write Status
-                    Store (Zero, E0RW) /* \_SB_.PCI0._CRS.E0RW */
+                    CreateBitField (BUF0, \_SB.PCI0._Y09._RW, E0RW)
+                    Store (Zero, E0RW)
                 }
-
                 If (PM5H)
                 {
-                    CreateDWordField (BUF0, \_SB.PCI0._Y0A._LEN, E4LN)  // _LEN: Length
-                    Store (Zero, E4LN) /* \_SB_.PCI0._CRS.E4LN */
+                    CreateDWordField (BUF0, \_SB.PCI0._Y0A._LEN, E4LN)
+                    Store (Zero, E4LN)
                 }
-
                 If (LEqual (PM5H, 0x01))
                 {
-                    CreateBitField (BUF0, \_SB.PCI0._Y0A._RW, E4RW)  // _RW_: Read-Write Status
-                    Store (Zero, E4RW) /* \_SB_.PCI0._CRS.E4RW */
+                    CreateBitField (BUF0, \_SB.PCI0._Y0A._RW, E4RW)
+                    Store (Zero, E4RW)
                 }
-
                 If (PM6L)
                 {
-                    CreateDWordField (BUF0, \_SB.PCI0._Y0B._LEN, E8LN)  // _LEN: Length
-                    Store (Zero, E8LN) /* \_SB_.PCI0._CRS.E8LN */
+                    CreateDWordField (BUF0, \_SB.PCI0._Y0B._LEN, E8LN)
+                    Store (Zero, E8LN)
                 }
-
                 If (LEqual (PM6L, 0x01))
                 {
-                    CreateBitField (BUF0, \_SB.PCI0._Y0B._RW, E8RW)  // _RW_: Read-Write Status
-                    Store (Zero, E8RW) /* \_SB_.PCI0._CRS.E8RW */
+                    CreateBitField (BUF0, \_SB.PCI0._Y0B._RW, E8RW)
+                    Store (Zero, E8RW)
                 }
-
                 If (PM6H)
                 {
-                    CreateDWordField (BUF0, \_SB.PCI0._Y0C._LEN, ECLN)  // _LEN: Length
-                    Store (Zero, ECLN) /* \_SB_.PCI0._CRS.ECLN */
+                    CreateDWordField (BUF0, \_SB.PCI0._Y0C._LEN, ECLN)
+                    Store (Zero, ECLN)
                 }
-
                 If (LEqual (PM6H, 0x01))
                 {
-                    CreateBitField (BUF0, \_SB.PCI0._Y0C._RW, ECRW)  // _RW_: Read-Write Status
-                    Store (Zero, ECRW) /* \_SB_.PCI0._CRS.ECRW */
+                    CreateBitField (BUF0, \_SB.PCI0._Y0C._RW, ECRW)
+                    Store (Zero, ECRW)
                 }
-
                 If (PM0H)
                 {
-                    CreateDWordField (BUF0, \_SB.PCI0._Y0D._LEN, F0LN)  // _LEN: Length
-                    Store (Zero, F0LN) /* \_SB_.PCI0._CRS.F0LN */
+                    CreateDWordField (BUF0, \_SB.PCI0._Y0D._LEN, F0LN)
+                    Store (Zero, F0LN)
                 }
-
                 If (LEqual (PM0H, 0x01))
                 {
-                    CreateBitField (BUF0, \_SB.PCI0._Y0D._RW, F0RW)  // _RW_: Read-Write Status
-                    Store (Zero, F0RW) /* \_SB_.PCI0._CRS.F0RW */
+                    CreateBitField (BUF0, \_SB.PCI0._Y0D._RW, F0RW)
+                    Store (Zero, F0RW)
                 }
-
-                CreateDWordField (BUF0, \_SB.PCI0._Y0E._MIN, M1MN)  // _MIN: Minimum Base Address
-                CreateDWordField (BUF0, \_SB.PCI0._Y0E._MAX, M1MX)  // _MAX: Maximum Base Address
-                CreateDWordField (BUF0, \_SB.PCI0._Y0E._LEN, M1LN)  // _LEN: Length
-                ShiftLeft (TLUD, 0x14, M1MN) /* \_SB_.PCI0._CRS.M1MN */
+                CreateDWordField (BUF0, \_SB.PCI0._Y0E._MIN, M1MN)
+                CreateDWordField (BUF0, \_SB.PCI0._Y0E._MAX, M1MX)
+                CreateDWordField (BUF0, \_SB.PCI0._Y0E._LEN, M1LN)
+                ShiftLeft (TLUD, 0x14, M1MN)
                 ShiftLeft (PXBR, 0x1A, Local0)
-                Subtract (Local0, 0x01, M1MX) /* \_SB_.PCI0._CRS.M1MX */
-                Add (Subtract (M1MX, M1MN), 0x01, M1LN) /* \_SB_.PCI0._CRS.M1LN */
-                CreateDWordField (BUF0, \_SB.PCI0._Y0F._MIN, M2MN)  // _MIN: Minimum Base Address
-                CreateDWordField (BUF0, \_SB.PCI0._Y0F._MAX, M2MX)  // _MAX: Maximum Base Address
-                CreateDWordField (BUF0, \_SB.PCI0._Y0F._LEN, M2LN)  // _LEN: Length
+                Subtract (Local0, 0x01, M1MX)
+                Add (Subtract (M1MX, M1MN), 0x01, M1LN)
+                CreateDWordField (BUF0, \_SB.PCI0._Y0F._MIN, M2MN)
+                CreateDWordField (BUF0, \_SB.PCI0._Y0F._MAX, M2MX)
+                CreateDWordField (BUF0, \_SB.PCI0._Y0F._LEN, M2LN)
                 ShiftRight (0x10000000, PXSZ, Local1)
-                Add (Local0, Local1, M2MN) /* \_SB_.PCI0._CRS.M2MN */
-                Add (Subtract (M2MX, M2MN), 0x01, M2LN) /* \_SB_.PCI0._CRS.M2LN */
-                Return (BUF0) /* \_SB_.PCI0.BUF0 */
+                Add (Local0, Local1, M2MN)
+                Add (Subtract (M2MX, M2MN), 0x01, M2LN)
+                Return (BUF0)
             }
-
             Device (PDRC)
             {
-                Name (_HID, EisaId ("PNP0C02") /* PNP Motherboard Resources */)  // _HID: Hardware ID
-                Name (_UID, 0x01)  // _UID: Unique ID
+                Name (_HID, EisaId ("PNP0C02"))
+                Name (_UID, 0x01)
                 Name (BUF0, ResourceTemplate ()
                 {
                     Memory32Fixed (ReadWrite,
@@ -2648,37 +2397,35 @@
                         0x00001000,         // Address Length
                         )
                 })
-                Method (_CRS, 0, Serialized)  // _CRS: Current Resource Settings
+                Method (_CRS, 0, Serialized)
                 {
-                    CreateDWordField (BUF0, \_SB.PCI0.PDRC._Y10._BAS, RBR0)  // _BAS: Base Address
-                    ShiftLeft (\_SB.PCI0.LPCB.RCBA, 0x0E, RBR0) /* \_SB_.PCI0.PDRC._CRS.RBR0 */
-                    CreateDWordField (BUF0, \_SB.PCI0.PDRC._Y11._BAS, MBR0)  // _BAS: Base Address
-                    ShiftLeft (\_SB.PCI0.MHBR, 0x0F, MBR0) /* \_SB_.PCI0.PDRC._CRS.MBR0 */
-                    CreateDWordField (BUF0, \_SB.PCI0.PDRC._Y12._BAS, DBR0)  // _BAS: Base Address
-                    ShiftLeft (\_SB.PCI0.DIBR, 0x0C, DBR0) /* \_SB_.PCI0.PDRC._CRS.DBR0 */
-                    CreateDWordField (BUF0, \_SB.PCI0.PDRC._Y13._BAS, XBR0)  // _BAS: Base Address
-                    ShiftLeft (\_SB.PCI0.PXBR, 0x1A, XBR0) /* \_SB_.PCI0.PDRC._CRS.XBR0 */
-                    CreateDWordField (BUF0, \_SB.PCI0.PDRC._Y13._LEN, XSZ0)  // _LEN: Length
-                    ShiftRight (0x10000000, \_SB.PCI0.PXSZ, XSZ0) /* \_SB_.PCI0.PDRC._CRS.XSZ0 */
+                    CreateDWordField (BUF0, \_SB.PCI0.PDRC._Y10._BAS, RBR0)
+                    ShiftLeft (\_SB.PCI0.LPCB.RCBA, 0x0E, RBR0)
+                    CreateDWordField (BUF0, \_SB.PCI0.PDRC._Y11._BAS, MBR0)
+                    ShiftLeft (\_SB.PCI0.MHBR, 0x0F, MBR0)
+                    CreateDWordField (BUF0, \_SB.PCI0.PDRC._Y12._BAS, DBR0)
+                    ShiftLeft (\_SB.PCI0.DIBR, 0x0C, DBR0)
+                    CreateDWordField (BUF0, \_SB.PCI0.PDRC._Y13._BAS, XBR0)
+                    ShiftLeft (\_SB.PCI0.PXBR, 0x1A, XBR0)
+                    CreateDWordField (BUF0, \_SB.PCI0.PDRC._Y13._LEN, XSZ0)
+                    ShiftRight (0x10000000, \_SB.PCI0.PXSZ, XSZ0)
                     If (TBRB)
                     {
-                        CreateDWordField (BUF0, \_SB.PCI0.PDRC._Y14._BAS, TBR0)  // _BAS: Base Address
-                        Store (TBRB, TBR0) /* \_SB_.PCI0.PDRC._CRS.TBR0 */
+                        CreateDWordField (BUF0, \_SB.PCI0.PDRC._Y14._BAS, TBR0)
+                        Store (TBRB, TBR0)
                     }
                     Else
                     {
-                        CreateDWordField (BUF0, \_SB.PCI0.PDRC._Y14._LEN, TBLN)  // _LEN: Length
-                        Store (Zero, TBLN) /* \_SB_.PCI0.PDRC._CRS.TBLN */
+                        CreateDWordField (BUF0, \_SB.PCI0.PDRC._Y14._LEN, TBLN)
+                        Store (Zero, TBLN)
                     }
-
-                    Return (BUF0) /* \_SB_.PCI0.PDRC.BUF0 */
+                    Return (BUF0)
                 }
             }
-
             Device (PEGP)
             {
-                Name (_ADR, 0x00010000)  // _ADR: Address
-                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
+                Name (_ADR, 0x00010000)
+                Method (_PRT, 0, NotSerialized)
                 {
                     If (GPIC)
                     {
@@ -2691,7 +2438,6 @@
                                 0x00, 
                                 0x10
                             }, 
-
                             Package (0x04)
                             {
                                 0xFFFF, 
@@ -2699,7 +2445,6 @@
                                 0x00, 
                                 0x11
                             }, 
-
                             Package (0x04)
                             {
                                 0xFFFF, 
@@ -2707,7 +2452,6 @@
                                 0x00, 
                                 0x12
                             }, 
-
                             Package (0x04)
                             {
                                 0xFFFF, 
@@ -2728,7 +2472,6 @@
                                 LNKA, 
                                 0x00
                             }, 
-
                             Package (0x04)
                             {
                                 0xFFFF, 
@@ -2736,7 +2479,6 @@
                                 LNKB, 
                                 0x00
                             }, 
-
                             Package (0x04)
                             {
                                 0xFFFF, 
@@ -2744,7 +2486,6 @@
                                 LNKC, 
                                 0x00
                             }, 
-
                             Package (0x04)
                             {
                                 0xFFFF, 
@@ -2756,81 +2497,69 @@
                     }
                 }
             }
-
             Device (GFX0)
             {
-                Name (_ADR, 0x00020000)  // _ADR: Address
-                Method (_DOS, 1, NotSerialized)  // _DOS: Disable Output Switching
+                Name (_ADR, 0x00020000)
+                Method (_DOS, 1, NotSerialized)
                 {
-                    Store (And (Arg0, 0x07), DSEN) /* \DSEN */
+                    Store (And (Arg0, 0x07), DSEN)
                     HDOS (Arg0)
                 }
-
-                Method (_DOD, 0, NotSerialized)  // _DOD: Display Output Devices
+                Method (_DOD, 0, NotSerialized)
                 {
                     If (LEqual (DODC, 0x00))
                     {
-                        Store (0x01, DODC) /* \_SB_.PCI0.GFX0.DODC */
+                        Store (0x01, DODC)
                         If (SCIP ())
                         {
                             HDOD ()
-                            Store (0x00, NDID) /* \NDID */
+                            Store (0x00, NDID)
                             If (CondRefOf (IDAB)) {}
                             Else
                             {
                                 If (LNotEqual (DIDL, Zero))
                                 {
-                                    Store (SDDL (DIDL), DID1) /* \DID1 */
+                                    Store (SDDL (DIDL), DID1)
                                 }
-
                                 If (LNotEqual (DDL2, Zero))
                                 {
-                                    Store (SDDL (DDL2), DID2) /* \DID2 */
+                                    Store (SDDL (DDL2), DID2)
                                 }
-
                                 If (LNotEqual (DDL3, Zero))
                                 {
-                                    Store (SDDL (DDL3), DID3) /* \DID3 */
+                                    Store (SDDL (DDL3), DID3)
                                 }
-
                                 If (LNotEqual (DDL4, Zero))
                                 {
-                                    Store (SDDL (DDL4), DID4) /* \DID4 */
+                                    Store (SDDL (DDL4), DID4)
                                 }
-
                                 If (LNotEqual (DDL5, Zero))
                                 {
-                                    Store (SDDL (DDL5), DID5) /* \DID5 */
+                                    Store (SDDL (DDL5), DID5)
                                 }
-
                                 If (LNotEqual (DDL6, Zero))
                                 {
-                                    Store (SDDL (DDL6), DID6) /* \DID6 */
+                                    Store (SDDL (DDL6), DID6)
                                 }
-
                                 If (LNotEqual (DDL7, Zero))
                                 {
-                                    Store (SDDL (DDL7), DID7) /* \DID7 */
+                                    Store (SDDL (DDL7), DID7)
                                 }
-
                                 If (LNotEqual (DDL8, Zero))
                                 {
-                                    Store (SDDL (DDL8), DID8) /* \DID8 */
+                                    Store (SDDL (DDL8), DID8)
                                 }
                             }
                         }
-
                         If (LEqual (NDID, 0x00))
                         {
                             Store (0x0400, Index (DerefOf (Index (DODS, NDID)), 0x00))
                         }
-
                         If (LEqual (NDID, 0x01))
                         {
                             Store (Or (0x00010000, DID1), Index (DerefOf (Index (DODS, NDID
                                 )), 0x00))
                         }
-
                         If (LEqual (NDID, 0x02))
                         {
                             Store (Or (0x00010000, DID1), Index (DerefOf (Index (DODS, NDID
@@ -2838,7 +2567,6 @@
                             Store (Or (0x00010000, DID2), Index (DerefOf (Index (DODS, NDID
                                 )), 0x01))
                         }
-
                         If (LEqual (NDID, 0x03))
                         {
                             Store (Or (0x00010000, DID1), Index (DerefOf (Index (DODS, NDID
@@ -2848,7 +2576,6 @@
                             Store (Or (0x00010000, DID3), Index (DerefOf (Index (DODS, NDID
                                 )), 0x02))
                         }
-
                         If (LEqual (NDID, 0x04))
                         {
                             Store (Or (0x00010000, DID1), Index (DerefOf (Index (DODS, NDID
@@ -2860,7 +2587,6 @@
                             Store (Or (0x00010000, DID4), Index (DerefOf (Index (DODS, NDID
                                 )), 0x03))
                         }
-
                         If (LEqual (NDID, 0x05))
                         {
                             Store (Or (0x00010000, DID1), Index (DerefOf (Index (DODS, NDID
@@ -2874,7 +2600,6 @@
                             Store (Or (0x00010000, DID5), Index (DerefOf (Index (DODS, NDID
                                 )), 0x04))
                         }
-
                         If (LEqual (NDID, 0x06))
                         {
                             Store (Or (0x00010000, DID1), Index (DerefOf (Index (DODS, NDID
@@ -2890,7 +2615,6 @@
                             Store (Or (0x00010000, DID6), Index (DerefOf (Index (DODS, NDID
                                 )), 0x05))
                         }
-
                         If (LEqual (NDID, 0x07))
                         {
                             Store (Or (0x00010000, DID1), Index (DerefOf (Index (DODS, NDID
@@ -2908,7 +2632,6 @@
                             Store (Or (0x00010000, DID7), Index (DerefOf (Index (DODS, NDID
                                 )), 0x06))
                         }
-
                         If (LEqual (NDID, 0x08))
                         {
                             Store (Or (0x00010000, DID1), Index (DerefOf (Index (DODS, NDID
@@ -2929,17 +2652,14 @@
                                 )), 0x07))
                         }
                     }
-
                     Store (NDID, Local0)
                     If (LGreater (NDID, 0x08))
                     {
                         Store (0x00, Local0)
                     }
-
                     Return (DerefOf (Index (DODS, Local0)))
                 }
-
-                Method (_REG, 2, NotSerialized)  // _REG: Region Availability
+                Method (_REG, 2, NotSerialized)
                 {
                     If (LEqual (\_SB.PCI0.GFX0.INIM, 0x01))
                     {
@@ -2948,10 +2668,9 @@
                         Store (0x00, \_SB.PCI0.GFX0.INIM)
                     }
                 }
-
                 Device (DD01)
                 {
-                    Method (_ADR, 0, Serialized)  // _ADR: Address
+                    Method (_ADR, 0, Serialized)
                     {
                         If (LEqual (DID1, 0x00))
                         {
@@ -2962,34 +2681,29 @@
                             Return (And (0xFFFF, DID1))
                         }
                     }
-
-                    Method (_DCS, 0, NotSerialized)  // _DCS: Display Current Status
+                    Method (_DCS, 0, NotSerialized)
                     {
                         Return (CDDS (DID1))
                     }
-
-                    Method (_DGS, 0, NotSerialized)  // _DGS: Display Graphics State
+                    Method (_DGS, 0, NotSerialized)
                     {
                         If (CondRefOf (SNXD))
                         {
-                            Return (NXD1) /* \NXD1 */
+                            Return (NXD1)
                         }
-
                         Return (NDDS (DID1))
                     }
-
-                    Method (_DSS, 1, NotSerialized)  // _DSS: Device Set State
+                    Method (_DSS, 1, NotSerialized)
                     {
                         If (LEqual (And (Arg0, 0xC0000000), 0xC0000000))
                         {
-                            Store (NSTE, CSTE) /* \CSTE */
+                            Store (NSTE, CSTE)
                         }
                     }
                 }
-
                 Device (DD02)
                 {
-                    Method (_ADR, 0, Serialized)  // _ADR: Address
+                    Method (_ADR, 0, Serialized)
                     {
                         If (LEqual (DID2, 0x00))
                         {
@@ -3000,39 +2714,33 @@
                             Return (And (0xFFFF, DID2))
                         }
                     }
-
-                    Method (_DCS, 0, NotSerialized)  // _DCS: Display Current Status
+                    Method (_DCS, 0, NotSerialized)
                     {
                         If (LEqual (LIDS, 0x00))
                         {
                             Return (0x00)
                         }
-
                         Return (CDDS (DID2))
                     }
-
-                    Method (_DGS, 0, NotSerialized)  // _DGS: Display Graphics State
+                    Method (_DGS, 0, NotSerialized)
                     {
                         If (CondRefOf (SNXD))
                         {
-                            Return (NXD2) /* \NXD2 */
+                            Return (NXD2)
                         }
-
                         Return (NDDS (DID2))
                     }
-
-                    Method (_DSS, 1, NotSerialized)  // _DSS: Device Set State
+                    Method (_DSS, 1, NotSerialized)
                     {
                         If (LEqual (And (Arg0, 0xC0000000), 0xC0000000))
                         {
-                            Store (NSTE, CSTE) /* \CSTE */
+                            Store (NSTE, CSTE)
                         }
                     }
                 }
-
                 Device (DD03)
                 {
-                    Method (_ADR, 0, Serialized)  // _ADR: Address
+                    Method (_ADR, 0, Serialized)
                     {
                         If (LEqual (DID3, 0x00))
                         {
@@ -3043,8 +2751,7 @@
                             Return (And (0xFFFF, DID3))
                         }
                     }
-
-                    Method (_DCS, 0, NotSerialized)  // _DCS: Display Current Status
+                    Method (_DCS, 0, NotSerialized)
                     {
                         If (LEqual (DID3, 0x00))
                         {
@@ -3055,29 +2762,25 @@
                             Return (CDDS (DID3))
                         }
                     }
-
-                    Method (_DGS, 0, NotSerialized)  // _DGS: Display Graphics State
+                    Method (_DGS, 0, NotSerialized)
                     {
                         If (CondRefOf (SNXD))
                         {
-                            Return (NXD3) /* \NXD3 */
+                            Return (NXD3)
                         }
-
                         Return (NDDS (DID3))
                     }
-
-                    Method (_DSS, 1, NotSerialized)  // _DSS: Device Set State
+                    Method (_DSS, 1, NotSerialized)
                     {
                         If (LEqual (And (Arg0, 0xC0000000), 0xC0000000))
                         {
-                            Store (NSTE, CSTE) /* \CSTE */
+                            Store (NSTE, CSTE)
                         }
                     }
                 }
-
                 Device (DD04)
                 {
-                    Method (_ADR, 0, Serialized)  // _ADR: Address
+                    Method (_ADR, 0, Serialized)
                     {
                         If (LEqual (DID4, 0x00))
                         {
@@ -3088,8 +2791,7 @@
                             Return (And (0xFFFF, DID4))
                         }
                     }
-
-                    Method (_DCS, 0, NotSerialized)  // _DCS: Display Current Status
+                    Method (_DCS, 0, NotSerialized)
                     {
                         If (LEqual (DID4, 0x00))
                         {
@@ -3100,29 +2802,25 @@
                             Return (CDDS (DID4))
                         }
                     }
-
-                    Method (_DGS, 0, NotSerialized)  // _DGS: Display Graphics State
+                    Method (_DGS, 0, NotSerialized)
                     {
                         If (CondRefOf (SNXD))
                         {
-                            Return (NXD4) /* \NXD4 */
+                            Return (NXD4)
                         }
-
                         Return (NDDS (DID4))
                     }
-
-                    Method (_DSS, 1, NotSerialized)  // _DSS: Device Set State
+                    Method (_DSS, 1, NotSerialized)
                     {
                         If (LEqual (And (Arg0, 0xC0000000), 0xC0000000))
                         {
-                            Store (NSTE, CSTE) /* \CSTE */
+                            Store (NSTE, CSTE)
                         }
                     }
                 }
-
                 Device (DD05)
                 {
-                    Method (_ADR, 0, Serialized)  // _ADR: Address
+                    Method (_ADR, 0, Serialized)
                     {
                         If (LEqual (DID5, 0x00))
                         {
@@ -3133,8 +2831,7 @@
                             Return (And (0xFFFF, DID5))
                         }
                     }
-
-                    Method (_DCS, 0, NotSerialized)  // _DCS: Display Current Status
+                    Method (_DCS, 0, NotSerialized)
                     {
                         If (LEqual (DID5, 0x00))
                         {
@@ -3145,29 +2842,25 @@
                             Return (CDDS (DID5))
                         }
                     }
-
-                    Method (_DGS, 0, NotSerialized)  // _DGS: Display Graphics State
+                    Method (_DGS, 0, NotSerialized)
                     {
                         If (CondRefOf (SNXD))
                         {
-                            Return (NXD5) /* \NXD5 */
+                            Return (NXD5)
                         }
-
                         Return (NDDS (DID5))
                     }
-
-                    Method (_DSS, 1, NotSerialized)  // _DSS: Device Set State
+                    Method (_DSS, 1, NotSerialized)
                     {
                         If (LEqual (And (Arg0, 0xC0000000), 0xC0000000))
                         {
-                            Store (NSTE, CSTE) /* \CSTE */
+                            Store (NSTE, CSTE)
                         }
                     }
                 }
-
                 Device (DD06)
                 {
-                    Method (_ADR, 0, Serialized)  // _ADR: Address
+                    Method (_ADR, 0, Serialized)
                     {
                         If (LEqual (DID6, 0x00))
                         {
@@ -3178,8 +2871,7 @@
                             Return (And (0xFFFF, DID6))
                         }
                     }
-
-                    Method (_DCS, 0, NotSerialized)  // _DCS: Display Current Status
+                    Method (_DCS, 0, NotSerialized)
                     {
                         If (LEqual (DID6, 0x00))
                         {
@@ -3190,29 +2882,25 @@
                             Return (CDDS (DID6))
                         }
                     }
-
-                    Method (_DGS, 0, NotSerialized)  // _DGS: Display Graphics State
+                    Method (_DGS, 0, NotSerialized)
                     {
                         If (CondRefOf (SNXD))
                         {
-                            Return (NXD6) /* \NXD6 */
+                            Return (NXD6)
                         }
-
                         Return (NDDS (DID6))
                     }
-
-                    Method (_DSS, 1, NotSerialized)  // _DSS: Device Set State
+                    Method (_DSS, 1, NotSerialized)
                     {
                         If (LEqual (And (Arg0, 0xC0000000), 0xC0000000))
                         {
-                            Store (NSTE, CSTE) /* \CSTE */
+                            Store (NSTE, CSTE)
                         }
                     }
                 }
-
                 Device (DD07)
                 {
-                    Method (_ADR, 0, Serialized)  // _ADR: Address
+                    Method (_ADR, 0, Serialized)
                     {
                         If (LEqual (DID7, 0x00))
                         {
@@ -3223,8 +2911,7 @@
                             Return (And (0xFFFF, DID7))
                         }
                     }
-
-                    Method (_DCS, 0, NotSerialized)  // _DCS: Display Current Status
+                    Method (_DCS, 0, NotSerialized)
                     {
                         If (LEqual (DID7, 0x00))
                         {
@@ -3235,29 +2922,25 @@
                             Return (CDDS (DID7))
                         }
                     }
-
-                    Method (_DGS, 0, NotSerialized)  // _DGS: Display Graphics State
+                    Method (_DGS, 0, NotSerialized)
                     {
                         If (CondRefOf (SNXD))
                         {
-                            Return (NXD7) /* \NXD7 */
+                            Return (NXD7)
                         }
-
                         Return (NDDS (DID7))
                     }
-
-                    Method (_DSS, 1, NotSerialized)  // _DSS: Device Set State
+                    Method (_DSS, 1, NotSerialized)
                     {
                         If (LEqual (And (Arg0, 0xC0000000), 0xC0000000))
                         {
-                            Store (NSTE, CSTE) /* \CSTE */
+                            Store (NSTE, CSTE)
                         }
                     }
                 }
-
                 Device (DD08)
                 {
-                    Method (_ADR, 0, Serialized)  // _ADR: Address
+                    Method (_ADR, 0, Serialized)
                     {
                         If (LEqual (DID8, 0x00))
                         {
@@ -3268,8 +2951,7 @@
                             Return (And (0xFFFF, DID8))
                         }
                     }
-
-                    Method (_DCS, 0, NotSerialized)  // _DCS: Display Current Status
+                    Method (_DCS, 0, NotSerialized)
                     {
                         If (LEqual (DID8, 0x00))
                         {
@@ -3280,26 +2962,22 @@
                             Return (CDDS (DID8))
                         }
                     }
-
-                    Method (_DGS, 0, NotSerialized)  // _DGS: Display Graphics State
+                    Method (_DGS, 0, NotSerialized)
                     {
                         If (CondRefOf (SNXD))
                         {
-                            Return (NXD8) /* \NXD8 */
+                            Return (NXD8)
                         }
-
                         Return (NDDS (DID8))
                     }
-
-                    Method (_DSS, 1, NotSerialized)  // _DSS: Device Set State
+                    Method (_DSS, 1, NotSerialized)
                     {
                         If (LEqual (And (Arg0, 0xC0000000), 0xC0000000))
                         {
-                            Store (NSTE, CSTE) /* \CSTE */
+                            Store (NSTE, CSTE)
                         }
                     }
                 }
-
                 Method (SDDL, 1, NotSerialized)
                 {
                     Increment (NDID)
@@ -3309,45 +2987,36 @@
                     {
                         Return (Local1)
                     }
-
                     If (LEqual (DDL2, Local0))
                     {
                         Return (Local1)
                     }
-
                     If (LEqual (DDL3, Local0))
                     {
                         Return (Local1)
                     }
-
                     If (LEqual (DDL4, Local0))
                     {
                         Return (Local1)
                     }
-
                     If (LEqual (DDL5, Local0))
                     {
                         Return (Local1)
                     }
-
                     If (LEqual (DDL6, Local0))
                     {
                         Return (Local1)
                     }
-
                     If (LEqual (DDL7, Local0))
                     {
                         Return (Local1)
                     }
-
                     If (LEqual (DDL8, Local0))
                     {
                         Return (Local1)
                     }
-
                     Return (0x00)
                 }
-
                 Method (CDDS, 1, NotSerialized)
                 {
                     Store (And (Arg0, 0x0F0F), Local0)
@@ -3355,50 +3024,40 @@
                     {
                         Return (0x1D)
                     }
-
                     If (LEqual (CADL, Local0))
                     {
                         Return (0x1F)
                     }
-
                     If (LEqual (CAL2, Local0))
                     {
                         Return (0x1F)
                     }
-
                     If (LEqual (CAL3, Local0))
                     {
                         Return (0x1F)
                     }
-
                     If (LEqual (CAL4, Local0))
                     {
                         Return (0x1F)
                     }
-
                     If (LEqual (CAL5, Local0))
                     {
                         Return (0x1F)
                     }
-
                     If (LEqual (CAL6, Local0))
                     {
                         Return (0x1F)
                     }
-
                     If (LEqual (CAL7, Local0))
                     {
                         Return (0x1F)
                     }
-
                     If (LEqual (CAL8, Local0))
                     {
                         Return (0x1F)
                     }
-
                     Return (0x1D)
                 }
-
                 Method (NDDS, 1, NotSerialized)
                 {
                     Store (And (Arg0, 0x0F0F), Local0)
@@ -3406,50 +3065,40 @@
                     {
                         Return (0x00)
                     }
-
                     If (LEqual (NADL, Local0))
                     {
                         Return (0x01)
                     }
-
                     If (LEqual (NDL2, Local0))
                     {
                         Return (0x01)
                     }
-
                     If (LEqual (NDL3, Local0))
                     {
                         Return (0x01)
                     }
-
                     If (LEqual (NDL4, Local0))
                     {
                         Return (0x01)
                     }
-
                     If (LEqual (NDL5, Local0))
                     {
                         Return (0x01)
                     }
-
                     If (LEqual (NDL6, Local0))
                     {
                         Return (0x01)
                     }
-
                     If (LEqual (NDL7, Local0))
                     {
                         Return (0x01)
                     }
-
                     If (LEqual (NDL8, Local0))
                     {
                         Return (0x01)
                     }
-
                     Return (0x00)
                 }
-
                 Scope (\_SB.PCI0)
                 {
                     OperationRegion (MCHP, PCI_Config, 0x40, 0xC0)
@@ -3460,7 +3109,6 @@
                         Offset (0x62)
                     }
                 }
-
                 OperationRegion (IGDP, PCI_Config, 0x40, 0xC0)
                 Field (IGDP, AnyAcc, NoLock, Preserve)
                 {
@@ -3488,7 +3136,6 @@
                     Offset (0xBC), 
                     ASLS,   32
                 }
-
                 OperationRegion (IGDM, SystemMemory, ASLB, 0x2000)
                 Field (IGDM, AnyAcc, NoLock, Preserve)
                 {
@@ -3574,12 +3221,6 @@
                     PHED,   32, 
                     BDDC,   2048
                 }
-
-                If (CondRefOf (FPED))
-                {
-                    FPED ()
-                }
-
                 Name (DBTB, Package (0x15)
                 {
                     0x00, 
@@ -3611,25 +3252,21 @@
                         0xE4, 
                         0x0140
                     }, 
-
                     Package (0x02)
                     {
                         0xDE, 
                         0x014D
                     }, 
-
                     Package (0x02)
                     {
                         0xDE, 
                         0x014D
                     }, 
-
                     Package (0x02)
                     {
                         0x00, 
                         0x00
                     }, 
-
                     Package (0x02)
                     {
                         0xDE, 
@@ -3646,75 +3283,66 @@
                     {
                         If (LEqual (GESF, 0x00))
                         {
-                            Store (0x59, PARM) /* \_SB_.PCI0.GFX0.PARM */
-                            Store (Zero, GESF) /* \_SB_.PCI0.GFX0.GESF */
-                            Return (SUCC) /* \_SB_.PCI0.GFX0.SUCC */
+                            Store (0x59, PARM)
+                            Store (Zero, GESF)
+                            Return (SUCC)
                         }
-
                         If (LEqual (GESF, 0x01))
                         {
-                            Store (0x80, PARM) /* \_SB_.PCI0.GFX0.PARM */
-                            Store (Zero, GESF) /* \_SB_.PCI0.GFX0.GESF */
-                            Return (SUCC) /* \_SB_.PCI0.GFX0.SUCC */
+                            Store (0x80, PARM)
+                            Store (Zero, GESF)
+                            Return (SUCC)
                         }
-
                         If (LEqual (GESF, 0x04))
                         {
-                            Store (0x30000000, PARM) /* \_SB_.PCI0.GFX0.PARM */
-                            Store (Zero, GESF) /* \_SB_.PCI0.GFX0.GESF */
-                            Return (SUCC) /* \_SB_.PCI0.GFX0.SUCC */
+                            Store (0x30000000, PARM)
+                            Store (Zero, GESF)
+                            Return (SUCC)
                         }
-
                         If (LEqual (GESF, 0x05))
                         {
-                            Or (PARM, ShiftLeft (LIDS, 0x10), PARM) /* \_SB_.PCI0.GFX0.PARM */
-                            Add (PARM, 0x00010000, PARM) /* \_SB_.PCI0.GFX0.PARM */
-                            Store (Zero, GESF) /* \_SB_.PCI0.GFX0.GESF */
-                            Return (SUCC) /* \_SB_.PCI0.GFX0.SUCC */
+                            Or (PARM, ShiftLeft (LIDS, 0x10), PARM)
+                            Add (PARM, 0x00010000, PARM)
+                            Store (Zero, GESF)
+                            Return (SUCC)
                         }
-
                         If (LEqual (GESF, 0x06))
                         {
-                            Store (Zero, PARM) /* \_SB_.PCI0.GFX0.PARM */
-                            Store (Zero, GESF) /* \_SB_.PCI0.GFX0.GESF */
+                            Store (Zero, PARM)
+                            Store (Zero, GESF)
                             Return (Zero)
                         }
-
                         If (LEqual (GESF, 0x07))
                         {
-                            Store (GIVD, PARM) /* \_SB_.PCI0.GFX0.PARM */
-                            XOr (PARM, 0x01, PARM) /* \_SB_.PCI0.GFX0.PARM */
-                            Or (PARM, ShiftLeft (GMFN, 0x01), PARM) /* \_SB_.PCI0.GFX0.PARM */
-                            Or (PARM, ShiftLeft (0x03, 0x0B), PARM) /* \_SB_.PCI0.GFX0.PARM */
-                            Or (PARM, ShiftLeft (IDMS, 0x11), PARM) /* \_SB_.PCI0.GFX0.PARM */
+                            Store (GIVD, PARM)
+                            XOr (PARM, 0x01, PARM)
+                            Or (PARM, ShiftLeft (GMFN, 0x01), PARM)
+                            Or (PARM, ShiftLeft (0x03, 0x0B), PARM)
+                            Or (PARM, ShiftLeft (IDMS, 0x11), PARM)
                             Or (ShiftLeft (DerefOf (Index (DerefOf (Index (CDCT, HVCO)), CDVL
-                                )), 0x15), PARM, PARM) /* \_SB_.PCI0.GFX0.PARM */
-                            Store (0x01, GESF) /* \_SB_.PCI0.GFX0.GESF */
-                            Return (SUCC) /* \_SB_.PCI0.GFX0.SUCC */
+                                )), 0x15), PARM, PARM)
+                            Store (0x01, GESF)
+                            Return (SUCC)
                         }
-
                         If (LEqual (GESF, 0x0A))
                         {
-                            Store (0x00, PARM) /* \_SB_.PCI0.GFX0.PARM */
-                            Store (0x00, GESF) /* \_SB_.PCI0.GFX0.GESF */
+                            Store (0x00, PARM)
+                            Store (0x00, GESF)
                             Return (Zero)
                         }
-
-                        Store (Zero, GESF) /* \_SB_.PCI0.GFX0.GESF */
-                        Return (CRIT) /* \_SB_.PCI0.GFX0.CRIT */
+                        Store (Zero, GESF)
+                        Return (CRIT)
                     }
-
                     Method (SBCB, 0, Serialized)
                     {
                         If (LEqual (GESF, 0x00))
                         {
-                            Store (0x00, PARM) /* \_SB_.PCI0.GFX0.PARM */
-                            Store (0x000F87FD, PARM) /* \_SB_.PCI0.GFX0.PARM */
-                            Store (0x40, PARM) /* \_SB_.PCI0.GFX0.PARM */
-                            Store (Zero, GESF) /* \_SB_.PCI0.GFX0.GESF */
-                            Return (SUCC) /* \_SB_.PCI0.GFX0.SUCC */
+                            Store (0x00, PARM)
+                            Store (0x000F87FD, PARM)
+                            Store (0x40, PARM)
+                            Store (Zero, GESF)
+                            Return (SUCC)
                         }
-
                         If (LEqual (GESF, 0x07))
                         {
                             If (LEqual (PARM, 0x00))
@@ -3722,66 +3350,55 @@
                                 Store (CLID, Local0)
                                 If (And (0x80000000, Local0))
                                 {
-                                    And (CLID, 0x0F, CLID) /* \_SB_.PCI0.GFX0.CLID */
+                                    And (CLID, 0x0F, CLID)
                                     GLID (CLID)
                                 }
                             }
-
-                            Store (Zero, GESF) /* \_SB_.PCI0.GFX0.GESF */
-                            Store (Zero, PARM) /* \_SB_.PCI0.GFX0.PARM */
-                            Return (SUCC) /* \_SB_.PCI0.GFX0.SUCC */
+                            Store (Zero, GESF)
+                            Store (Zero, PARM)
+                            Return (SUCC)
                         }
-
-                        Store (Zero, GESF) /* \_SB_.PCI0.GFX0.GESF */
-                        Return (SUCC) /* \_SB_.PCI0.GFX0.SUCC */
+                        Store (Zero, GESF)
+                        Return (SUCC)
                     }
-
                     If (LEqual (GEFC, 0x04))
                     {
-                        Store (GBDA (), GXFC) /* \_SB_.PCI0.GFX0.GXFC */
+                        Store (GBDA (), GXFC)
                     }
-
                     If (LEqual (GEFC, 0x06))
                     {
-                        Store (SBCB (), GXFC) /* \_SB_.PCI0.GFX0.GXFC */
+                        Store (SBCB (), GXFC)
                     }
-
-                    Store (0x00, GEFC) /* \_SB_.PCI0.GFX0.GEFC */
-                    Store (0x01, SCIS) /* \SCIS */
-                    Store (0x00, GSSE) /* \_SB_.PCI0.GFX0.GSSE */
-                    Store (0x00, SCIE) /* \_SB_.PCI0.GFX0.SCIE */
+                    Store (0x00, GEFC)
+                    Store (0x01, SCIS)
+                    Store (0x00, GSSE)
+                    Store (0x00, SCIE)
                     Return (Zero)
                 }
-
                 Method (PDRD, 0, NotSerialized)
                 {
                     If (LNot (DRDY))
                     {
                         Sleep (ASLP)
                     }
-
                     Return (LNot (DRDY))
                 }
-
                 Method (PSTS, 0, NotSerialized)
                 {
                     If (LGreater (CSTS, 0x02))
                     {
                         Sleep (ASLP)
                     }
-
                     Return (LEqual (CSTS, 0x03))
                 }
-
                 Method (GNOT, 2, NotSerialized)
                 {
                     If (PDRD ())
                     {
                         Return (0x01)
                     }
-
-                    Store (Arg0, CEVT) /* \_SB_.PCI0.GFX0.CEVT */
-                    Store (0x03, CSTS) /* \_SB_.PCI0.GFX0.CSTS */
+                    Store (Arg0, CEVT)
+                    Store (0x03, CSTS)
                     If (LAnd (LEqual (CHPD, 0x00), LEqual (Arg1, 0x00)))
                     {
                         If (LAnd (LGreater (OSYS, 0x07D0), LLess (OSYS, 0x07D6)))
@@ -3793,64 +3410,53 @@
                             Notify (\_SB.PCI0.GFX0, Arg1)
                         }
                     }
-
                     If (CondRefOf (WMAB))
                     {
                         WMAB (Arg0)
                     }
                     Else
                     {
-                        Notify (\_SB.PCI0.GFX0, 0x80) // Status Change
+                        Notify (\_SB.PCI0.GFX0, 0x80)
                     }
-
                     If (LNot (PSTS ()))
                     {
-                        Store (0x00, CEVT) /* \_SB_.PCI0.GFX0.CEVT */
+                        Store (0x00, CEVT)
                     }
-
                     Return (0x00)
                 }
-
                 Method (GHDS, 1, NotSerialized)
                 {
-                    Store (Arg0, TIDX) /* \_SB_.PCI0.GFX0.TIDX */
+                    Store (Arg0, TIDX)
                     Return (GNOT (0x01, 0x00))
                 }
-
                 Method (GLID, 1, NotSerialized)
                 {
-                    Store (Arg0, CLID) /* \_SB_.PCI0.GFX0.CLID */
+                    Store (Arg0, CLID)
                     Return (GNOT (0x02, 0x00))
                 }
-
                 Method (GDCK, 1, NotSerialized)
                 {
-                    Store (Arg0, CDCK) /* \_SB_.PCI0.GFX0.CDCK */
+                    Store (Arg0, CDCK)
                     Return (GNOT (0x04, 0x00))
                 }
-
                 Method (PARD, 0, NotSerialized)
                 {
                     If (LNot (ARDY))
                     {
                         Sleep (ASLP)
                     }
-
                     Return (LNot (ARDY))
                 }
-
                 Method (AINT, 2, NotSerialized)
                 {
                     If (LNot (And (TCHE, ShiftLeft (0x01, Arg0))))
                     {
                         Return (0x01)
                     }
-
                     If (PARD ())
                     {
                         Return (0x01)
                     }
-
                     If (LEqual (Arg0, 0x02))
                     {
                         If (CPFM)
@@ -3861,81 +3467,78 @@
                             {
                                 If (And (Local1, 0x06))
                                 {
-                                    Store (0x06, PFIT) /* \_SB_.PCI0.GFX0.PFIT */
+                                    Store (0x06, PFIT)
                                 }
                                 Else
                                 {
                                     If (And (Local1, 0x08))
                                     {
-                                        Store (0x08, PFIT) /* \_SB_.PCI0.GFX0.PFIT */
+                                        Store (0x08, PFIT)
                                     }
                                     Else
                                     {
-                                        Store (0x01, PFIT) /* \_SB_.PCI0.GFX0.PFIT */
+                                        Store (0x01, PFIT)
                                     }
                                 }
                             }
-
                             If (LEqual (Local0, 0x06))
                             {
                                 If (And (Local1, 0x08))
                                 {
-                                    Store (0x08, PFIT) /* \_SB_.PCI0.GFX0.PFIT */
+                                    Store (0x08, PFIT)
                                 }
                                 Else
                                 {
                                     If (And (Local1, 0x01))
                                     {
-                                        Store (0x01, PFIT) /* \_SB_.PCI0.GFX0.PFIT */
+                                        Store (0x01, PFIT)
                                     }
                                     Else
                                     {
-                                        Store (0x06, PFIT) /* \_SB_.PCI0.GFX0.PFIT */
+                                        Store (0x06, PFIT)
                                     }
                                 }
                             }
-
                             If (LEqual (Local0, 0x08))
                             {
                                 If (And (Local1, 0x01))
                                 {
-                                    Store (0x01, PFIT) /* \_SB_.PCI0.GFX0.PFIT */
+                                    Store (0x01, PFIT)
                                 }
                                 Else
                                 {
                                     If (And (Local1, 0x06))
                                     {
-                                        Store (0x06, PFIT) /* \_SB_.PCI0.GFX0.PFIT */
+                                        Store (0x06, PFIT)
                                     }
                                     Else
                                     {
-                                        Store (0x08, PFIT) /* \_SB_.PCI0.GFX0.PFIT */
+                                        Store (0x08, PFIT)
                                     }
                                 }
                             }
                         }
                         Else
                         {
-                            XOr (PFIT, 0x07, PFIT) /* \_SB_.PCI0.GFX0.PFIT */
+                            XOr (PFIT, 0x07, PFIT)
                         }
-
-                        Or (PFIT, 0x80000000, PFIT) /* \_SB_.PCI0.GFX0.PFIT */
-                        Store (0x04, ASLC) /* \_SB_.PCI0.GFX0.ASLC */
+                        Or (PFIT, 0x80000000, PFIT)
+                        Store (0x04, ASLC)
                     }
                     Else
                     {
                         If (LEqual (Arg0, 0x01))
                         {
-                            Store (Arg1, BCLP) /* \_SB_.PCI0.GFX0.BCLP */
-                            Or (BCLP, 0x80000000, BCLP) /* \_SB_.PCI0.GFX0.BCLP */
-                            Store (0x02, ASLC) /* \_SB_.PCI0.GFX0.ASLC */
+                            Store (Arg1, BCLP)
+                            Or (BCLP, 0x80000000, BCLP)
+                            Store (0x02, ASLC)
                         }
                         Else
                         {
                             If (LEqual (Arg0, 0x00))
                             {
-                                Store (Arg1, ALSI) /* \_SB_.PCI0.GFX0.ALSI */
-                                Store (0x01, ASLC) /* \_SB_.PCI0.GFX0.ASLC */
+                                Store (Arg1, ALSI)
+                                Store (0x01, ASLC)
                             }
                             Else
                             {
@@ -3943,22 +3546,18 @@
                             }
                         }
                     }
-
-                    Store (0x01, ASLE) /* \_SB_.PCI0.GFX0.ASLE */
+                    Store (0x01, ASLE)
                     Return (0x00)
                 }
-
                 Method (SCIP, 0, NotSerialized)
                 {
                     If (LNotEqual (OVER, 0x00))
                     {
                         Return (LNot (GSMI))
                     }
-
                     Return (0x00)
                 }
             }
-
             Scope (GFX0)
             {
                 Name (DODC, 0x00)
@@ -3977,8 +3576,8 @@
                 })
                 Name (DSPR, Buffer (0x09)
                 {
-                    /* 0000 */  0x00, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x01,  /* ........ */
-                    /* 0008 */  0x02                                             /* . */
+                    /* 0000 */   0x00, 0x03, 0x04, 0x05, 0x06, 0x07, 0x08, 0x01,
+                    /* 0008 */   0x02
                 })
                 Name (DODS, Package (0x09)
                 {
@@ -3986,25 +3585,21 @@
                     {
                         0xFFFFFFFF
                     }, 
-
                     Package (0x01)
                     {
                         0xFFFFFFFF
                     }, 
-
                     Package (0x02)
                     {
                         0xFFFFFFFF, 
                         0xFFFFFFFF
                     }, 
-
                     Package (0x03)
                     {
                         0xFFFFFFFF, 
                         0xFFFFFFFF, 
                         0xFFFFFFFF
                     }, 
-
                     Package (0x04)
                     {
                         0xFFFFFFFF, 
@@ -4012,7 +3607,6 @@
                         0xFFFFFFFF, 
                         0xFFFFFFFF
                     }, 
-
                     Package (0x05)
                     {
                         0xFFFFFFFF, 
@@ -4021,7 +3615,6 @@
                         0xFFFFFFFF, 
                         0xFFFFFFFF
                     }, 
-
                     Package (0x06)
                     {
                         0xFFFFFFFF, 
@@ -4031,7 +3624,6 @@
                         0xFFFFFFFF, 
                         0xFFFFFFFF
                     }, 
-
                     Package (0x07)
                     {
                         0xFFFFFFFF, 
@@ -4042,7 +3634,6 @@
                         0xFFFFFFFF, 
                         0xFFFFFFFF
                     }, 
-
                     Package (0x08)
                     {
                         0xFFFFFFFF, 
@@ -4055,28 +3646,26 @@
                         0xFFFFFFFF
                     }
                 })
-                Method (_INI, 0, NotSerialized)  // _INI: Initialize
+                Method (_INI, 0, NotSerialized)
                 {
-                    Store (0x01, INIM) /* \_SB_.PCI0.GFX0.INIM */
+                    Store (0x01, INIM)
                     DKET ()
                     Store (\_SB.SBRC (), Local0)
                     Or (Local0, 0x80000000, \_SB.PCI0.GFX0.BCLP)
-                    Store (0x00, WDSA) /* \WDSA */
-                    Store (0x00, WDST) /* \WDST */
-                    Store (0x00, WDGN) /* \WDGN */
+                    Store (0x00, WDSA)
+                    Store (0x00, WDST)
+                    Store (0x00, WDGN)
                 }
-
                 Method (HDOS, 1, NotSerialized)
                 {
                     And (WDPE, 0xF8, Local0)
                     And (WDPE, 0x87, Local1)
-                    Or (Local0, Arg0, WDPE) /* \WDPE */
+                    Or (Local0, Arg0, WDPE)
                     If (CondRefOf (^PDOS, Local2))
                     {
                         ^PDOS (Arg0, Local1)
                     }
                 }
-
                 Method (HDOD, 0, NotSerialized)
                 {
                     Store (0x01, Local1)
@@ -4084,10 +3673,8 @@
                     {
                         Store (0x03, Local1)
                     }
-
-                    Or (DCAP, Local1, DCAP) /* \DCAP */
+                    Or (DCAP, Local1, DCAP)
                 }
-
                 Method (PDDS, 1, NotSerialized)
                 {
                     Store (And (Arg0, 0x0F0F), Local0)
@@ -4095,103 +3682,84 @@
                     {
                         Return (0x00)
                     }
-
                     If (LEqual (CPDL, Local0))
                     {
                         Return (0x01)
                     }
-
                     If (LEqual (CPL2, Local0))
                     {
                         Return (0x01)
                     }
-
                     If (LEqual (CPL3, Local0))
                     {
                         Return (0x01)
                     }
-
                     If (LEqual (CPL4, Local0))
                     {
                         Return (0x01)
                     }
-
                     If (LEqual (CPL5, Local0))
                     {
                         Return (0x01)
                     }
-
                     If (LEqual (CPL6, Local0))
                     {
                         Return (0x01)
                     }
-
                     If (LEqual (CPL7, Local0))
                     {
                         Return (0x01)
                     }
-
                     If (LEqual (CPL8, Local0))
                     {
                         Return (0x01)
                     }
-
                     Return (0x00)
                 }
-
                 Method (UPNA, 2, Serialized)
                 {
                     If (LEqual (Arg0, 0x00))
                     {
                         Store (NADL, Local1)
-                        Store (Arg1, NADL) /* \_SB_.PCI0.GFX0.NADL */
+                        Store (Arg1, NADL)
                     }
-
                     If (LEqual (Arg0, 0x01))
                     {
                         Store (NDL2, Local1)
-                        Store (Arg1, NDL2) /* \_SB_.PCI0.GFX0.NDL2 */
+                        Store (Arg1, NDL2)
                     }
-
                     If (LEqual (Arg0, 0x02))
                     {
                         Store (NDL3, Local1)
-                        Store (Arg1, NDL3) /* \_SB_.PCI0.GFX0.NDL3 */
+                        Store (Arg1, NDL3)
                     }
-
                     If (LEqual (Arg0, 0x03))
                     {
                         Store (NDL4, Local1)
-                        Store (Arg1, NDL4) /* \_SB_.PCI0.GFX0.NDL4 */
+                        Store (Arg1, NDL4)
                     }
-
                     If (LEqual (Arg0, 0x04))
                     {
                         Store (NDL5, Local1)
-                        Store (Arg1, NDL5) /* \_SB_.PCI0.GFX0.NDL5 */
+                        Store (Arg1, NDL5)
                     }
-
                     If (LEqual (Arg0, 0x05))
                     {
                         Store (NDL6, Local1)
-                        Store (Arg1, NDL6) /* \_SB_.PCI0.GFX0.NDL6 */
+                        Store (Arg1, NDL6)
                     }
-
                     If (LEqual (Arg0, 0x06))
                     {
                         Store (NDL7, Local1)
-                        Store (Arg1, NDL7) /* \_SB_.PCI0.GFX0.NDL7 */
+                        Store (Arg1, NDL7)
                     }
-
                     If (LEqual (Arg0, 0x07))
                     {
                         Store (NDL8, Local1)
-                        Store (Arg1, NDL8) /* \_SB_.PCI0.GFX0.NDL8 */
+                        Store (Arg1, NDL8)
                     }
-
                     Return (Local1)
                 }
-
                 Method (UPAA, 0, Serialized)
                 {
                     Store (0x00, Local1)
@@ -4201,26 +3769,23 @@
                         Store (DerefOf (Index (HPDD, Local1)), Local2)
                         If (PDDS (Local2))
                         {
-                            Or (WDST, Local0, WDST) /* \WDST */
+                            Or (WDST, Local0, WDST)
                         }
                         Else
                         {
-                            And (WDST, Not (Local0), WDST) /* \WDST */
+                            And (WDST, Not (Local0), WDST)
                         }
-
                         If (LEqual (CDDS (Local2), 0x1F))
                         {
-                            Or (WDSA, Local0, WDSA) /* \WDSA */
+                            Or (WDSA, Local0, WDSA)
                         }
                         Else
                         {
-                            And (WDSA, Not (Local0), WDSA) /* \WDSA */
+                            And (WDSA, Not (Local0), WDSA)
                         }
-
                         Increment (Local1)
                     }
                 }
-
                 Method (UPND, 0, Serialized)
                 {
                     Store (WDGN, Local1)
@@ -4237,16 +3802,13 @@
                             Increment (Local2)
                             And (Local1, Not (Local4), Local1)
                         }
-
                         If (LGreaterEqual (Local2, 0x02))
                         {
                             Break
                         }
-
                         Increment (Local0)
                     }
-
-                    XOr (WDGN, Local1, WDGN) /* \WDGN */
+                    XOr (WDGN, Local1, WDGN)
                     Store (0x01, Local1)
                     While (LAnd (LLess (Local2, 0x08), Local1))
                     {
@@ -4254,32 +3816,29 @@
                         Increment (Local2)
                     }
                 }
-
                 Method (GF4E, 1, Serialized)
                 {
                     UPAA ()
                     If (LEqual (WDSA, 0x01))
                     {
-                        Or (WDST, 0x01, WDGN) /* \WDGN */
+                        Or (WDST, 0x01, WDGN)
                     }
                     Else
                     {
                         If (And (WDSA, 0x01))
                         {
-                            And (WDST, Not (0x01), WDGN) /* \WDGN */
+                            And (WDST, Not (0x01), WDGN)
                         }
                         Else
                         {
-                            Store (0x01, WDGN) /* \WDGN */
+                            Store (0x01, WDGN)
                         }
                     }
-
                     UPND ()
                     Signal (\_SB.F4EV)
                     GHDS (0x00)
                     Return (0x01)
                 }
-
                 Method (DKET, 0, NotSerialized)
                 {
                     If (LEqual (\_SB.PCI0.GFX0.GIVD, 0x00))
@@ -4291,10 +3850,8 @@
                         \_SB.PCI0.GFX0.GDCK (Local0)
                         Store ("GFX DockEvent Exit", Debug)
                     }
-
                     Return (0x00)
                 }
-
                 Method (RFHS, 1, Serialized)
                 {
                     If (Arg0)
@@ -4306,13 +3863,11 @@
                         Wait (\_SB.F4EV, 0x0500)
                     }
                 }
-
                 Method (SNXS, 0, Serialized)
                 {
                     UPND ()
                     GHDS (0x00)
                 }
-
                 Method (SBRV, 0, Serialized)
                 {
                     Store ("Set Brightness", Debug)
@@ -4321,10 +3876,9 @@
                         If (And (TCHE, 0x02))
                         {
                             Store ("TCHE set", Debug)
-                            Or (DCAP, 0x02, DCAP) /* \DCAP */
+                            Or (DCAP, 0x02, DCAP)
                         }
                     }
-
                     And (DCAP, 0x02, Local3)
                     If (Local3)
                     {
@@ -4333,18 +3887,15 @@
                         Store (Local1, Debug)
                         AINT (0x01, Local1)
                     }
-
                     Return (Local3)
                 }
-
                 Scope (DD02)
                 {
-                    Method (_BCL, 0, Serialized)  // _BCL: Brightness Control Levels
+                    Method (_BCL, 0, Serialized)
                     {
                         Return (\_SB.BCL ())
                     }
-
-                    Method (_BCM, 1, Serialized)  // _BCM: Brightness Control Method
+                    Method (_BCM, 1, Serialized)
                     {
                         Store (\_SB.BCM (Arg0), Local0)
                         If (Local0)
@@ -4354,20 +3905,17 @@
                             {
                                 \_SB.SSMI (0xEA74, 0x04, Local1, 0x00, 0x00)
                             }
-
                             Signal (\_SB.BEVT)
                         }
                     }
-
-                    Method (_BQC, 0, Serialized)  // _BQC: Brightness Query Current
+                    Method (_BQC, 0, Serialized)
                     {
                         Return (\_SB.BQC ())
                     }
                 }
-
                 Scope (\_GPE)
                 {
-                    Method (_L06, 0, NotSerialized)  // _Lxx: Level-Triggered GPE
+                    Method (_L06, 0, NotSerialized)
                     {
                         If (LEqual (\_SB.PCI0.GFX0.GIVD, 0x00))
                         {
@@ -4377,11 +3925,10 @@
                             }
                             Else
                             {
-                                Store (0x01, SCIS) /* \SCIS */
+                                Store (0x01, SCIS)
                             }
                         }
                     }
-
                     Name (WOAT, 0xFF)
                     Method (CNDD, 1, NotSerialized)
                     {
@@ -4389,30 +3936,27 @@
                         {
                             If (LOr (Arg0, LNotEqual (WDST, WOAT)))
                             {
-                                Store (WDST, WOAT) /* \_GPE.WOAT */
+                                Store (WDST, WOAT)
                                 If (LGreaterEqual (\WCOS (), 0x04))
                                 {
-                                    Notify (\_SB.PCI0, 0x00) // Bus Check
+                                    Notify (\_SB.PCI0, 0x00)
                                 }
                                 Else
                                 {
-                                    Notify (\_SB.PCI0.GFX0, 0x00) // Bus Check
+                                    Notify (\_SB.PCI0.GFX0, 0x00)
                                 }
-
                                 Sleep (0x02EE)
                             }
                         }
                     }
-
                     Method (VHIV, 3, Serialized)
                     {
-                        Name (_T_0, Zero)  // _T_x: Emitted by ASL Compiler
+                        Name (_T_0, Zero)
                         If (\_SB.PCI0.GFX0.GIVD)
                         {
                             Return (0x01)
                         }
-
-                        Store (Arg2, _T_0) /* \_GPE.VHIV._T_0 */
+                        Store (Arg2, _T_0)
                         If (LEqual (_T_0, 0x01))
                         {
                             If (And (Arg0, 0x80))
@@ -4444,7 +3988,7 @@
                                     {
                                         \_SB.SSMI (0xEA74, 0x06, 0x00, 0x00, 0x00)
                                         CNDD (0x00)
-                                        Notify (\_SB.PCI0.GFX0, 0x80) // Status Change
+                                        Notify (\_SB.PCI0.GFX0, 0x80)
                                     }
                                 }
                             }
@@ -4467,10 +4011,10 @@
                                         {
                                             \_SB.SSMI (0xEA74, 0x05, 0x00, 0x00, 0x00)
                                             CNDD (0x01)
-                                            Notify (\_SB.PCI0.GFX0, 0x80) // Status Change
+                                            Notify (\_SB.PCI0.GFX0, 0x80)
                                             If (LLess (\WCOS (), 0x06))
                                             {
-                                                Store (0x00, LRSC) /* \_GPE.LRSC */
+                                                Store (0x00, LRSC)
                                             }
                                         }
                                     }
@@ -4488,7 +4032,7 @@
                                             Else
                                             {
                                                 CNDD (0x00)
-                                                Notify (\_SB.PCI0.GFX0, 0x80) // Status Change
+                                                Notify (\_SB.PCI0.GFX0, 0x80)
                                             }
                                         }
                                     }
@@ -4503,7 +4047,7 @@
                                             Else
                                             {
                                                 \_GPE.CNDD (0x00)
-                                                Notify (\_SB.PCI0.GFX0, 0x80) // Status Change
+                                                Notify (\_SB.PCI0.GFX0, 0x80)
                                             }
                                         }
                                         Else
@@ -4521,7 +4065,6 @@
                                                         \_SB.PCI0.GFX0.GLID (\_SB.LID._LID ())
                                                         \_SB.PCI0.GFX0.DKET ()
                                                     }
-
                                                     If (LGreaterEqual (Arg0, 0x03))
                                                     {
                                                         If (LEqual (And (WDPE, 0x44), 0x00))
@@ -4547,11 +4090,9 @@
                                 }
                             }
                         }
-
                         Return (0x00)
                     }
                 }
-
                 Event (\_SB.BEVT)
                 Event (\_SB.F4EV)
                 Scope (\_GPE)
@@ -4563,7 +4104,6 @@
                         {
                             Store (\_GPE.VHIV (Arg0, 0x00, 0x01), Local1)
                         }
-
                         If (And (SGMD, 0x0F))
                         {
                             If (LNotEqual (\_SB.PCI0.PEGP.DGFX.SVID, 0xFFFF))
@@ -4575,7 +4115,6 @@
                             }
                         }
                     }
-
                     Method (VFN4, 0, Serialized)
                     {
                         Signal (\_SB.F4EV)
@@ -4585,7 +4124,6 @@
                             Store (\_GPE.VHIV (0x00, 0x00, 0x04), Local1)
                         }
                     }
-
                     Method (VDET, 0, Serialized)
                     {
                         Store (0x01, Local1)
@@ -4594,20 +4132,17 @@
                             Store (\_GPE.VHIV (0x00, 0x00, 0x02), Local1)
                         }
                     }
-
                     Name (LRSC, 0x01)
                     Method (VLET, 0, Serialized)
                     {
-                        Store (0x01, LRSC) /* \_GPE.LRSC */
+                        Store (0x01, LRSC)
                         Store (0x01, Local1)
                         If (Local1)
                         {
                             Store (\_GPE.VHIV (0x00, 0x00, 0x03), Local1)
                         }
-
-                        Return (LRSC) /* \_GPE.LRSC */
+                        Return (LRSC)
                     }
-
                     Method (VPUP, 2, Serialized)
                     {
                         Store (0x01, Local1)
@@ -4617,7 +4152,6 @@
                         }
                     }
                 }
-
                 Scope (\_SB)
                 {
                     Method (VSDD, 1, Serialized)
@@ -4630,20 +4164,17 @@
                         {
                             If (LEqual (And (WDPE, 0x03), 0x00))
                             {
-                                Store (Arg0, WDGN) /* \WDGN */
+                                Store (Arg0, WDGN)
                                 Store (0x01, Local1)
                                 If (Local1)
                                 {
                                     Store (\_GPE.VHIV (Arg0, 0x00, 0x06), Local1)
                                 }
                             }
-
                             Return (0x00)
                         }
-
                         Return (Zero)
                     }
-
                     Method (VGDD, 1, Serialized)
                     {
                         If (LAnd (And (DCAP, 0x04), Arg0))
@@ -4658,7 +4189,6 @@
                                 {
                                     Wait (\_SB.F4EV, 0x0500)
                                 }
-
                                 Store (0x01, Local1)
                                 If (Local1)
                                 {
@@ -4672,11 +4202,9 @@
                                     \_SB.SSMI (0xEA74, 0x02, 0x00, 0x00, 0x00)
                                 }
                             }
-
-                            Return (WDST) /* \WDST */
+                            Return (WDST)
                         }
                     }
-
                     Method (VWAK, 1, Serialized)
                     {
                         Store (0x01, Local1)
@@ -4685,7 +4213,6 @@
                             Store (\_GPE.VHIV (Arg0, 0x00, 0x08), Local1)
                         }
                     }
-
                     Method (WBRT, 0, NotSerialized)
                     {
                         Store (0x01, Local1)
@@ -4695,7 +4222,6 @@
                         }
                     }
                 }
-
                 Name (DCSC, 0xFF)
                 Method (GDCC, 1, Serialized)
                 {
@@ -4706,23 +4232,18 @@
                         {
                             Or (Local0, 0x08, Local0)
                         }
-
-                        Store (Local0, DCSC) /* \_SB_.PCI0.GFX0.DCSC */
+                        Store (Local0, DCSC)
                     }
-
-                    Return (DCSC) /* \_SB_.PCI0.GFX0.DCSC */
+                    Return (DCSC)
                 }
-
                 Method (PDOS, 2, NotSerialized)
                 {
                 }
             }
-
             Device (PEGP.DGFX)
             {
-                Name (_ADR, 0x00)  // _ADR: Address
+                Name (_ADR, 0x00)
             }
-
             Scope (\)
             {
                 OperationRegion (IO_T, SystemIO, 0x1000, 0x10)
@@ -4741,13 +4262,11 @@
                     Offset (0x0F), 
                     Offset (0x10)
                 }
-
                 OperationRegion (IO_D, SystemIO, 0x0810, 0x04)
                 Field (IO_D, ByteAcc, NoLock, Preserve)
                 {
                     TRPD,   8
                 }
-
                 OperationRegion (PMIO, SystemIO, 0x0400, 0x80)
                 Field (PMIO, ByteAcc, NoLock, Preserve)
                 {
@@ -4764,7 +4283,6 @@
                     SCIS,   1, 
                     Offset (0x66)
                 }
-
                 OperationRegion (GPIO, SystemIO, 0x0500, 0x64)
                 Field (GPIO, ByteAcc, NoLock, Preserve)
                 {
@@ -4826,7 +4344,6 @@
                     GL0A,   8, 
                     GL0B,   8
                 }
-
                 OperationRegion (RCRB, SystemMemory, 0xFED1C000, 0x4000)
                 Field (RCRB, DWordAcc, Lock, Preserve)
                 {
@@ -4854,25 +4371,21 @@
                     RP7D,   1, 
                     RP8D,   1
                 }
-
                 Method (GETP, 1, Serialized)
                 {
                     If (LEqual (And (Arg0, 0x09), 0x00))
                     {
                         Return (0xFFFFFFFF)
                     }
-
                     If (LEqual (And (Arg0, 0x09), 0x08))
                     {
                         Return (0x0384)
                     }
-
                     ShiftRight (And (Arg0, 0x0300), 0x08, Local0)
                     ShiftRight (And (Arg0, 0x3000), 0x0C, Local1)
                     Return (Multiply (0x1E, Subtract (0x09, Add (Local0, Local1))
                         ))
                 }
-
                 Method (GDMA, 5, Serialized)
                 {
                     If (Arg0)
@@ -4881,55 +4394,44 @@
                         {
                             Return (0x14)
                         }
-
                         If (LAnd (Arg2, Arg4))
                         {
                             Return (Multiply (Subtract (0x04, Arg3), 0x0F))
                         }
-
                         Return (Multiply (Subtract (0x04, Arg3), 0x1E))
                     }
-
                     Return (0xFFFFFFFF)
                 }
-
                 Method (GETT, 1, Serialized)
                 {
                     Return (Multiply (0x1E, Subtract (0x09, Add (And (ShiftRight (Arg0, 0x02
                         ), 0x03), And (Arg0, 0x03)))))
                 }
-
                 Method (GETF, 3, Serialized)
                 {
                     Name (TMPF, 0x00)
                     If (Arg0)
                     {
-                        Or (TMPF, 0x01, TMPF) /* \GETF.TMPF */
+                        Or (TMPF, 0x01, TMPF)
                     }
-
                     If (And (Arg2, 0x02))
                     {
-                        Or (TMPF, 0x02, TMPF) /* \GETF.TMPF */
+                        Or (TMPF, 0x02, TMPF)
                     }
-
                     If (Arg1)
                     {
-                        Or (TMPF, 0x04, TMPF) /* \GETF.TMPF */
+                        Or (TMPF, 0x04, TMPF)
                     }
-
                     If (And (Arg2, 0x20))
                     {
-                        Or (TMPF, 0x08, TMPF) /* \GETF.TMPF */
+                        Or (TMPF, 0x08, TMPF)
                     }
-
                     If (And (Arg2, 0x4000))
                     {
-                        Or (TMPF, 0x10, TMPF) /* \GETF.TMPF */
+                        Or (TMPF, 0x10, TMPF)
                     }
-
-                    Return (TMPF) /* \GETF.TMPF */
+                    Return (TMPF)
                 }
-
                 Method (SETP, 3, Serialized)
                 {
                     If (LGreater (Arg0, 0xF0))
@@ -4944,47 +4446,38 @@
                             {
                                 Return (0x2301)
                             }
-
                             If (LAnd (LLessEqual (Arg0, 0xB4), And (Arg2, 0x01)))
                             {
                                 Return (0x2101)
                             }
                         }
-
                         Return (0x1001)
                     }
                 }
-
                 Method (SDMA, 1, Serialized)
                 {
                     If (LLessEqual (Arg0, 0x14))
                     {
                         Return (0x01)
                     }
-
                     If (LLessEqual (Arg0, 0x1E))
                     {
                         Return (0x02)
                     }
-
                     If (LLessEqual (Arg0, 0x2D))
                     {
                         Return (0x01)
                     }
-
                     If (LLessEqual (Arg0, 0x3C))
                     {
                         Return (0x02)
                     }
-
                     If (LLessEqual (Arg0, 0x5A))
                     {
                         Return (0x01)
                     }
-
                     Return (0x00)
                 }
-
                 Method (SETT, 3, Serialized)
                 {
                     If (And (Arg1, 0x02))
@@ -4993,21 +4486,18 @@
                         {
                             Return (0x0B)
                         }
-
                         If (LAnd (LLessEqual (Arg0, 0xB4), And (Arg2, 0x01)))
                         {
                             Return (0x09)
                         }
                     }
-
                     Return (0x04)
                 }
             }
-
             Device (LANC)
             {
-                Name (_ADR, 0x00190000)  // _ADR: Address
-                Method (_PRW, 0, Serialized)  // _PRW: Power Resources for Wake
+                Name (_ADR, 0x00190000)
+                Method (_PRW, 0, Serialized)
                 {
                     Store (Package (0x02)
                         {
@@ -5018,14 +4508,12 @@
                     {
                         Store (0x00, Index (Local0, 0x01))
                     }
-
                     Return (Local0)
                 }
             }
-
             Device (HDEF)
             {
-                Name (_ADR, 0x001B0000)  // _ADR: Address
+                Name (_ADR, 0x001B0000)
                 OperationRegion (HDAR, PCI_Config, 0x4C, 0x10)
                 Field (HDAR, WordAcc, NoLock, Preserve)
                 {
@@ -5039,10 +4527,9 @@
                     PMES,   1
                 }
             }
-
             Device (EHC1)
             {
-                Name (_ADR, 0x001D0000)  // _ADR: Address
+                Name (_ADR, 0x001D0000)
                 OperationRegion (EHCX, PCI_Config, 0x54, 0x10)
                 Field (EHCX, AnyAcc, NoLock, Preserve)
                 {
@@ -5052,125 +4539,107 @@
                     PIMP,   1, 
                     PMSK,   8
                 }
-
-                Method (_REG, 2, NotSerialized)  // _REG: Region Availability
+                Method (_REG, 2, NotSerialized)
                 {
                     If (LAnd (LEqual (Arg0, 0x02), LEqual (Arg1, 0x01)))
                     {
-                        Store (0x01, PMSK) /* \_SB_.PCI0.EHC1.PMSK */
-                        Store (0x01, PIMP) /* \_SB_.PCI0.EHC1.PIMP */
+                        Store (0x01, PMSK)
+                        Store (0x01, PIMP)
                     }
                 }
-
                 Device (RHUB)
                 {
-                    Name (_ADR, 0x00)  // _ADR: Address
+                    Name (_ADR, 0x00)
                     Device (PRT0)
                     {
-                        Name (_ADR, 0x01)  // _ADR: Address
+                        Name (_ADR, 0x01)
                     }
-
                     Device (PRT1)
                     {
-                        Name (_ADR, 0x02)  // _ADR: Address
+                        Name (_ADR, 0x02)
                     }
                 }
-
-                Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
+                Method (_PRW, 0, NotSerialized)
                 {
                     Return (UPRW (0x0D, 0x03))
                 }
-
-                Name (_S3D, 0x02)  // _S3D: S3 Device State
-                Name (_S4D, 0x03)  // _S4D: S4 Device State
+                Name (_S3D, 0x02)
+                Name (_S4D, 0x03)
                 Scope (RHUB.PRT0)
                 {
-                    Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
+                    Method (_UPC, 0, Serialized)
                     {
-                        Return (EUPC) /* \EUPC */
+                        Return (EUPC)
                     }
-
-                    Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
+                    Method (_PLD, 0, Serialized)
                     {
-                        Return (EPLD) /* \EPLD */
+                        Return (EPLD)
                     }
-
                     Device (HPT0)
                     {
-                        Name (_ADR, 0x01)  // _ADR: Address
+                        Name (_ADR, 0x01)
                     }
-
                     Device (HPT1)
                     {
-                        Name (_ADR, 0x02)  // _ADR: Address
+                        Name (_ADR, 0x02)
                     }
-
                     Device (HPT2)
                     {
-                        Name (_ADR, 0x03)  // _ADR: Address
+                        Name (_ADR, 0x03)
                     }
-
                     Device (HPT3)
                     {
-                        Name (_ADR, 0x04)  // _ADR: Address
-                        Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
+                        Name (_ADR, 0x04)
+                        Method (_UPC, 0, Serialized)
                         {
-                            Return (EUPC) /* \EUPC */
+                            Return (EUPC)
                         }
-
-                        Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
+                        Method (_PLD, 0, Serialized)
                         {
-                            Return (EPLD) /* \EPLD */
+                            Return (EPLD)
                         }
                     }
-
                     Device (HPT4)
                     {
-                        Name (_ADR, 0x05)  // _ADR: Address
-                        Method (_EJD, 0, NotSerialized)  // _EJD: Ejection Dependent Device
+                        Name (_ADR, 0x05)
+                        Method (_EJD, 0, NotSerialized)
                         {
                             Return ("\\_SB.PCI0.RP02.ECF0")
                         }
                     }
-
                     Device (HPT5)
                     {
-                        Name (_ADR, 0x06)  // _ADR: Address
-                        Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
+                        Name (_ADR, 0x06)
+                        Method (_UPC, 0, Serialized)
                         {
-                            Return (EUPC) /* \EUPC */
+                            Return (EUPC)
                         }
-
-                        Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
+                        Method (_PLD, 0, Serialized)
                         {
-                            Return (EPLD) /* \EPLD */
+                            Return (EPLD)
                         }
                     }
-
                     Device (HPT6)
                     {
-                        Name (_ADR, 0x07)  // _ADR: Address
+                        Name (_ADR, 0x07)
                     }
-
                     Device (HPT7)
                     {
-                        Name (_ADR, 0x08)  // _ADR: Address
-                        Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
+                        Name (_ADR, 0x08)
+                        Method (_UPC, 0, Serialized)
                         {
-                            Return (EUPC) /* \EUPC */
+                            Return (EUPC)
                         }
-
-                        Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
+                        Method (_PLD, 0, Serialized)
                         {
-                            Return (EPLD) /* \EPLD */
+                            Return (EPLD)
                         }
                     }
                 }
             }
-
             Device (EHC2)
             {
-                Name (_ADR, 0x001A0000)  // _ADR: Address
+                Name (_ADR, 0x001A0000)
                 OperationRegion (EHCX, PCI_Config, 0x54, 0x10)
                 Field (EHCX, AnyAcc, NoLock, Preserve)
                 {
@@ -5180,112 +4649,96 @@
                     PIMP,   1, 
                     PMSK,   8
                 }
-
-                Method (_REG, 2, NotSerialized)  // _REG: Region Availability
+                Method (_REG, 2, NotSerialized)
                 {
                     If (LAnd (LEqual (Arg0, 0x02), LEqual (Arg1, 0x01)))
                     {
-                        Store (0x01, PMSK) /* \_SB_.PCI0.EHC2.PMSK */
-                        Store (0x01, PIMP) /* \_SB_.PCI0.EHC2.PIMP */
+                        Store (0x01, PMSK)
+                        Store (0x01, PIMP)
                     }
                 }
-
                 Device (RHUB)
                 {
-                    Name (_ADR, 0x00)  // _ADR: Address
+                    Name (_ADR, 0x00)
                     Device (PRT0)
                     {
-                        Name (_ADR, 0x01)  // _ADR: Address
+                        Name (_ADR, 0x01)
                     }
-
                     Device (PRT1)
                     {
-                        Name (_ADR, 0x02)  // _ADR: Address
+                        Name (_ADR, 0x02)
                     }
                 }
-
-                Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
+                Method (_PRW, 0, NotSerialized)
                 {
                     Return (UPRW (0x0D, 0x03))
                 }
-
-                Name (_S3D, 0x02)  // _S3D: S3 Device State
-                Name (_S4D, 0x03)  // _S4D: S4 Device State
+                Name (_S3D, 0x02)
+                Name (_S4D, 0x03)
                 Scope (RHUB.PRT0)
                 {
-                    Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
+                    Method (_UPC, 0, Serialized)
                     {
-                        Return (EUPC) /* \EUPC */
+                        Return (EUPC)
                     }
-
-                    Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
+                    Method (_PLD, 0, Serialized)
                     {
-                        Return (EPLD) /* \EPLD */
+                        Return (EPLD)
                     }
-
                     Device (HPT0)
                     {
-                        Name (_ADR, 0x01)  // _ADR: Address
-                        Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
+                        Name (_ADR, 0x01)
+                        Method (_UPC, 0, Serialized)
                         {
-                            Return (EUPC) /* \EUPC */
+                            Return (EUPC)
                         }
-
-                        Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
+                        Method (_PLD, 0, Serialized)
                         {
-                            Return (EPLD) /* \EPLD */
+                            Return (EPLD)
                         }
                     }
-
                     Device (HPT1)
                     {
-                        Name (_ADR, 0x02)  // _ADR: Address
-                        Method (_UPC, 0, Serialized)  // _UPC: USB Port Capabilities
+                        Name (_ADR, 0x02)
+                        Method (_UPC, 0, Serialized)
                         {
-                            Return (EUPC) /* \EUPC */
+                            Return (EUPC)
                         }
-
-                        Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
+                        Method (_PLD, 0, Serialized)
                         {
-                            Return (EPLD) /* \EPLD */
+                            Return (EPLD)
                         }
                     }
-
                     Device (HPT2)
                     {
-                        Name (_ADR, 0x03)  // _ADR: Address
+                        Name (_ADR, 0x03)
                     }
-
                     Device (HPT3)
                     {
-                        Name (_ADR, 0x04)  // _ADR: Address
+                        Name (_ADR, 0x04)
                     }
-
                     Device (HPT4)
                     {
-                        Name (_ADR, 0x05)  // _ADR: Address
+                        Name (_ADR, 0x05)
                     }
-
                     Device (HPT5)
                     {
-                        Name (_ADR, 0x06)  // _ADR: Address
+                        Name (_ADR, 0x06)
                     }
                 }
             }
-
             Device (PCIB)
             {
-                Name (_ADR, 0x001E0000)  // _ADR: Address
-                Name (_PRW, Package (0x02)  // _PRW: Power Resources for Wake
+                Name (_ADR, 0x001E0000)
+                Name (_PRW, Package (0x02)
                 {
                     0x0B, 
                     0x05
                 })
             }
-
             Device (LPCB)
             {
-                Name (_ADR, 0x001F0000)  // _ADR: Address
+                Name (_ADR, 0x001F0000)
                 Scope (\_SB)
                 {
                     OperationRegion (\_SB.PCI0.LPCB.LPC1, PCI_Config, 0x40, 0xC0)
@@ -5302,43 +4755,39 @@
                         PGRC,   8, 
                         PHRC,   8
                     }
-
                     Device (LNKA)
                     {
-                        Name (_HID, EisaId ("PNP0C0F") /* PCI Interrupt Link Device */)  // _HID: Hardware ID
-                        Name (_UID, 0x01)  // _UID: Unique ID
-                        Method (_DIS, 0, Serialized)  // _DIS: Disable Device
+                        Name (_HID, EisaId ("PNP0C0F"))
+                        Name (_UID, 0x01)
+                        Method (_DIS, 0, Serialized)
                         {
-                            Or (PARC, 0x80, PARC) /* \_SB_.PARC */
+                            Or (PARC, 0x80, PARC)
                         }
-
-                        Name (_PRS, ResourceTemplate ()  // _PRS: Possible Resource Settings
+                        Name (_PRS, ResourceTemplate ()
                         {
                             IRQ (Level, ActiveLow, Shared, )
                                 {1,3,4,5,6,7,10,12,14,15}
                         })
-                        Method (_CRS, 0, Serialized)  // _CRS: Current Resource Settings
+                        Method (_CRS, 0, Serialized)
                         {
                             Name (RTLA, ResourceTemplate ()
                             {
                                 IRQ (Level, ActiveLow, Shared, _Y15)
                                     {}
                             })
-                            CreateWordField (RTLA, \_SB.LNKA._CRS._Y15._INT, IRQ0)  // _INT: Interrupts
-                            Store (Zero, IRQ0) /* \_SB_.LNKA._CRS.IRQ0 */
-                            ShiftLeft (0x01, And (PARC, 0x0F), IRQ0) /* \_SB_.LNKA._CRS.IRQ0 */
-                            Return (RTLA) /* \_SB_.LNKA._CRS.RTLA */
+                            CreateWordField (RTLA, \_SB.LNKA._CRS._Y15._INT, IRQ0)
+                            Store (Zero, IRQ0)
+                            ShiftLeft (0x01, And (PARC, 0x0F), IRQ0)
+                            Return (RTLA)
                         }
-
-                        Method (_SRS, 1, Serialized)  // _SRS: Set Resource Settings
+                        Method (_SRS, 1, Serialized)
                         {
                             CreateWordField (Arg0, 0x01, IRQ0)
                             FindSetRightBit (IRQ0, Local0)
                             Decrement (Local0)
-                            Store (Local0, PARC) /* \_SB_.PARC */
+                            Store (Local0, PARC)
                         }
-
-                        Method (_STA, 0, Serialized)  // _STA: Status
+                        Method (_STA, 0, Serialized)
                         {
                             If (And (PARC, 0x80))
                             {
@@ -5350,43 +4799,39 @@
                             }
                         }
                     }
-
                     Device (LNKB)
                     {
-                        Name (_HID, EisaId ("PNP0C0F") /* PCI Interrupt Link Device */)  // _HID: Hardware ID
-                        Name (_UID, 0x02)  // _UID: Unique ID
-                        Method (_DIS, 0, Serialized)  // _DIS: Disable Device
+                        Name (_HID, EisaId ("PNP0C0F"))
+                        Name (_UID, 0x02)
+                        Method (_DIS, 0, Serialized)
                         {
-                            Or (PBRC, 0x80, PBRC) /* \_SB_.PBRC */
+                            Or (PBRC, 0x80, PBRC)
                         }
-
-                        Name (_PRS, ResourceTemplate ()  // _PRS: Possible Resource Settings
+                        Name (_PRS, ResourceTemplate ()
                         {
                             IRQ (Level, ActiveLow, Shared, )
                                 {1,3,4,5,6,7,11,12,14,15}
                         })
-                        Method (_CRS, 0, Serialized)  // _CRS: Current Resource Settings
+                        Method (_CRS, 0, Serialized)
                         {
                             Name (RTLB, ResourceTemplate ()
                             {
                                 IRQ (Level, ActiveLow, Shared, _Y16)
                                     {}
                             })
-                            CreateWordField (RTLB, \_SB.LNKB._CRS._Y16._INT, IRQ0)  // _INT: Interrupts
-                            Store (Zero, IRQ0) /* \_SB_.LNKB._CRS.IRQ0 */
-                            ShiftLeft (0x01, And (PBRC, 0x0F), IRQ0) /* \_SB_.LNKB._CRS.IRQ0 */
-                            Return (RTLB) /* \_SB_.LNKB._CRS.RTLB */
+                            CreateWordField (RTLB, \_SB.LNKB._CRS._Y16._INT, IRQ0)
+                            Store (Zero, IRQ0)
+                            ShiftLeft (0x01, And (PBRC, 0x0F), IRQ0)
+                            Return (RTLB)
                         }
-
-                        Method (_SRS, 1, Serialized)  // _SRS: Set Resource Settings
+                        Method (_SRS, 1, Serialized)
                         {
                             CreateWordField (Arg0, 0x01, IRQ0)
                             FindSetRightBit (IRQ0, Local0)
                             Decrement (Local0)
-                            Store (Local0, PBRC) /* \_SB_.PBRC */
+                            Store (Local0, PBRC)
                         }
-
-                        Method (_STA, 0, Serialized)  // _STA: Status
+                        Method (_STA, 0, Serialized)
                         {
                             If (And (PBRC, 0x80))
                             {
@@ -5398,43 +4843,39 @@
                             }
                         }
                     }
-
                     Device (LNKC)
                     {
-                        Name (_HID, EisaId ("PNP0C0F") /* PCI Interrupt Link Device */)  // _HID: Hardware ID
-                        Name (_UID, 0x03)  // _UID: Unique ID
-                        Method (_DIS, 0, Serialized)  // _DIS: Disable Device
+                        Name (_HID, EisaId ("PNP0C0F"))
+                        Name (_UID, 0x03)
+                        Method (_DIS, 0, Serialized)
                         {
-                            Or (PCRC, 0x80, PCRC) /* \_SB_.PCRC */
+                            Or (PCRC, 0x80, PCRC)
                         }
-
-                        Name (_PRS, ResourceTemplate ()  // _PRS: Possible Resource Settings
+                        Name (_PRS, ResourceTemplate ()
                         {
                             IRQ (Level, ActiveLow, Shared, )
                                 {1,3,4,5,6,7,10,12,14,15}
                         })
-                        Method (_CRS, 0, Serialized)  // _CRS: Current Resource Settings
+                        Method (_CRS, 0, Serialized)
                         {
                             Name (RTLC, ResourceTemplate ()
                             {
                                 IRQ (Level, ActiveLow, Shared, _Y17)
                                     {}
                             })
-                            CreateWordField (RTLC, \_SB.LNKC._CRS._Y17._INT, IRQ0)  // _INT: Interrupts
-                            Store (Zero, IRQ0) /* \_SB_.LNKC._CRS.IRQ0 */
-                            ShiftLeft (0x01, And (PCRC, 0x0F), IRQ0) /* \_SB_.LNKC._CRS.IRQ0 */
-                            Return (RTLC) /* \_SB_.LNKC._CRS.RTLC */
+                            CreateWordField (RTLC, \_SB.LNKC._CRS._Y17._INT, IRQ0)
+                            Store (Zero, IRQ0)
+                            ShiftLeft (0x01, And (PCRC, 0x0F), IRQ0)
+                            Return (RTLC)
                         }
-
-                        Method (_SRS, 1, Serialized)  // _SRS: Set Resource Settings
+                        Method (_SRS, 1, Serialized)
                         {
                             CreateWordField (Arg0, 0x01, IRQ0)
                             FindSetRightBit (IRQ0, Local0)
                             Decrement (Local0)
-                            Store (Local0, PCRC) /* \_SB_.PCRC */
+                            Store (Local0, PCRC)
                         }
-
-                        Method (_STA, 0, Serialized)  // _STA: Status
+                        Method (_STA, 0, Serialized)
                         {
                             If (And (PCRC, 0x80))
                             {
@@ -5446,43 +4887,39 @@
                             }
                         }
                     }
-
                     Device (LNKD)
                     {
-                        Name (_HID, EisaId ("PNP0C0F") /* PCI Interrupt Link Device */)  // _HID: Hardware ID
-                        Name (_UID, 0x04)  // _UID: Unique ID
-                        Method (_DIS, 0, Serialized)  // _DIS: Disable Device
+                        Name (_HID, EisaId ("PNP0C0F"))
+                        Name (_UID, 0x04)
+                        Method (_DIS, 0, Serialized)
                         {
-                            Or (PDRC, 0x80, PDRC) /* \_SB_.PDRC */
+                            Or (PDRC, 0x80, PDRC)
                         }
-
-                        Name (_PRS, ResourceTemplate ()  // _PRS: Possible Resource Settings
+                        Name (_PRS, ResourceTemplate ()
                         {
                             IRQ (Level, ActiveLow, Shared, )
                                 {1,3,4,5,6,7,11,12,14,15}
                         })
-                        Method (_CRS, 0, Serialized)  // _CRS: Current Resource Settings
+                        Method (_CRS, 0, Serialized)
                         {
                             Name (RTLD, ResourceTemplate ()
                             {
                                 IRQ (Level, ActiveLow, Shared, _Y18)
                                     {}
                             })
-                            CreateWordField (RTLD, \_SB.LNKD._CRS._Y18._INT, IRQ0)  // _INT: Interrupts
-                            Store (Zero, IRQ0) /* \_SB_.LNKD._CRS.IRQ0 */
-                            ShiftLeft (0x01, And (PDRC, 0x0F), IRQ0) /* \_SB_.LNKD._CRS.IRQ0 */
-                            Return (RTLD) /* \_SB_.LNKD._CRS.RTLD */
+                            CreateWordField (RTLD, \_SB.LNKD._CRS._Y18._INT, IRQ0)
+                            Store (Zero, IRQ0)
+                            ShiftLeft (0x01, And (PDRC, 0x0F), IRQ0)
+                            Return (RTLD)
                         }
-
-                        Method (_SRS, 1, Serialized)  // _SRS: Set Resource Settings
+                        Method (_SRS, 1, Serialized)
                         {
                             CreateWordField (Arg0, 0x01, IRQ0)
                             FindSetRightBit (IRQ0, Local0)
                             Decrement (Local0)
-                            Store (Local0, PDRC) /* \_SB_.PDRC */
+                            Store (Local0, PDRC)
                         }
-
-                        Method (_STA, 0, Serialized)  // _STA: Status
+                        Method (_STA, 0, Serialized)
                         {
                             If (And (PDRC, 0x80))
                             {
@@ -5494,43 +4931,39 @@
                             }
                         }
                     }
-
                     Device (LNKE)
                     {
-                        Name (_HID, EisaId ("PNP0C0F") /* PCI Interrupt Link Device */)  // _HID: Hardware ID
-                        Name (_UID, 0x05)  // _UID: Unique ID
-                        Method (_DIS, 0, Serialized)  // _DIS: Disable Device
+                        Name (_HID, EisaId ("PNP0C0F"))
+                        Name (_UID, 0x05)
+                        Method (_DIS, 0, Serialized)
                         {
-                            Or (PERC, 0x80, PERC) /* \_SB_.PERC */
+                            Or (PERC, 0x80, PERC)
                         }
-
-                        Name (_PRS, ResourceTemplate ()  // _PRS: Possible Resource Settings
+                        Name (_PRS, ResourceTemplate ()
                         {
                             IRQ (Level, ActiveLow, Shared, )
                                 {1,3,4,5,6,7,10,12,14,15}
                         })
-                        Method (_CRS, 0, Serialized)  // _CRS: Current Resource Settings
+                        Method (_CRS, 0, Serialized)
                         {
                             Name (RTLE, ResourceTemplate ()
                             {
                                 IRQ (Level, ActiveLow, Shared, _Y19)
                                     {}
                             })
-                            CreateWordField (RTLE, \_SB.LNKE._CRS._Y19._INT, IRQ0)  // _INT: Interrupts
-                            Store (Zero, IRQ0) /* \_SB_.LNKE._CRS.IRQ0 */
-                            ShiftLeft (0x01, And (PERC, 0x0F), IRQ0) /* \_SB_.LNKE._CRS.IRQ0 */
-                            Return (RTLE) /* \_SB_.LNKE._CRS.RTLE */
+                            CreateWordField (RTLE, \_SB.LNKE._CRS._Y19._INT, IRQ0)
+                            Store (Zero, IRQ0)
+                            ShiftLeft (0x01, And (PERC, 0x0F), IRQ0)
+                            Return (RTLE)
                         }
-
-                        Method (_SRS, 1, Serialized)  // _SRS: Set Resource Settings
+                        Method (_SRS, 1, Serialized)
                         {
                             CreateWordField (Arg0, 0x01, IRQ0)
                             FindSetRightBit (IRQ0, Local0)
                             Decrement (Local0)
-                            Store (Local0, PERC) /* \_SB_.PERC */
+                            Store (Local0, PERC)
                         }
-
-                        Method (_STA, 0, Serialized)  // _STA: Status
+                        Method (_STA, 0, Serialized)
                         {
                             If (And (PERC, 0x80))
                             {
@@ -5542,43 +4975,39 @@
                             }
                         }
                     }
-
                     Device (LNKF)
                     {
-                        Name (_HID, EisaId ("PNP0C0F") /* PCI Interrupt Link Device */)  // _HID: Hardware ID
-                        Name (_UID, 0x06)  // _UID: Unique ID
-                        Method (_DIS, 0, Serialized)  // _DIS: Disable Device
+                        Name (_HID, EisaId ("PNP0C0F"))
+                        Name (_UID, 0x06)
+                        Method (_DIS, 0, Serialized)
                         {
-                            Or (PFRC, 0x80, PFRC) /* \_SB_.PFRC */
+                            Or (PFRC, 0x80, PFRC)
                         }
-
-                        Name (_PRS, ResourceTemplate ()  // _PRS: Possible Resource Settings
+                        Name (_PRS, ResourceTemplate ()
                         {
                             IRQ (Level, ActiveLow, Shared, )
                                 {1,3,4,5,6,7,11,12,14,15}
                         })
-                        Method (_CRS, 0, Serialized)  // _CRS: Current Resource Settings
+                        Method (_CRS, 0, Serialized)
                         {
                             Name (RTLF, ResourceTemplate ()
                             {
                                 IRQ (Level, ActiveLow, Shared, _Y1A)
                                     {}
                             })
-                            CreateWordField (RTLF, \_SB.LNKF._CRS._Y1A._INT, IRQ0)  // _INT: Interrupts
-                            Store (Zero, IRQ0) /* \_SB_.LNKF._CRS.IRQ0 */
-                            ShiftLeft (0x01, And (PFRC, 0x0F), IRQ0) /* \_SB_.LNKF._CRS.IRQ0 */
-                            Return (RTLF) /* \_SB_.LNKF._CRS.RTLF */
+                            CreateWordField (RTLF, \_SB.LNKF._CRS._Y1A._INT, IRQ0)
+                            Store (Zero, IRQ0)
+                            ShiftLeft (0x01, And (PFRC, 0x0F), IRQ0)
+                            Return (RTLF)
                         }
-
-                        Method (_SRS, 1, Serialized)  // _SRS: Set Resource Settings
+                        Method (_SRS, 1, Serialized)
                         {
                             CreateWordField (Arg0, 0x01, IRQ0)
                             FindSetRightBit (IRQ0, Local0)
                             Decrement (Local0)
-                            Store (Local0, PFRC) /* \_SB_.PFRC */
+                            Store (Local0, PFRC)
                         }
-
-                        Method (_STA, 0, Serialized)  // _STA: Status
+                        Method (_STA, 0, Serialized)
                         {
                             If (And (PFRC, 0x80))
                             {
@@ -5590,43 +5019,39 @@
                             }
                         }
                     }
-
                     Device (LNKG)
                     {
-                        Name (_HID, EisaId ("PNP0C0F") /* PCI Interrupt Link Device */)  // _HID: Hardware ID
-                        Name (_UID, 0x07)  // _UID: Unique ID
-                        Method (_DIS, 0, Serialized)  // _DIS: Disable Device
+                        Name (_HID, EisaId ("PNP0C0F"))
+                        Name (_UID, 0x07)
+                        Method (_DIS, 0, Serialized)
                         {
-                            Or (PGRC, 0x80, PGRC) /* \_SB_.PGRC */
+                            Or (PGRC, 0x80, PGRC)
                         }
-
-                        Name (_PRS, ResourceTemplate ()  // _PRS: Possible Resource Settings
+                        Name (_PRS, ResourceTemplate ()
                         {
                             IRQ (Level, ActiveLow, Shared, )
                                 {1,3,4,5,6,7,10,12,14,15}
                         })
-                        Method (_CRS, 0, Serialized)  // _CRS: Current Resource Settings
+                        Method (_CRS, 0, Serialized)
                         {
                             Name (RTLG, ResourceTemplate ()
                             {
                                 IRQ (Level, ActiveLow, Shared, _Y1B)
                                     {}
                             })
-                            CreateWordField (RTLG, \_SB.LNKG._CRS._Y1B._INT, IRQ0)  // _INT: Interrupts
-                            Store (Zero, IRQ0) /* \_SB_.LNKG._CRS.IRQ0 */
-                            ShiftLeft (0x01, And (PGRC, 0x0F), IRQ0) /* \_SB_.LNKG._CRS.IRQ0 */
-                            Return (RTLG) /* \_SB_.LNKG._CRS.RTLG */
+                            CreateWordField (RTLG, \_SB.LNKG._CRS._Y1B._INT, IRQ0)
+                            Store (Zero, IRQ0)
+                            ShiftLeft (0x01, And (PGRC, 0x0F), IRQ0)
+                            Return (RTLG)
                         }
-
-                        Method (_SRS, 1, Serialized)  // _SRS: Set Resource Settings
+                        Method (_SRS, 1, Serialized)
                         {
                             CreateWordField (Arg0, 0x01, IRQ0)
                             FindSetRightBit (IRQ0, Local0)
                             Decrement (Local0)
-                            Store (Local0, PGRC) /* \_SB_.PGRC */
+                            Store (Local0, PGRC)
                         }
-
-                        Method (_STA, 0, Serialized)  // _STA: Status
+                        Method (_STA, 0, Serialized)
                         {
                             If (And (PGRC, 0x80))
                             {
@@ -5638,43 +5063,39 @@
                             }
                         }
                     }
-
                     Device (LNKH)
                     {
-                        Name (_HID, EisaId ("PNP0C0F") /* PCI Interrupt Link Device */)  // _HID: Hardware ID
-                        Name (_UID, 0x08)  // _UID: Unique ID
-                        Method (_DIS, 0, Serialized)  // _DIS: Disable Device
+                        Name (_HID, EisaId ("PNP0C0F"))
+                        Name (_UID, 0x08)
+                        Method (_DIS, 0, Serialized)
                         {
-                            Or (PHRC, 0x80, PHRC) /* \_SB_.PHRC */
+                            Or (PHRC, 0x80, PHRC)
                         }
-
-                        Name (_PRS, ResourceTemplate ()  // _PRS: Possible Resource Settings
+                        Name (_PRS, ResourceTemplate ()
                         {
                             IRQ (Level, ActiveLow, Shared, )
                                 {1,3,4,5,6,7,11,12,14,15}
                         })
-                        Method (_CRS, 0, Serialized)  // _CRS: Current Resource Settings
+                        Method (_CRS, 0, Serialized)
                         {
                             Name (RTLH, ResourceTemplate ()
                             {
                                 IRQ (Level, ActiveLow, Shared, _Y1C)
                                     {}
                             })
-                            CreateWordField (RTLH, \_SB.LNKH._CRS._Y1C._INT, IRQ0)  // _INT: Interrupts
-                            Store (Zero, IRQ0) /* \_SB_.LNKH._CRS.IRQ0 */
-                            ShiftLeft (0x01, And (PHRC, 0x0F), IRQ0) /* \_SB_.LNKH._CRS.IRQ0 */
-                            Return (RTLH) /* \_SB_.LNKH._CRS.RTLH */
+                            CreateWordField (RTLH, \_SB.LNKH._CRS._Y1C._INT, IRQ0)
+                            Store (Zero, IRQ0)
+                            ShiftLeft (0x01, And (PHRC, 0x0F), IRQ0)
+                            Return (RTLH)
                         }
-
-                        Method (_SRS, 1, Serialized)  // _SRS: Set Resource Settings
+                        Method (_SRS, 1, Serialized)
                         {
                             CreateWordField (Arg0, 0x01, IRQ0)
                             FindSetRightBit (IRQ0, Local0)
                             Decrement (Local0)
-                            Store (Local0, PHRC) /* \_SB_.PHRC */
+                            Store (Local0, PHRC)
                         }
-
-                        Method (_STA, 0, Serialized)  // _STA: Status
+                        Method (_STA, 0, Serialized)
                         {
                             If (And (PHRC, 0x80))
                             {
@@ -5687,7 +5108,6 @@
                         }
                     }
                 }
-
                 OperationRegion (LPC0, PCI_Config, 0x40, 0xC0)
                 Field (LPC0, AnyAcc, NoLock, Preserve)
                 {
@@ -5699,18 +5119,16 @@
                         ,   13, 
                     RCBA,   18
                 }
-
                 Device (EC0)
                 {
-                    Name (_HID, EisaId ("PNP0C09") /* Embedded Controller Device */)  // _HID: Hardware ID
-                    Name (_UID, 0x01)  // _UID: Unique ID
-                    Name (_GPE, 0x16)  // _GPE: General Purpose Events
-                    Method (_STA, 0, NotSerialized)  // _STA: Status
+                    Name (_HID, EisaId ("PNP0C09"))
+                    Name (_UID, 0x01)
+                    Name (_GPE, 0x16)
+                    Method (_STA, 0, NotSerialized)
                     {
                         Return (0x0F)
                     }
-
-                    Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
+                    Name (_CRS, ResourceTemplate ()
                     {
                         IO (Decode16,
                             0x0062,             // Range Minimum
@@ -5730,7 +5148,7 @@
                     Name (HSWK, 0x00)
                     Method (ECRI, 0, Serialized)
                     {
-                        Store (\WCOS (), OST) /* \_SB_.PCI0.LPCB.EC0_.OST_ */
+                        Store (\WCOS (), OST)
                         PWUP (0x07, 0xFF)
                         Store (GBAP (), Local0)
                         ITLB ()
@@ -5738,12 +5156,11 @@
                         UHSW ()
                         PRIT ()
                     }
-
-                    Method (_REG, 2, NotSerialized)  // _REG: Region Availability
+                    Method (_REG, 2, NotSerialized)
                     {
                         If (LEqual (Arg0, 0x03))
                         {
-                            Store (Arg1, ECRG) /* \_SB_.PCI0.LPCB.EC0_.ECRG */
+                            Store (Arg1, ECRG)
                             Store (LOr (LEqual (\WCOS (), 0x01), LEqual (\WCOS (), 0x02)), Local1)
                             If (LAnd (Arg1, LNot (Local1)))
                             {
@@ -5751,7 +5168,6 @@
                             }
                         }
                     }
-
                     OperationRegion (ECRM, EmbeddedControl, 0x00, 0xFF)
                     Field (ECRM, ByteAcc, NoLock, Preserve)
                     {
@@ -5911,22 +5327,19 @@
                         IDIS,   2, 
                         INAC,   1
                     }
-
-                    Method (_INI, 0, NotSerialized)  // _INI: Initialize
+                    Method (_INI, 0, NotSerialized)
                     {
                         If (LOr (LEqual (\WCOS (), 0x01), LEqual (\WCOS (), 0x02)))
                         {
                             ECRI ()
                         }
                     }
-
                     OperationRegion (MAIO, SystemIO, 0x0200, 0x02)
                     Field (MAIO, ByteAcc, NoLock, Preserve)
                     {
                         MAIN,   8, 
                         MADT,   8
                     }
-
                     IndexField (MAIN, MADT, ByteAcc, NoLock, Preserve)
                     {
                         Offset (0x8C), 
@@ -5937,33 +5350,28 @@
                         Offset (0x9D), 
                         PWMC,   8
                     }
-
                     Method (KFCL, 2, NotSerialized)
                     {
                         Acquire (ECMX, 0xFFFF)
                         If (ECRG)
                         {
-                            Store (Arg1, MFAC) /* \_SB_.PCI0.LPCB.EC0_.MFAC */
+                            Store (Arg1, MFAC)
                             If (LAnd (LGreaterEqual (Arg0, 0x00), LLessEqual (Arg0, 0x64)))
                             {
-                                Store (Arg0, CFAN) /* \_SB_.PCI0.LPCB.EC0_.CFAN */
+                                Store (Arg0, CFAN)
                             }
                         }
-
                         Release (ECMX)
                     }
-
                     Method (KSFS, 1, NotSerialized)
                     {
                         Acquire (ECMX, 0xFFFF)
                         If (ECRG)
                         {
-                            Store (Arg0, CFAN) /* \_SB_.PCI0.LPCB.EC0_.CFAN */
+                            Store (Arg0, CFAN)
                         }
-
                         Release (ECMX)
                     }
-
                     Method (KGFS, 0, NotSerialized)
                     {
                         Store (0x14, Local0)
@@ -5972,11 +5380,9 @@
                         {
                             Store (CFAN, Local0)
                         }
-
                         Release (ECMX)
                         Return (Local0)
                     }
-
                     Method (KRFS, 0, NotSerialized)
                     {
                         Store (0x1E, Local0)
@@ -5985,11 +5391,9 @@
                         {
                             Store (PFAN, Local0)
                         }
-
                         Release (ECMX)
                         Return (Local0)
                     }
-
                     Method (SFSD, 1, Serialized)
                     {
                         Multiply (Arg0, 0x40, Local1)
@@ -6005,10 +5409,8 @@
                             ShiftLeft (Local0, 0x01, Local0)
                             Or (Local0, Local1, Local1)
                         }
-
-                        Store (Local1, PWM0) /* \_SB_.PCI0.LPCB.EC0_.PWM0 */
+                        Store (Local1, PWM0)
                     }
-
                     Method (GFSD, 0, Serialized)
                     {
                         And (PWM0, 0x7F, Local0)
@@ -6024,10 +5426,8 @@
                             Divide (Add (Local0, 0x20), 0x40, Local2, Local1)
                             Increment (Local1)
                         }
-
                         Return (Local1)
                     }
-
                     Method (GSHK, 0, Serialized)
                     {
                         Acquire (ECMX, 0xFFFF)
@@ -6035,37 +5435,31 @@
                         {
                             Store (SHK, Local0)
                         }
-
                         Release (ECMX)
                         Return (Local0)
                     }
-
                     Method (SSHK, 1, Serialized)
                     {
                         Acquire (ECMX, 0xFFFF)
                         If (ECRG)
                         {
                             Store (Arg0, Debug)
-                            Store (Arg0, SHK) /* \_SB_.PCI0.LPCB.EC0_.SHK_ */
+                            Store (Arg0, SHK)
                         }
-
                         Release (ECMX)
                     }
-
                     Method (SAST, 1, Serialized)
                     {
                         Store (0x00, Local0)
                         Acquire (ECMX, 0xFFFF)
                         If (ECRG)
                         {
-                            Store (Arg0, AUDS) /* \_SB_.PCI0.LPCB.EC0_.AUDS */
+                            Store (Arg0, AUDS)
                             Store (0x01, Local0)
                         }
-
                         Release (ECMX)
                         Return (Local0)
                     }
-
                     Method (HSPW, 2, Serialized)
                     {
                         If (HSED)
@@ -6073,40 +5467,35 @@
                             Store (HSWK, Local0)
                             If (Arg0)
                             {
-                                Or (Local0, Arg1, HSWK) /* \_SB_.PCI0.LPCB.EC0_.HSWK */
+                                Or (Local0, Arg1, HSWK)
                             }
                             Else
                             {
-                                And (Local0, Not (Arg1), HSWK) /* \_SB_.PCI0.LPCB.EC0_.HSWK */
+                                And (Local0, Not (Arg1), HSWK)
                             }
                         }
                         Else
                         {
-                            Store (0x00, HSWK) /* \_SB_.PCI0.LPCB.EC0_.HSWK */
+                            Store (0x00, HSWK)
                         }
                     }
-
                     Method (UHSW, 0, Serialized)
                     {
                     }
-
                     Method (CHSW, 1, Serialized)
                     {
                         Store (0x00, Local1)
                         Return (Local1)
                     }
-
                     Method (HWLP, 1, NotSerialized)
                     {
                         Acquire (ECMX, 0xFFFF)
                         If (ECRG)
                         {
-                            XOr (Arg0, 0x00, WLP) /* \_SB_.PCI0.LPCB.EC0_.WLP_ */
+                            XOr (Arg0, 0x00, WLP)
                         }
-
                         Release (ECMX)
                     }
-
                     Method (HWWP, 1, NotSerialized)
                     {
                         Acquire (ECMX, 0xFFFF)
@@ -6116,13 +5505,10 @@
                             {
                                 Sleep (0x1388)
                             }
-
-                            XOr (Arg0, 0x01, WWP) /* \_SB_.PCI0.LPCB.EC0_.WWP_ */
+                            XOr (Arg0, 0x01, WWP)
                         }
-
                         Release (ECMX)
                     }
-
                     Method (ECAB, 4, Serialized)
                     {
                         Store (0xECAB, Local0)
@@ -6130,15 +5516,14 @@
                         If (ECRG)
                         {
                             Store (0xFF00, Local0)
-                            Store (Arg0, ABDI) /* \_SB_.PCI0.LPCB.EC0_.ABDI */
-                            Store (Arg1, ABAD) /* \_SB_.PCI0.LPCB.EC0_.ABAD */
-                            Store (Arg2, ABIX) /* \_SB_.PCI0.LPCB.EC0_.ABIX */
+                            Store (Arg0, ABDI)
+                            Store (Arg1, ABAD)
+                            Store (Arg2, ABIX)
                             If (LEqual (And (Arg1, 0x01), 0x00))
                             {
-                                Store (Arg3, ABDA) /* \_SB_.PCI0.LPCB.EC0_.ABDA */
+                                Store (Arg3, ABDA)
                             }
-
-                            Store (0xFF, ABST) /* \_SB_.PCI0.LPCB.EC0_.ABST */
+                            Store (0xFF, ABST)
                             Sleep (0x5A)
                             Store (0x80, Local0)
                             Store (0x0B, Local1)
@@ -6148,7 +5533,6 @@
                                 Store (ABST, Local0)
                                 Decrement (Local1)
                             }
-
                             ShiftLeft (Local0, 0x08, Local0)
                             If (LAnd (LEqual (Local0, 0x00), And (Arg1, 0x01)))
                             {
@@ -6156,11 +5540,9 @@
                                 Or (Local0, Local1, Local0)
                             }
                         }
-
                         Release (ECMX)
                         Return (Local0)
                     }
-
                     Name (NGBF, 0xFF)
                     Name (NGBT, 0xFF)
                     Name (GACP, 0x07)
@@ -6183,7 +5565,7 @@
                         Acquire (BTMX, 0xFFFF)
                         If (And (GACP, 0x01))
                         {
-                            And (GACP, 0x06, GACP) /* \_SB_.PCI0.LPCB.EC0_.GACP */
+                            And (GACP, 0x06, GACP)
                             Release (BTMX)
                             Store (0x01, Local0)
                             Store (0x00, Local1)
@@ -6193,106 +5575,92 @@
                                 Store (ADP, Local0)
                                 Store (ADID, Local1)
                             }
-
                             Release (ECMX)
-                            Store (Local0, ACST) /* \_SB_.PCI0.LPCB.EC0_.ACST */
+                            Store (Local0, ACST)
                             If (And (DTCD, 0x0800))
                             {
                                 If (And (DTCD, 0x1000))
                                 {
-                                    Store (0x00, ACST) /* \_SB_.PCI0.LPCB.EC0_.ACST */
+                                    Store (0x00, ACST)
                                 }
                                 Else
                                 {
-                                    Store (0x01, ACST) /* \_SB_.PCI0.LPCB.EC0_.ACST */
+                                    Store (0x01, ACST)
                                 }
                             }
-
-                            Store (Local1, SMAR) /* \_SB_.PCI0.LPCB.EC0_.SMAR */
+                            Store (Local1, SMAR)
                         }
                         Else
                         {
                             Release (BTMX)
                         }
                     }
-
                     Method (GACS, 0, Serialized)
                     {
                         UPAD ()
-                        Return (ACST) /* \_SB_.PCI0.LPCB.EC0_.ACST */
+                        Return (ACST)
                     }
-
                     Method (GPID, 0, Serialized)
                     {
                         UPAD ()
-                        Return (SMAR) /* \_SB_.PCI0.LPCB.EC0_.SMAR */
+                        Return (SMAR)
                     }
-
                     Method (GBAP, 0, Serialized)
                     {
                         Acquire (BTMX, 0xFFFF)
                         If (And (GACP, 0x02))
                         {
-                            And (GACP, 0x05, GACP) /* \_SB_.PCI0.LPCB.EC0_.GACP */
+                            And (GACP, 0x05, GACP)
                             Release (BTMX)
                             Acquire (ECMX, 0xFFFF)
                             If (ECRG)
                             {
-                                Store (BATP, NBAP) /* \_SB_.PCI0.LPCB.EC0_.NBAP */
+                                Store (BATP, NBAP)
                             }
-
                             Release (ECMX)
                         }
                         Else
                         {
                             Release (BTMX)
                         }
-
-                        Return (NBAP) /* \_SB_.PCI0.LPCB.EC0_.NBAP */
+                        Return (NBAP)
                     }
-
                     Method (PWUP, 2, Serialized)
                     {
                         Store (0x00, Local0)
                         Acquire (BTMX, 0xFFFF)
                         Or (Arg0, GACP, Local1)
-                        And (Local1, 0x07, GACP) /* \_SB_.PCI0.LPCB.EC0_.GACP */
+                        And (Local1, 0x07, GACP)
                         If (And (GACP, 0x02))
                         {
-                            Or (NGBF, Arg1, NGBF) /* \_SB_.PCI0.LPCB.EC0_.NGBF */
+                            Or (NGBF, Arg1, NGBF)
                         }
-
                         If (And (GACP, 0x04))
                         {
                             If (LNotEqual (NGBT, 0xFF))
                             {
                                 Store (0x01, Local0)
                             }
-
-                            Or (NGBT, Arg1, NGBT) /* \_SB_.PCI0.LPCB.EC0_.NGBT */
+                            Or (NGBT, Arg1, NGBT)
                         }
-
                         Release (BTMX)
                         Return (Local0)
                     }
-
                     Method (BTDR, 1, Serialized)
                     {
                         If (LEqual (Arg0, 0x01))
                         {
-                            Store (0x01, NNBO) /* \_SB_.PCI0.LPCB.EC0_.NNBO */
+                            Store (0x01, NNBO)
                         }
                         Else
                         {
                             If (LEqual (Arg0, 0x00))
                             {
-                                Store (0x00, NNBO) /* \_SB_.PCI0.LPCB.EC0_.NNBO */
+                                Store (0x00, NNBO)
                             }
                         }
-
-                        Return (NNBO) /* \_SB_.PCI0.LPCB.EC0_.NNBO */
+                        Return (NNBO)
                     }
-
                     Method (BSTA, 1, Serialized)
                     {
                         BTDR (0x01)
@@ -6302,10 +5670,8 @@
                         {
                             Store (0x1F, Local1)
                         }
-
                         Return (Local1)
                     }
-
                     Method (GBSS, 2, Serialized)
                     {
                         ToBCD (Arg0, Local0)
@@ -6329,7 +5695,6 @@
                         Concatenate (Local4, Local2, Local3)
                         Return (Local3)
                     }
-
                     Method (GBMF, 0, Serialized)
                     {
                         Store (Buffer (0x12) {}, Local0)
@@ -6341,10 +5706,8 @@
                             Increment (Local3)
                             Store (BMF, Local1)
                         }
-
                         Return (Local0)
                     }
-
                     Method (GCTL, 1, Serialized)
                     {
                         Name (CTBF, Buffer (0x10) {})
@@ -6356,10 +5719,8 @@
                             Increment (Local2)
                             Increment (Local3)
                         }
-
-                        Return (CTBF) /* \_SB_.PCI0.LPCB.EC0_.GCTL.CTBF */
+                        Return (CTBF)
                     }
-
                     Method (GDNM, 1, Serialized)
                     {
                         Name (DNBF, Buffer (0x07) {})
@@ -6371,10 +5732,8 @@
                             Increment (Local2)
                             Increment (Local3)
                         }
-
-                        Return (DNBF) /* \_SB_.PCI0.LPCB.EC0_.GDNM.DNBF */
+                        Return (DNBF)
                     }
-
                     Method (GDCH, 1, Serialized)
                     {
                         Name (DCBF, Buffer (0x04) {})
@@ -6386,10 +5745,8 @@
                             Increment (Local2)
                             Increment (Local3)
                         }
-
-                        Return (DCBF) /* \_SB_.PCI0.LPCB.EC0_.GDCH.DCBF */
+                        Return (DCBF)
                     }
-
                     Method (BTIF, 1, Serialized)
                     {
                         ShiftLeft (0x01, Arg0, Local7)
@@ -6398,7 +5755,6 @@
                         {
                             Return (0xFF)
                         }
-
                         Acquire (BTMX, 0xFFFF)
                         Store (NGBF, Local0)
                         Release (BTMX)
@@ -6406,15 +5762,14 @@
                         {
                             Return (0x00)
                         }
-
                         Store (NDBS, Index (NBST, Arg0))
                         Acquire (BTMX, 0xFFFF)
-                        Or (NGBT, Local7, NGBT) /* \_SB_.PCI0.LPCB.EC0_.NGBT */
+                        Or (NGBT, Local7, NGBT)
                         Release (BTMX)
                         Acquire (ECMX, 0xFFFF)
                         If (ECRG)
                         {
-                            Store (Arg0, BSEL) /* \_SB_.PCI0.LPCB.EC0_.BSEL */
+                            Store (Arg0, BSEL)
                             Store (BFC, Local0)
                             Store (Local0, Index (DerefOf (Index (NBTI, Arg0)), 0x01))
                             Store (Local0, Index (DerefOf (Index (NBTI, Arg0)), 0x02))
@@ -6424,16 +5779,14 @@
                             Store (BSN, Local0)
                             Store (BDAT, Local1)
                         }
-
                         Release (ECMX)
                         Store (GBSS (Local0, Local1), Local2)
                         Store (Local2, Index (DerefOf (Index (NBTI, Arg0)), 0x0A))
                         Acquire (BTMX, 0xFFFF)
-                        And (NGBF, Not (Local7), NGBF) /* \_SB_.PCI0.LPCB.EC0_.NGBF */
+                        And (NGBF, Not (Local7), NGBF)
                         Release (BTMX)
                         Return (0x00)
                     }
-
                     Method (BTST, 2, Serialized)
                     {
                         ShiftLeft (0x01, Arg0, Local7)
@@ -6449,30 +5802,26 @@
                                 }, Index (NBST, Arg0))
                             Return (0xFF)
                         }
-
                         Acquire (BTMX, 0xFFFF)
                         If (Arg1)
                         {
-                            Store (0xFF, NGBT) /* \_SB_.PCI0.LPCB.EC0_.NGBT */
+                            Store (0xFF, NGBT)
                         }
-
                         Store (NGBT, Local0)
                         Release (BTMX)
                         If (LEqual (And (Local0, Local7), 0x00))
                         {
                             Return (0x00)
                         }
-
                         Acquire (ECMX, 0xFFFF)
                         If (ECRG)
                         {
-                            Store (Arg0, BSEL) /* \_SB_.PCI0.LPCB.EC0_.BSEL */
+                            Store (Arg0, BSEL)
                             Store (BST, Local0)
                             Store (BPR, Local3)
                             Store (BRC, Index (DerefOf (Index (NBST, Arg0)), 0x02))
                             Store (BPV, Index (DerefOf (Index (NBST, Arg0)), 0x03))
                         }
-
                         Release (ECMX)
                         If (LEqual (GACS (), 0x01))
                         {
@@ -6482,14 +5831,12 @@
                         {
                             And (Not (0x02), Local0, Local0)
                         }
-
                         If (And (Local0, 0x01))
                         {
                             Acquire (BTMX, 0xFFFF)
-                            Store (Local7, NDCB) /* \_SB_.PCI0.LPCB.EC0_.NDCB */
+                            Store (Local7, NDCB)
                             Release (BTMX)
                         }
-
                         Store (Local0, Index (DerefOf (Index (NBST, Arg0)), 0x00))
                         If (And (Local0, 0x01))
                         {
@@ -6514,25 +5861,22 @@
                                 Store (0x00, Local3)
                             }
                         }
-
                         Store (Local3, Index (DerefOf (Index (NBST, Arg0)), 0x01))
                         Acquire (BTMX, 0xFFFF)
-                        And (NGBT, Not (Local7), NGBT) /* \_SB_.PCI0.LPCB.EC0_.NGBT */
+                        And (NGBT, Not (Local7), NGBT)
                         Release (BTMX)
                         Return (0x00)
                     }
-
                     Method (ITLB, 0, NotSerialized)
                     {
                         Divide (Add (NLB1, 0x09), 0x0A, Local0, Local1)
                         Divide (Add (0x96, 0x09), 0x0A, Local0, Local2)
                         If (ECRG)
                         {
-                            Store (Local1, LB1) /* \_SB_.PCI0.LPCB.EC0_.LB1_ */
-                            Store (Local2, LB2) /* \_SB_.PCI0.LPCB.EC0_.LB2_ */
+                            Store (Local1, LB1)
+                            Store (Local2, LB2)
                         }
                     }
-
                     Method (GBTI, 1, NotSerialized)
                     {
                         Store ("Enter getbattinfo", Debug)
@@ -6541,7 +5885,7 @@
                         {
                             If (And (BATP, ShiftLeft (0x01, Arg0)))
                             {
-                                Store (Arg0, BSEL) /* \_SB_.PCI0.LPCB.EC0_.BSEL */
+                                Store (Arg0, BSEL)
                                 Store (Package (0x03)
                                     {
                                         0x00, 
@@ -6581,7 +5925,6 @@
                                         And (Local1, 0xFFFF, Local1)
                                     }
                                 }
-
                                 Store (Local1, Index (DerefOf (Index (Local0, 0x02)), 0x0E))
                                 Store (ShiftRight (Local1, 0x08), Index (DerefOf (Index (Local0, 0x02
                                     )), 0x0F))
@@ -6605,40 +5948,40 @@
                                     )), 0x1B))
                                 CreateField (DerefOf (Index (Local0, 0x02)), Multiply (0x1C, 0x08), 
                                     Multiply (0x10, 0x08), BTSN)
-                                Store (GBSS (BSN, BDAT), BTSN) /* \_SB_.PCI0.LPCB.EC0_.GBTI.BTSN */
+                                Store (GBSS (BSN, BDAT), BTSN)
                                 Store (GBMF (), Local1)
                                 Store (SizeOf (Local1), Local2)
                                 CreateField (DerefOf (Index (Local0, 0x02)), Multiply (0x2C, 0x08), 
                                     Multiply (Local2, 0x08), BMAN)
-                                Store (Local1, BMAN) /* \_SB_.PCI0.LPCB.EC0_.GBTI.BMAN */
+                                Store (Local1, BMAN)
                                 Add (Local2, 0x2C, Local2)
                                 CreateField (DerefOf (Index (Local0, 0x02)), Multiply (Local2, 0x08), 
                                     Multiply (0x10, 0x08), CLBL)
-                                Store (GCTL (0x00), CLBL) /* \_SB_.PCI0.LPCB.EC0_.GBTI.CLBL */
+                                Store (GCTL (0x00), CLBL)
                                 Add (Local2, 0x11, Local2)
                                 CreateField (DerefOf (Index (Local0, 0x02)), Multiply (Local2, 0x08), 
                                     Multiply (0x07, 0x08), DNAM)
-                                Store (GDNM (0x00), DNAM) /* \_SB_.PCI0.LPCB.EC0_.GBTI.DNAM */
+                                Store (GDNM (0x00), DNAM)
                                 Add (Local2, 0x07, Local2)
                                 CreateField (DerefOf (Index (Local0, 0x02)), Multiply (Local2, 0x08), 
                                     Multiply (0x04, 0x08), DCHE)
-                                Store (GDCH (0x00), DCHE) /* \_SB_.PCI0.LPCB.EC0_.GBTI.DCHE */
+                                Store (GDCH (0x00), DCHE)
                                 Add (Local2, 0x04, Local2)
                                 CreateField (DerefOf (Index (Local0, 0x02)), Multiply (Local2, 0x08), 
                                     Multiply (0x02, 0x08), BMAC)
-                                Store (0x00, BMAC) /* \_SB_.PCI0.LPCB.EC0_.GBTI.BMAC */
+                                Store (0x00, BMAC)
                                 Add (Local2, 0x02, Local2)
                                 CreateField (DerefOf (Index (Local0, 0x02)), Multiply (Local2, 0x08), 
                                     Multiply (0x02, 0x08), BMAD)
-                                Store (BDAT, BMAD) /* \_SB_.PCI0.LPCB.EC0_.GBTI.BMAD */
+                                Store (BDAT, BMAD)
                                 Add (Local2, 0x02, Local2)
                                 CreateField (DerefOf (Index (Local0, 0x02)), Multiply (Local2, 0x08), 
                                     Multiply (0x02, 0x08), BCCU)
-                                Store (BRCC, BCCU) /* \_SB_.PCI0.LPCB.EC0_.GBTI.BCCU */
+                                Store (BRCC, BCCU)
                                 Add (Local2, 0x02, Local2)
                                 CreateField (DerefOf (Index (Local0, 0x02)), Multiply (Local2, 0x08), 
                                     Multiply (0x02, 0x08), BCVO)
-                                Store (BRCV, BCVO) /* \_SB_.PCI0.LPCB.EC0_.GBTI.BCVO */
+                                Store (BRCV, BCVO)
                                 Add (Local2, 0x02, Local2)
                                 CreateField (DerefOf (Index (Local0, 0x02)), Multiply (Local2, 0x08), 
                                     Multiply (0x02, 0x08), BAVC)
@@ -6651,24 +5994,23 @@
                                         And (Local1, 0xFFFF, Local1)
                                     }
                                 }
-
-                                Store (Local1, BAVC) /* \_SB_.PCI0.LPCB.EC0_.GBTI.BAVC */
+                                Store (Local1, BAVC)
                                 Add (Local2, 0x02, Local2)
                                 CreateField (DerefOf (Index (Local0, 0x02)), Multiply (Local2, 0x08), 
                                     Multiply (0x02, 0x08), RTTE)
-                                Store (BRTE, RTTE) /* \_SB_.PCI0.LPCB.EC0_.GBTI.RTTE */
+                                Store (BRTE, RTTE)
                                 Add (Local2, 0x02, Local2)
                                 CreateField (DerefOf (Index (Local0, 0x02)), Multiply (Local2, 0x08), 
                                     Multiply (0x02, 0x08), ATTE)
-                                Store (BATE, RTTE) /* \_SB_.PCI0.LPCB.EC0_.GBTI.RTTE */
+                                Store (BATE, RTTE)
                                 Add (Local2, 0x02, Local2)
                                 CreateField (DerefOf (Index (Local0, 0x02)), Multiply (Local2, 0x08), 
                                     Multiply (0x02, 0x08), ATTF)
-                                Store (BATF, RTTE) /* \_SB_.PCI0.LPCB.EC0_.GBTI.RTTE */
+                                Store (BATF, RTTE)
                                 Add (Local2, 0x02, Local2)
                                 CreateField (DerefOf (Index (Local0, 0x02)), Multiply (Local2, 0x08), 
                                     Multiply (0x01, 0x08), NOBS)
-                                Store (BATN, NOBS) /* \_SB_.PCI0.LPCB.EC0_.GBTI.NOBS */
+                                Store (BATN, NOBS)
                             }
                             Else
                             {
@@ -6687,11 +6029,9 @@
                                     0x00
                                 }, Local0)
                         }
-
                         Release (ECMX)
                         Return (Local0)
                     }
-
                     Method (GBTC, 0, NotSerialized)
                     {
                         Store ("Enter GetBatteryControl", Debug)
@@ -6706,7 +6046,7 @@
                                 }, Local0)
                             If (And (BATP, 0x01))
                             {
-                                Store (0x00, BSEL) /* \_SB_.PCI0.LPCB.EC0_.BSEL */
+                                Store (0x00, BSEL)
                                 Store (0x00, Index (DerefOf (Index (Local0, 0x02)), 0x00))
                                 If (LAnd (LAnd (LEqual (INAC, 0x00), LEqual (INCH, 0x00)), LEqual (
                                     IDIS, 0x00)))
@@ -6748,10 +6088,9 @@
                             {
                                 Store (0xFF, Index (DerefOf (Index (Local0, 0x02)), 0x00))
                             }
-
                             If (And (BATP, 0x02))
                             {
-                                Store (0x01, BSEL) /* \_SB_.PCI0.LPCB.EC0_.BSEL */
+                                Store (0x01, BSEL)
                                 Store (0x00, Index (DerefOf (Index (Local0, 0x02)), 0x01))
                                 If (LAnd (LAnd (LEqual (INAC, 0x00), LEqual (INCH, 0x00)), LEqual (
                                     IDIS, 0x00)))
@@ -6802,11 +6141,9 @@
                                     0x00
                                 }, Local0)
                         }
-
                         Release (ECMX)
                         Return (Local0)
                     }
-
                     Method (SBTC, 3, NotSerialized)
                     {
                         Store ("Enter SetBatteryControl", Debug)
@@ -6831,73 +6168,68 @@
                                     Store (DerefOf (Index (Local0, 0x11)), Local2)
                                     If (LEqual (Local2, 0x00))
                                     {
-                                        Store (0x00, INCH) /* \_SB_.PCI0.LPCB.EC0_.INCH */
-                                        Store (0x00, IDIS) /* \_SB_.PCI0.LPCB.EC0_.IDIS */
-                                        Store (0x00, INAC) /* \_SB_.PCI0.LPCB.EC0_.INAC */
-                                        Store (0x00, MAXC) /* \_SB_.PCI0.LPCB.EC0_.MAXC */
-                                        Store (0x01, PSSB) /* \_SB_.PCI0.LPCB.EC0_.PSSB */
+                                        Store (0x00, INCH)
+                                        Store (0x00, IDIS)
+                                        Store (0x00, INAC)
+                                        Store (0x00, MAXC)
+                                        Store (0x01, PSSB)
                                         Store (Package (0x02)
                                             {
                                                 0x00, 
                                                 0x00
                                             }, Local4)
                                     }
-
                                     If (LEqual (Local2, 0x01))
                                     {
-                                        Store (0x00, INAC) /* \_SB_.PCI0.LPCB.EC0_.INAC */
-                                        Store (0x02, INCH) /* \_SB_.PCI0.LPCB.EC0_.INCH */
-                                        Store (0x01, IDIS) /* \_SB_.PCI0.LPCB.EC0_.IDIS */
-                                        Store (0x00, MAXC) /* \_SB_.PCI0.LPCB.EC0_.MAXC */
-                                        Store (0x00, PSSB) /* \_SB_.PCI0.LPCB.EC0_.PSSB */
+                                        Store (0x00, INAC)
+                                        Store (0x02, INCH)
+                                        Store (0x01, IDIS)
+                                        Store (0x00, MAXC)
+                                        Store (0x00, PSSB)
                                         Store (Package (0x02)
                                             {
                                                 0x00, 
                                                 0x00
                                             }, Local4)
                                     }
-
                                     If (LEqual (Local2, 0x02))
                                     {
-                                        Store (0x01, INAC) /* \_SB_.PCI0.LPCB.EC0_.INAC */
-                                        Store (0x01, INCH) /* \_SB_.PCI0.LPCB.EC0_.INCH */
-                                        Store (0x02, IDIS) /* \_SB_.PCI0.LPCB.EC0_.IDIS */
-                                        Store (0x00, PSSB) /* \_SB_.PCI0.LPCB.EC0_.PSSB */
+                                        Store (0x01, INAC)
+                                        Store (0x01, INCH)
+                                        Store (0x02, IDIS)
+                                        Store (0x00, PSSB)
                                         Store (Package (0x02)
                                             {
                                                 0x00, 
                                                 0x00
                                             }, Local4)
                                     }
-
                                     If (LEqual (Local2, 0x03))
                                     {
-                                        Store (0x02, INCH) /* \_SB_.PCI0.LPCB.EC0_.INCH */
-                                        Store (0x01, IDIS) /* \_SB_.PCI0.LPCB.EC0_.IDIS */
-                                        Store (0x00, INAC) /* \_SB_.PCI0.LPCB.EC0_.INAC */
-                                        Store (0xFA, MAXC) /* \_SB_.PCI0.LPCB.EC0_.MAXC */
-                                        Store (0x00, PSSB) /* \_SB_.PCI0.LPCB.EC0_.PSSB */
+                                        Store (0x02, INCH)
+                                        Store (0x01, IDIS)
+                                        Store (0x00, INAC)
+                                        Store (0xFA, MAXC)
+                                        Store (0x00, PSSB)
                                         Store (Package (0x02)
                                             {
                                                 0x00, 
                                                 0x00
                                             }, Local4)
                                     }
-
                                     If (LEqual (Local2, 0x04))
                                     {
-                                        Store (0xFA, MAXC) /* \_SB_.PCI0.LPCB.EC0_.MAXC */
+                                        Store (0xFA, MAXC)
                                         Store (Package (0x02)
                                             {
                                                 0x00, 
                                                 0x00
                                             }, Local4)
                                     }
-
                                     If (LEqual (Local2, 0x05))
                                     {
-                                        Store (0x00, INAC) /* \_SB_.PCI0.LPCB.EC0_.INAC */
-                                        Store (0x03, INCH) /* \_SB_.PCI0.LPCB.EC0_.INCH */
+                                        Store (0x00, INAC)
+                                        Store (0x03, INCH)
                                         Store (Package (0x02)
                                             {
                                                 0x00, 
@@ -6914,7 +6246,6 @@
                                         }, Local4)
                                 }
                             }
-
                             If (LEqual (Local1, 0x01))
                             {
                                 If (And (BATP, 0x02))
@@ -6923,75 +6254,70 @@
                                     Store (DerefOf (Index (Local0, 0x11)), Local2)
                                     If (LEqual (Local2, 0x00))
                                     {
-                                        Store (0x00, INCH) /* \_SB_.PCI0.LPCB.EC0_.INCH */
-                                        Store (0x00, IDIS) /* \_SB_.PCI0.LPCB.EC0_.IDIS */
-                                        Store (0x00, INAC) /* \_SB_.PCI0.LPCB.EC0_.INAC */
-                                        Store (0x00, MAXC) /* \_SB_.PCI0.LPCB.EC0_.MAXC */
-                                        Store (0x01, PSSB) /* \_SB_.PCI0.LPCB.EC0_.PSSB */
+                                        Store (0x00, INCH)
+                                        Store (0x00, IDIS)
+                                        Store (0x00, INAC)
+                                        Store (0x00, MAXC)
+                                        Store (0x01, PSSB)
                                         Store (Package (0x02)
                                             {
                                                 0x00, 
                                                 0x00
                                             }, Local4)
                                     }
-
                                     If (LEqual (Local2, 0x01))
                                     {
-                                        Store (0x00, INAC) /* \_SB_.PCI0.LPCB.EC0_.INAC */
-                                        Store (0x01, INCH) /* \_SB_.PCI0.LPCB.EC0_.INCH */
-                                        Store (0x02, IDIS) /* \_SB_.PCI0.LPCB.EC0_.IDIS */
-                                        Store (0x00, MAXC) /* \_SB_.PCI0.LPCB.EC0_.MAXC */
-                                        Store (0x00, PSSB) /* \_SB_.PCI0.LPCB.EC0_.PSSB */
+                                        Store (0x00, INAC)
+                                        Store (0x01, INCH)
+                                        Store (0x02, IDIS)
+                                        Store (0x00, MAXC)
+                                        Store (0x00, PSSB)
                                         Store (Package (0x02)
                                             {
                                                 0x00, 
                                                 0x00
                                             }, Local4)
                                     }
-
                                     If (LEqual (Local2, 0x02))
                                     {
-                                        Store (0x01, INAC) /* \_SB_.PCI0.LPCB.EC0_.INAC */
-                                        Store (0x02, INCH) /* \_SB_.PCI0.LPCB.EC0_.INCH */
-                                        Store (0x01, IDIS) /* \_SB_.PCI0.LPCB.EC0_.IDIS */
-                                        Store (0x00, PSSB) /* \_SB_.PCI0.LPCB.EC0_.PSSB */
+                                        Store (0x01, INAC)
+                                        Store (0x02, INCH)
+                                        Store (0x01, IDIS)
+                                        Store (0x00, PSSB)
                                         Store (Package (0x02)
                                             {
                                                 0x00, 
                                                 0x00
                                             }, Local4)
                                     }
-
                                     If (LEqual (Local2, 0x03))
                                     {
-                                        Store (0x01, INCH) /* \_SB_.PCI0.LPCB.EC0_.INCH */
-                                        Store (0x02, IDIS) /* \_SB_.PCI0.LPCB.EC0_.IDIS */
-                                        Store (0x00, INAC) /* \_SB_.PCI0.LPCB.EC0_.INAC */
-                                        Store (0xFA, MAXC) /* \_SB_.PCI0.LPCB.EC0_.MAXC */
-                                        Store (0x00, PSSB) /* \_SB_.PCI0.LPCB.EC0_.PSSB */
+                                        Store (0x01, INCH)
+                                        Store (0x02, IDIS)
+                                        Store (0x00, INAC)
+                                        Store (0xFA, MAXC)
+                                        Store (0x00, PSSB)
                                         Store (Package (0x02)
                                             {
                                                 0x00, 
                                                 0x00
                                             }, Local4)
                                     }
-
                                     If (LEqual (Local2, 0x04))
                                     {
-                                        Store (0x00, INCH) /* \_SB_.PCI0.LPCB.EC0_.INCH */
-                                        Store (0x00, IDIS) /* \_SB_.PCI0.LPCB.EC0_.IDIS */
-                                        Store (0x00, INAC) /* \_SB_.PCI0.LPCB.EC0_.INAC */
+                                        Store (0x00, INCH)
+                                        Store (0x00, IDIS)
+                                        Store (0x00, INAC)
                                         Store (Package (0x02)
                                             {
                                                 0x00, 
                                                 0x00
                                             }, Local4)
                                     }
-
                                     If (LEqual (Local2, 0x05))
                                     {
-                                        Store (0x00, INAC) /* \_SB_.PCI0.LPCB.EC0_.INAC */
-                                        Store (0x03, INCH) /* \_SB_.PCI0.LPCB.EC0_.INCH */
+                                        Store (0x00, INAC)
+                                        Store (0x03, INCH)
                                         Store (Package (0x02)
                                             {
                                                 0x00, 
@@ -7009,11 +6335,9 @@
                                 }
                             }
                         }
-
                         Release (ECMX)
                         Return (Local4)
                     }
-
                     Mutex (OTMT, 0x00)
                     Name (OTLL, 0x00)
                     Name (OTSI, 0x01)
@@ -7021,7 +6345,7 @@
                     Name (OTEN, 0x00)
                     Name (LRPC, 0x00)
                     Name (MXCP, 0x00)
-                    Method (_Q03, 0, NotSerialized)  // _Qxx: EC Query
+                    Method (_Q03, 0, NotSerialized)
                     {
                         Acquire (BTMX, 0xFFFF)
                         Store (NDCB, Local0)
@@ -7029,32 +6353,28 @@
                         PWUP (0x04, Local0)
                         SBTN (Local0, 0x80)
                     }
-
-                    Method (_Q04, 0, NotSerialized)  // _Qxx: EC Query
+                    Method (_Q04, 0, NotSerialized)
                     {
                         Acquire (OTMT, 0xFFFF)
-                        Store (GTST (), OTLL) /* \_SB_.PCI0.LPCB.EC0_.OTLL */
-                        Store (0x01, OTSI) /* \_SB_.PCI0.LPCB.EC0_.OTSI */
+                        Store (GTST (), OTLL)
+                        Store (0x01, OTSI)
                         Release (OTMT)
                         RPPC (0x00)
                         PPNT ()
                     }
-
-                    Method (_Q05, 0, NotSerialized)  // _Qxx: EC Query
+                    Method (_Q05, 0, NotSerialized)
                     {
                         Store (THEM, Local0)
                         \_TZ.ECTE (Local0)
                     }
-
-                    Method (_Q06, 0, NotSerialized)  // _Qxx: EC Query
+                    Method (_Q06, 0, NotSerialized)
                     {
                         PWUP (0x05, Or (0x02, 0x01))
                         If (BTDR (0x02))
                         {
-                            Notify (\_SB.AC, 0x80) // Status Change
+                            Notify (\_SB.AC, 0x80)
                             PNOT ()
                         }
-
                         \_GPE.VBRE (0x00)
                         If (\_SB.PCI0.RP03.PDSX)
                         {
@@ -7071,16 +6391,15 @@
                         {
                             If (LEqual (\_SB.PCI0.LPCB.EC0.ADP, One))
                             {
-                                Store (0x00, GI69) /* \GI69 */
-                                Store (0x00, GL69) /* \GL69 */
+                                Store (0x00, GI69)
+                                Store (0x00, GL69)
                                 Sleep (0x05)
-                                Store (0x01, GL69) /* \GL69 */
-                                Store (0x01, GI69) /* \GI69 */
+                                Store (0x01, GL69)
+                                Store (0x01, GI69)
                             }
                         }
                     }
-
-                    Method (_Q08, 0, NotSerialized)  // _Qxx: EC Query
+                    Method (_Q08, 0, NotSerialized)
                     {
                         PWUP (0x06, 0x01)
                         Store (GBAP (), Local0)
@@ -7089,45 +6408,39 @@
                             PWUP (0x04, 0x02)
                             If (BTDR (0x02))
                             {
-                                Notify (\_SB.BAT1, 0x80) // Status Change
+                                Notify (\_SB.BAT1, 0x80)
                             }
                         }
-
                         If (BTDR (0x02))
                         {
-                            Notify (\_SB.BAT0, 0x81) // Information Change
+                            Notify (\_SB.BAT0, 0x81)
                         }
                     }
-
-                    Method (_Q0A, 0, NotSerialized)  // _Qxx: EC Query
+                    Method (_Q0A, 0, NotSerialized)
                     {
                         Store (\_GPE.VLET (), Local4)
-                        Notify (\_SB.LID, 0x80) // Status Change
+                        Notify (\_SB.LID, 0x80)
                         \_SB.PCI0.ACEL.AJAL ()
                         \_SB.WMID.WGWE (0x08, Add (\_SB.LID._LID (), 0x01))
                     }
-
-                    Method (_Q09, 0, NotSerialized)  // _Qxx: EC Query
+                    Method (_Q09, 0, NotSerialized)
                     {
                         PWUP (0x04, 0x01)
                         If (BTDR (0x02))
                         {
-                            Notify (\_SB.BAT0, 0x80) // Status Change
+                            Notify (\_SB.BAT0, 0x80)
                         }
                     }
-
-                    Method (_Q0B, 0, NotSerialized)  // _Qxx: EC Query
+                    Method (_Q0B, 0, NotSerialized)
                     {
                         \_SB.WMID.WGWE (0x00020000, 0x00)
                     }
-
-                    Method (_Q0C, 0, NotSerialized)  // _Qxx: EC Query
+                    Method (_Q0C, 0, NotSerialized)
                     {
                         Store (THEM, Local0)
                         \_TZ.ECTE (Local0)
                     }
-
-                    Method (_Q18, 0, NotSerialized)  // _Qxx: EC Query
+                    Method (_Q18, 0, NotSerialized)
                     {
                         PWUP (0x06, 0x02)
                         Store (GBAP (), Local0)
@@ -7136,57 +6449,49 @@
                             PWUP (0x04, 0x01)
                             If (BTDR (0x02))
                             {
-                                Notify (\_SB.BAT0, 0x80) // Status Change
+                                Notify (\_SB.BAT0, 0x80)
                             }
                         }
-
                         If (BTDR (0x02))
                         {
-                            Notify (\_SB.BAT1, 0x81) // Information Change
+                            Notify (\_SB.BAT1, 0x81)
                         }
                     }
-
-                    Method (_Q19, 0, NotSerialized)  // _Qxx: EC Query
+                    Method (_Q19, 0, NotSerialized)
                     {
                         PWUP (0x04, 0x02)
                         If (BTDR (0x02))
                         {
-                            Notify (\_SB.BAT1, 0x80) // Status Change
+                            Notify (\_SB.BAT1, 0x80)
                         }
                     }
-
                     Method (SBTN, 2, Serialized)
                     {
                         If (And (Arg0, 0x01))
                         {
                             Notify (\_SB.BAT0, Arg1)
                         }
-
                         If (And (Arg0, 0x02))
                         {
                             Notify (\_SB.BAT1, Arg1)
                         }
                     }
-
                     Method (PRIT, 0, NotSerialized)
                     {
                         RPPC (0x01)
-                        Store (GACS (), PWRS) /* \PWRS */
+                        Store (GACS (), PWRS)
                         PNOT ()
                         If (LEqual (\_SB.PCI0.HDEF.ASTI, 0x00))
                         {
                             SAST (\_SB.PCI0.HDEF.ASTA)
                         }
-
                         Store (\_SB.HST1.GHID (), Local0)
                         If (And (GBAP (), 0x01))
                         {
-                            Store (0x1F, BT0P) /* \_SB_.BT0P */
+                            Store (0x1F, BT0P)
                         }
-
                         \_TZ.ECTI (0x00)
                     }
-
                     Method (GTST, 0, Serialized)
                     {
                         Store (0x02, Local0)
@@ -7195,18 +6500,15 @@
                         {
                             Store (OCPS, Local0)
                         }
-
                         Release (ECMX)
                         Return (Local0)
                     }
-
                     Method (ETSI, 3, Serialized)
                     {
                         If (LNotEqual (Arg2, 0x00))
                         {
-                            Store (0x00, OTRT) /* \_SB_.PCI0.LPCB.EC0_.OTRT */
+                            Store (0x00, OTRT)
                         }
-
                         If (LOr (LNotEqual (Arg1, OTRT), LNotEqual (Arg0, OTEN)))
                         {
                             Acquire (ECMX, 0xFFFF)
@@ -7214,43 +6516,38 @@
                             {
                                 If (LNotEqual (Arg1, OTRT))
                                 {
-                                    Store (Arg1, OCPR) /* \_SB_.PCI0.LPCB.EC0_.OCPR */
-                                    Store (Arg1, OTRT) /* \_SB_.PCI0.LPCB.EC0_.OTRT */
+                                    Store (Arg1, OCPR)
+                                    Store (Arg1, OTRT)
                                 }
-
-                                Store (Arg0, OCPE) /* \_SB_.PCI0.LPCB.EC0_.OCPE */
-                                Store (Arg0, OTEN) /* \_SB_.PCI0.LPCB.EC0_.OTEN */
+                                Store (Arg0, OCPE)
+                                Store (Arg0, OTEN)
                             }
-
                             Release (ECMX)
                         }
                     }
-
                     Method (SMCP, 1, Serialized)
                     {
                         Acquire (OTMT, 0xFFFF)
                         If (LEqual (Arg0, 0x00))
                         {
-                            Store (0x01, MXCP) /* \_SB_.PCI0.LPCB.EC0_.MXCP */
+                            Store (0x01, MXCP)
                             If (LEqual (LRPC, 0x00))
                             {
-                                Store (0x01, LRPC) /* \_SB_.PCI0.LPCB.EC0_.LRPC */
+                                Store (0x01, LRPC)
                             }
                         }
                         Else
                         {
-                            Store (0x00, MXCP) /* \_SB_.PCI0.LPCB.EC0_.MXCP */
+                            Store (0x00, MXCP)
                             If (LEqual (LRPC, 0x01))
                             {
-                                Store (0x00, LRPC) /* \_SB_.PCI0.LPCB.EC0_.LRPC */
+                                Store (0x00, LRPC)
                             }
                         }
-
                         Release (OTMT)
                         RPPC (0x01)
                         PPNT ()
                     }
-
                     Method (RPPC, 1, Serialized)
                     {
                         Store (0x00, Local1)
@@ -7259,7 +6556,6 @@
                             Store (\_PR.CPU0._PSS, Local0)
                             Store (SizeOf (Local0), Local1)
                         }
-
                         Store (0x00, Local3)
                         If (LGreater (Local1, 0x00))
                         {
@@ -7269,17 +6565,16 @@
                         {
                             Store (0x03, Local3)
                         }
-
                         Acquire (OTMT, 0xFFFF)
                         If (OTSI)
                         {
                             Store (OTLL, Local0)
-                            Store (0x00, OTSI) /* \_SB_.PCI0.LPCB.EC0_.OTSI */
+                            Store (0x00, OTSI)
                             If (LEqual (Local0, 0x00))
                             {
                                 If (LLess (LRPC, Local1))
                                 {
-                                    Add (LRPC, 0x01, LRPC) /* \_SB_.PCI0.LPCB.EC0_.LRPC */
+                                    Add (LRPC, 0x01, LRPC)
                                 }
                             }
                             Else
@@ -7288,92 +6583,121 @@
                                 {
                                     If (LGreater (LRPC, MXCP))
                                     {
-                                        Subtract (LRPC, 0x01, LRPC) /* \_SB_.PCI0.LPCB.EC0_.LRPC */
+                                        Subtract (LRPC, 0x01, LRPC)
                                     }
                                 }
                                 Else
                                 {
                                     If (LEqual (Local0, 0x03))
                                     {
-                                        Store (Local1, LRPC) /* \_SB_.PCI0.LPCB.EC0_.LRPC */
+                                        Store (Local1, LRPC)
                                     }
                                 }
                             }
                         }
-
                         If (LLess (LRPC, Local1))
                         {
                             Or (Local3, 0x01, Local3)
                         }
-
                         If (LGreater (LRPC, MXCP))
                         {
                             Or (Local3, 0x02, Local3)
                         }
-
                         ETSI (Local3, 0x14, Arg0)
                         Release (OTMT)
                         If (CondRefOf (\_PR.CPU0._PPC, Local5))
                         {
-                            Store (LRPC, \_PR.CPU0._PPC) /* External reference */
+                            Store (LRPC, \_PR.CPU0._PPC)
                         }
                     }
-
                     Method (PPNT, 0, Serialized)
                     {
                         If (LGreater (TCNT, 0x01))
                         {
                             If (And (PDC0, 0x08))
                             {
-                                Notify (\_PR.CPU0, 0x80) // Performance Capability Change
+                                Notify (\_PR.CPU0, 0x80)
                             }
-
                             If (And (PDC1, 0x08))
                             {
-                                Notify (\_PR.CPU1, 0x80) // Performance Capability Change
+                                Notify (\_PR.CPU1, 0x80)
                             }
-
                             If (And (PDC2, 0x08))
                             {
-                                Notify (\_PR.CPU2, 0x80) // Performance Capability Change
+                                Notify (\_PR.CPU2, 0x80)
                             }
-
                             If (And (PDC3, 0x08))
                             {
-                                Notify (\_PR.CPU3, 0x80) // Performance Capability Change
+                                Notify (\_PR.CPU3, 0x80)
                             }
-
                             If (And (PDC4, 0x08))
                             {
-                                Notify (\_PR.CPU4, 0x80) // Performance Capability Change
+                                Notify (\_PR.CPU4, 0x80)
                             }
-
                             If (And (PDC5, 0x08))
                             {
-                                Notify (\_PR.CPU5, 0x80) // Performance Capability Change
+                                Notify (\_PR.CPU5, 0x80)
                             }
-
                             If (And (PDC6, 0x08))
                             {
-                                Notify (\_PR.CPU6, 0x80) // Performance Capability Change
+                                Notify (\_PR.CPU6, 0x80)
                             }
-
                             If (And (PDC7, 0x08))
                             {
-                                Notify (\_PR.CPU7, 0x80) // Performance Capability Change
+                                Notify (\_PR.CPU7, 0x80)
                             }
                         }
                         Else
                         {
-                            Notify (\_PR.CPU0, 0x80) // Performance Capability Change
+                            Notify (\_PR.CPU0, 0x80)
                         }
                     }
                 }
+                Device (FAN0)
+                {
+                    Name (FCTL, 0)
+                    Name (_HID, EISAID("PNP0C0B"))  
+                    Name (_UID, 0)
+                    Name (_FIF, Package () {0, 0, 0, 0})
+                    Name (_FPS, Package () {
+                        0,
+                        Package () {100, 0, 100,  0xFFFFFFFF,  0xFFFFFFFF},
+                        Package () {50, 1, 75,  0xFFFFFFFF,  0xFFFFFFFF},
+                        Package () {255, 2, 50,  0xFFFFFFFF,  0xFFFFFFFF}
+                    })
+
+                    Method (_FSL, 1) {
+                        If (LEqual (Arg0, 0xFF)) {
+                            Store (Arg0, FCTL)
+                            Acquire (\_SB.PCI0.LPCB.EC0.ECMX, 0xFFFF)
+                            Store (0xFF, \_SB.PCI0.LPCB.EC0.FTGC)
+                            Release (\_SB.PCI0.LPCB.EC0.ECMX)
+                        }
+                        Else {
+                            Store (Arg0, FCTL)
+                            Divide (Multiply (Subtract (100, Arg0), 128), 100, , Local0)
+                            Acquire (\_SB.PCI0.LPCB.EC0.ECMX, 0xFFFF)
+                            Store (Local0, \_SB.PCI0.LPCB.EC0.FTGC)
+                            Release (\_SB.PCI0.LPCB.EC0.ECMX)
+                        }
+                    }
 
+                    Method (_FST, 0) {
+                        If (LEqual (FCTL, 0xFF)) {
+                            Return (Package () {0, 0xFF,  0xFFFFFFFF})
+                        }
+                        Else {
+                            Divide (FCTL, 50, , Local0)
+                            Multiply (Local0, 50, Local0)
+                            Store (Local0, FCTL)
+                            Return (Package () {0, FCTL, 0xFFFFFFFF})
+                        }
+                    }
+                }
                 Device (DMAC)
                 {
-                    Name (_HID, EisaId ("PNP0200") /* PC-class DMA Controller */)  // _HID: Hardware ID
-                    Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
+                    Name (_HID, EisaId ("PNP0200"))
+                    Name (_CRS, ResourceTemplate ()
                     {
                         IO (Decode16,
                             0x0000,             // Range Minimum
@@ -7403,11 +6727,10 @@
                             {4}
                     })
                 }
-
                 Device (FWHD)
                 {
-                    Name (_HID, EisaId ("INT0800") /* Intel 82802 Firmware Hub Device */)  // _HID: Hardware ID
-                    Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
+                    Name (_HID, EisaId ("INT0800"))
+                    Name (_CRS, ResourceTemplate ()
                     {
                         Memory32Fixed (ReadOnly,
                             0xFF000000,         // Address Base
@@ -7415,12 +6738,11 @@
                             )
                     })
                 }
-
                 Device (HTAM)
                 {
-                    Name (_HID, EisaId ("PNP0C02") /* PNP Motherboard Resources */)  // _HID: Hardware ID
-                    Name (_UID, 0x05)  // _UID: Unique ID
-                    Method (_CRS, 0, Serialized)  // _CRS: Current Resource Settings
+                    Name (_HID, EisaId ("PNP0C02"))
+                    Name (_UID, 0x05)
+                    Method (_CRS, 0, Serialized)
                     {
                         Return (ResourceTemplate ()
                         {
@@ -7442,8 +6764,7 @@
                                 )
                         })
                     }
-
-                    Method (_STA, 0, NotSerialized)  // _STA: Status
+                    Method (_STA, 0, NotSerialized)
                     {
                         If (LEqual (TPMX, 0x00))
                         {
@@ -7455,10 +6776,9 @@
                         }
                     }
                 }
-
                 Device (GTPM)
                 {
-                    Method (_HID, 0, Serialized)  // _HID: Hardware ID
+                    Method (_HID, 0, Serialized)
                     {
                         If (LEqual (TVID, 0x15D1))
                         {
@@ -7469,9 +6789,8 @@
                             Return (0x310CD041)
                         }
                     }
-
-                    Name (_CID, EisaId ("PNP0C31"))  // _CID: Compatible ID
-                    Method (_CRS, 0, Serialized)  // _CRS: Current Resource Settings
+                    Name (_CID, EisaId ("PNP0C31"))
+                    Method (_CRS, 0, Serialized)
                     {
                         Return (ResourceTemplate ()
                         {
@@ -7493,7 +6812,6 @@
                                 )
                         })
                     }
-
                     OperationRegion (TMMB, SystemMemory, 0xFED40000, 0x1000)
                     Field (TMMB, ByteAcc, Lock, Preserve)
                     {
@@ -7505,8 +6823,7 @@
                         TVID,   16, 
                         TDID,   16
                     }
-
-                    Method (_STA, 0, NotSerialized)  // _STA: Status
+                    Method (_STA, 0, NotSerialized)
                     {
                         If (LEqual (ACCS, 0xFF))
                         {
@@ -7524,55 +6841,56 @@
                             }
                         }
                     }
-
-                    Name (PUID, ToUUID ("3dddfaa6-361b-4eb4-a424-8d10089d1653") /* Physical Presence Interface */)
+                    Name (PUID, Buffer (0x10)
+                    {
+                        /* 0000 */   0xA6, 0xFA, 0xDD, 0x3D, 0x1B, 0x36, 0xB4, 0x4E,
+                        /* 0008 */   0xA4, 0x24, 0x8D, 0x10, 0x08, 0x9D, 0x16, 0x53
+                    })
                     Name (REV1, "1.0")
                     Name (PPIB, Buffer (0x02)
                     {
-                         0x00, 0x00                                       /* .. */
+                         0x00, 0x00
                     })
-                    Name (MUID, ToUUID ("376054ed-cc13-4675-901c-4756d7f2d45d"))
-                    Method (_DSM, 4, NotSerialized)  // _DSM: Device-Specific Method
+                    Name (MUID, Buffer (0x10)
+                    {
+                        /* 0000 */   0xED, 0x54, 0x60, 0x37, 0x13, 0xCC, 0x75, 0x46,
+                        /* 0008 */   0x90, 0x1C, 0x47, 0x56, 0xD7, 0xF2, 0xD4, 0x5D
+                    })
+                    Method (_DSM, 4, NotSerialized)
                     {
                         Store (Arg0, Local0)
                         If (LEqual (\SRCP (Local0, PUID), 0x01))
                         {
                             Return (HPPI (Arg0, Arg1, Arg2, Arg3))
                         }
-
                         If (LEqual (\SRCP (Local0, MUID), 0x01))
                         {
                             Return (HMOR (Arg0, Arg1, Arg2, Arg3))
                         }
-
                         Return (0x00)
                     }
-
                     Method (HPPI, 4, NotSerialized)
                     {
                         If (LNotEqual (Arg1, 0x01))
                         {
                             Return (Buffer (0x01)
                             {
-                                 0x00                                             /* . */
+                                 0x00
                             })
                         }
-
                         If (LLessEqual (Arg2, 0x06))
                         {
                             If (LEqual (Arg2, 0x00))
                             {
                                 Return (Buffer (0x01)
                                 {
-                                     0x7F                                             /* . */
+                                     0x7F
                                 })
                             }
-
                             If (LEqual (Arg2, 0x01))
                             {
-                                Return (REV1) /* \_SB_.PCI0.LPCB.GTPM.REV1 */
+                                Return (REV1)
                             }
-
                             If (LEqual (Arg2, 0x02))
                             {
                                 Store (DerefOf (Index (Arg3, 0x00)), Local0)
@@ -7598,7 +6916,6 @@
                                                     Return (Local2)
                                                 }
                                             }
-
                                             \_SB.SSMI (0xEA7E, 0x00, Local0, 0x00, 0x01)
                                             Store (EAX, Debug)
                                             Store (EBX, Debug)
@@ -7608,7 +6925,6 @@
                                                 Store (0x00, Local2)
                                             }
                                         }
-
                                         Return (Local2)
                                     }
                                 }
@@ -7617,7 +6933,6 @@
                                     Return (0x01)
                                 }
                             }
-
                             If (LEqual (Arg2, 0x03))
                             {
                                 Store ("TPM Func 3", Debug)
@@ -7641,15 +6956,12 @@
                                         Store (Local0, Index (DSMB, 0x01))
                                     }
                                 }
-
-                                Return (DSMB) /* \_SB_.PCI0.LPCB.GTPM.HPPI.DSMB */
+                                Return (DSMB)
                             }
-
                             If (LEqual (Arg2, 0x04))
                             {
                                 Return (0x02)
                             }
-
                             If (LEqual (Arg2, 0x05))
                             {
                                 Store ("TPM Func 5", Debug)
@@ -7670,13 +6982,11 @@
                                     \_SB.SSMI (0xEA7D, 0x02, 0x00, 0x00, 0x01)
                                     Store (ECX, Index (DSMC, 0x02))
                                 }
-
-                                Return (DSMC) /* \_SB_.PCI0.LPCB.GTPM.HPPI.DSMC */
+                                Return (DSMC)
                             }
-
                             If (LEqual (Arg2, 0x06))
                             {
-                                Store (Arg3, PPIB) /* \_SB_.PCI0.LPCB.GTPM.PPIB */
+                                Store (Arg3, PPIB)
                                 If (LAnd (LOr (LEqual (DerefOf (Index (PPIB, 0x00)), 0x45), 
                                     LEqual (DerefOf (Index (PPIB, 0x00)), 0x65)), LOr (LEqual (DerefOf (Index (
                                     PPIB, 0x01)), 0x4E), LEqual (DerefOf (Index (PPIB, 0x01)), 0x6E))))
@@ -7689,25 +6999,21 @@
                                 }
                             }
                         }
-
                         Return (Buffer (0x01)
                         {
-                             0x00                                             /* . */
+                             0x00
                         })
                     }
-
                     Method (HMOR, 4, NotSerialized)
                     {
                         If (LNotEqual (Arg1, 0x01))
                         {
                             Return (0x01)
                         }
-
                         If (LNotEqual (Arg2, 0x01))
                         {
                             Return (0x01)
                         }
-
                         Store (DerefOf (Index (Arg3, 0x00)), Local0)
                         \_SB.SSMI (0xEA7F, Local0, 0x00, 0x00, 0x01)
                         Store (0x00, Local0)
@@ -7715,15 +7021,13 @@
                         {
                             Store (0x01, Local0)
                         }
-
                         Return (Local0)
                     }
                 }
-
                 Device (HPET)
                 {
-                    Name (_HID, EisaId ("PNP0103") /* HPET System Timer */)  // _HID: Hardware ID
-                    Name (_UID, 0x00)  // _UID: Unique ID
+                    Name (_HID, EisaId ("PNP0103"))
+                    Name (_UID, 0x00)
                     Name (BUF0, ResourceTemplate ()
                     {
                         Memory32Fixed (ReadWrite,
@@ -7731,7 +7035,7 @@
                             0x00000400,         // Address Length
                             _Y1D)
                     })
-                    Method (_STA, 0, NotSerialized)  // _STA: Status
+                    Method (_STA, 0, NotSerialized)
                     {
                         If (LGreaterEqual (OSYS, 0x07D1))
                         {
@@ -7747,39 +7051,33 @@
                                 Return (0x0B)
                             }
                         }
-
                         Return (0x00)
                     }
-
-                    Method (_CRS, 0, Serialized)  // _CRS: Current Resource Settings
+                    Method (_CRS, 0, Serialized)
                     {
                         If (HPAE)
                         {
-                            CreateDWordField (BUF0, \_SB.PCI0.LPCB.HPET._Y1D._BAS, HPT0)  // _BAS: Base Address
+                            CreateDWordField (BUF0, \_SB.PCI0.LPCB.HPET._Y1D._BAS, HPT0)
                             If (LEqual (HPAS, 0x01))
                             {
-                                Store (0xFED01000, HPT0) /* \_SB_.PCI0.LPCB.HPET._CRS.HPT0 */
+                                Store (0xFED01000, HPT0)
                             }
-
                             If (LEqual (HPAS, 0x02))
                             {
-                                Store (0xFED02000, HPT0) /* \_SB_.PCI0.LPCB.HPET._CRS.HPT0 */
+                                Store (0xFED02000, HPT0)
                             }
-
                             If (LEqual (HPAS, 0x03))
                             {
-                                Store (0xFED03000, HPT0) /* \_SB_.PCI0.LPCB.HPET._CRS.HPT0 */
+                                Store (0xFED03000, HPT0)
                             }
                         }
-
-                        Return (BUF0) /* \_SB_.PCI0.LPCB.HPET.BUF0 */
+                        Return (BUF0)
                     }
                 }
-
                 Device (IPIC)
                 {
-                    Name (_HID, EisaId ("PNP0000") /* 8259-compatible Programmable Interrupt Controller */)  // _HID: Hardware ID
-                    Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
+                    Name (_HID, EisaId ("PNP0000"))
+                    Name (_CRS, ResourceTemplate ()
                     {
                         IO (Decode16,
                             0x0020,             // Range Minimum
@@ -7887,11 +7185,10 @@
                             {2}
                     })
                 }
-
                 Device (MATH)
                 {
-                    Name (_HID, EisaId ("PNP0C04") /* x87-compatible Floating Point Processing Unit */)  // _HID: Hardware ID
-                    Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
+                    Name (_HID, EisaId ("PNP0C04"))
+                    Name (_CRS, ResourceTemplate ()
                     {
                         IO (Decode16,
                             0x00F0,             // Range Minimum
@@ -7903,12 +7200,11 @@
                             {13}
                     })
                 }
-
                 Device (LDRC)
                 {
-                    Name (_HID, EisaId ("PNP0C02") /* PNP Motherboard Resources */)  // _HID: Hardware ID
-                    Name (_UID, 0x02)  // _UID: Unique ID
-                    Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
+                    Name (_HID, EisaId ("PNP0C02"))
+                    Name (_UID, 0x02)
+                    Name (_CRS, ResourceTemplate ()
                     {
                         IO (Decode16,
                             0x002E,             // Range Minimum
@@ -8014,11 +7310,10 @@
                             )
                     })
                 }
-
                 Device (RTC)
                 {
-                    Name (_HID, EisaId ("PNP0B00") /* AT Real-Time Clock */)  // _HID: Hardware ID
-                    Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
+                    Name (_HID, EisaId ("PNP0B00"))
+                    Name (_CRS, ResourceTemplate ()
                     {
                         IO (Decode16,
                             0x0070,             // Range Minimum
@@ -8030,11 +7325,10 @@
                             {8}
                     })
                 }
-
                 Device (TIMR)
                 {
-                    Name (_HID, EisaId ("PNP0100") /* PC-class System Timer */)  // _HID: Hardware ID
-                    Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
+                    Name (_HID, EisaId ("PNP0100"))
+                    Name (_CRS, ResourceTemplate ()
                     {
                         IO (Decode16,
                             0x0040,             // Range Minimum
@@ -8052,17 +7346,15 @@
                             {0}
                     })
                 }
-
                 Device (SIO)
                 {
-                    Name (_HID, EisaId ("PNP0A06") /* Generic Container Device */)  // _HID: Hardware ID
+                    Name (_HID, EisaId ("PNP0A06"))
                     OperationRegion (SOCG, SystemIO, 0x4E, 0x02)
                     Field (SOCG, ByteAcc, NoLock, Preserve)
                     {
                         SIOI,   8, 
                         SIOD,   8
                     }
-
                     IndexField (SIOI, SIOD, ByteAcc, NoLock, Preserve)
                     {
                         Offset (0x01), 
@@ -8092,7 +7384,6 @@
                         FRBS,   8, 
                         FRDM,   4
                     }
-
                     OperationRegion (SORT, SystemIO, 0x0210, 0x10)
                     Field (SORT, ByteAcc, NoLock, Preserve)
                     {
@@ -8103,33 +7394,28 @@
                         GP3,    8, 
                         GP4,    8
                     }
-
                     Mutex (SIOM, 0x00)
                     Name (MSPS, 0x00)
                     Name (MSPV, 0x00)
-                    Method (_INI, 0, NotSerialized)  // _INI: Initialize
+                    Method (_INI, 0, NotSerialized)
                     {
                         ECM ()
                         If (LNotEqual (CR0D, 0x7A))
                         {
-                            Store (0x00, SDFG) /* \SDFG */
+                            Store (0x00, SDFG)
                         }
-
                         DCM ()
                     }
-
                     Method (ECM, 0, NotSerialized)
                     {
                         Acquire (SIOM, 0xFFFF)
-                        Store (0x55, SIOI) /* \_SB_.PCI0.LPCB.SIO_.SIOI */
+                        Store (0x55, SIOI)
                     }
-
                     Method (DCM, 0, NotSerialized)
                     {
-                        Store (0xAA, SIOI) /* \_SB_.PCI0.LPCB.SIO_.SIOI */
+                        Store (0xAA, SIOI)
                         Release (SIOM)
                     }
-
                     Method (GETS, 1, NotSerialized)
                     {
                         ECM ()
@@ -8152,17 +7438,14 @@
                                 }
                             }
                         }
-
                         Store (0x00, Local1)
                         If (And (Local0, 0xC0))
                         {
                             ShiftLeft (Local0, 0x02, Local1)
                         }
-
                         DCM ()
                         Return (Local1)
                     }
-
                     Method (GETR, 1, NotSerialized)
                     {
                         Name (GRES, Package (0x04)
@@ -8201,7 +7484,6 @@
                                 }
                             }
                         }
-
                         ShiftLeft (Local0, 0x02, Index (GRES, 0x00))
                         ShiftLeft (Local1, 0x03, Index (GRES, 0x01))
                         Store (0x00, Local4)
@@ -8209,19 +7491,16 @@
                         {
                             ShiftLeft (0x01, Local2, Local4)
                         }
-
                         Store (Local4, Index (GRES, 0x02))
                         Store (0x00, Local4)
                         If (LAnd (LGreater (Local3, 0x00), LLess (Local3, 0x04)))
                         {
                             ShiftLeft (0x01, Local3, Local4)
                         }
-
                         Store (Local4, Index (GRES, 0x03))
                         DCM ()
-                        Return (GRES) /* \_SB_.PCI0.LPCB.SIO_.GETR.GRES */
+                        Return (GRES)
                     }
-
                     Method (SETR, 5, NotSerialized)
                     {
                         ECM ()
@@ -8235,7 +7514,6 @@
                         {
                             Store (0x00, Local1)
                         }
-
                         FindSetRightBit (Arg4, Local2)
                         If (LAnd (LGreater (Local2, 0x01), LLess (Local2, 0x05)))
                         {
@@ -8245,35 +7523,32 @@
                         {
                             Store (0x0F, Local2)
                         }
-
                         If (LEqual (Arg0, 0x01))
                         {
-                            Store (Local0, PPBS) /* \_SB_.PCI0.LPCB.SIO_.PPBS */
-                            Store (Local1, PPIQ) /* \_SB_.PCI0.LPCB.SIO_.PPIQ */
-                            Store (Local2, PPDM) /* \_SB_.PCI0.LPCB.SIO_.PPDM */
+                            Store (Local0, PPBS)
+                            Store (Local1, PPIQ)
+                            Store (Local2, PPDM)
                         }
                         Else
                         {
                             If (LEqual (Arg0, 0x02))
                             {
-                                And (Local0, 0xFE, S1BS) /* \_SB_.PCI0.LPCB.SIO_.S1BS */
-                                Store (Local1, S1IQ) /* \_SB_.PCI0.LPCB.SIO_.S1IQ */
+                                And (Local0, 0xFE, S1BS)
+                                Store (Local1, S1IQ)
                             }
                             Else
                             {
                                 If (LEqual (Arg0, 0x03))
                                 {
-                                    And (Local0, 0xFE, S2BS) /* \_SB_.PCI0.LPCB.SIO_.S2BS */
-                                    ShiftRight (Arg2, 0x03, FRBS) /* \_SB_.PCI0.LPCB.SIO_.FRBS */
-                                    Store (Local1, S2IQ) /* \_SB_.PCI0.LPCB.SIO_.S2IQ */
-                                    Store (Local2, FRDM) /* \_SB_.PCI0.LPCB.SIO_.FRDM */
+                                    And (Local0, 0xFE, S2BS)
+                                    ShiftRight (Arg2, 0x03, FRBS)
+                                    Store (Local1, S2IQ)
+                                    Store (Local2, FRDM)
                                 }
                             }
                         }
-
                         DCM ()
                     }
-
                     Method (GLPM, 0, NotSerialized)
                     {
                         ECM ()
@@ -8291,16 +7566,13 @@
                             {
                                 Store (0x01, Local2)
                             }
-
                             If (LEqual (Local1, 0x01))
                             {
                                 Store (0x02, Local2)
                             }
                         }
-
                         Return (Local2)
                     }
-
                     Method (DPWS, 1, Serialized)
                     {
                         ECM ()
@@ -8322,42 +7594,37 @@
                                 }
                             }
                         }
-
                         DCM ()
                         Return (Local0)
                     }
-
                     Method (DPW, 2, Serialized)
                     {
                         ECM ()
                         If (LEqual (Arg0, 0x01))
                         {
-                            Store (Arg1, PPPW) /* \_SB_.PCI0.LPCB.SIO_.PPPW */
+                            Store (Arg1, PPPW)
                         }
                         Else
                         {
                             If (LEqual (Arg0, 0x02))
                             {
-                                Store (Arg1, S1PW) /* \_SB_.PCI0.LPCB.SIO_.S1PW */
+                                Store (Arg1, S1PW)
                             }
                             Else
                             {
                                 If (LEqual (Arg0, 0x03))
                                 {
-                                    Store (Arg1, S2PW) /* \_SB_.PCI0.LPCB.SIO_.S2PW */
+                                    Store (Arg1, S2PW)
                                 }
                             }
                         }
-
                         DCM ()
                     }
-
                     Method (GDPA, 0, Serialized)
                     {
                         Store (GETS (0x02), Local0)
                         Return (Local0)
                     }
-
                     Alias (GDPA, \_SB.GDPA)
                     Method (SODS, 2, Serialized)
                     {
@@ -8375,10 +7642,8 @@
                                 Store (0x0F, Local0)
                             }
                         }
-
                         Return (Local0)
                     }
-
                     Method (DSOD, 1, Serialized)
                     {
                         If (GETS (Arg0))
@@ -8393,12 +7658,11 @@
                             SETR (Arg0, 0x00, 0x00, 0x00, 0x00)
                         }
                     }
-
                     Device (HCOM)
                     {
-                        Name (_HID, EisaId ("PNP0C02") /* PNP Motherboard Resources */)  // _HID: Hardware ID
-                        Name (_UID, 0x04)  // _UID: Unique ID
-                        Method (_CRS, 0, Serialized)  // _CRS: Current Resource Settings
+                        Name (_HID, EisaId ("PNP0C02"))
+                        Name (_UID, 0x04)
+                        Method (_CRS, 0, Serialized)
                         {
                             Name (CMRS, ResourceTemplate ()
                             {
@@ -8409,15 +7673,14 @@
                                     0x08,               // Length
                                     _Y1E)
                             })
-                            CreateWordField (CMRS, \_SB.PCI0.LPCB.SIO.HCOM._CRS._Y1E._MIN, MIN1)  // _MIN: Minimum Base Address
-                            CreateWordField (CMRS, \_SB.PCI0.LPCB.SIO.HCOM._CRS._Y1E._MAX, MAX1)  // _MAX: Maximum Base Address
+                            CreateWordField (CMRS, \_SB.PCI0.LPCB.SIO.HCOM._CRS._Y1E._MIN, MIN1)
+                            CreateWordField (CMRS, \_SB.PCI0.LPCB.SIO.HCOM._CRS._Y1E._MAX, MAX1)
                             Store (GETR (0x02), Local1)
-                            Store (DerefOf (Index (Local1, 0x00)), MIN1) /* \_SB_.PCI0.LPCB.SIO_.HCOM._CRS.MIN1 */
-                            Store (MIN1, MAX1) /* \_SB_.PCI0.LPCB.SIO_.HCOM._CRS.MAX1 */
-                            Return (CMRS) /* \_SB_.PCI0.LPCB.SIO_.HCOM._CRS.CMRS */
+                            Store (DerefOf (Index (Local1, 0x00)), MIN1)
+                            Store (MIN1, MAX1)
+                            Return (CMRS)
                         }
-
-                        Method (_STA, 0, NotSerialized)  // _STA: Status
+                        Method (_STA, 0, NotSerialized)
                         {
                             Store (0x00, Local0)
                             If (LEGF)
@@ -8427,16 +7690,14 @@
                                     Store (0x0F, Local0)
                                 }
                             }
-
                             Return (Local0)
                         }
                     }
-
                     Device (COM1)
                     {
-                        Name (_HID, EisaId ("PNP0501") /* 16550A-compatible COM Serial Port */)  // _HID: Hardware ID
-                        Name (_CID, EisaId ("PNP0500") /* Standard PC COM Serial Port */)  // _CID: Compatible ID
-                        Name (_DDN, "COM1")  // _DDN: DOS Device Name
+                        Name (_HID, EisaId ("PNP0501"))
+                        Name (_CID, EisaId ("PNP0500"))
+                        Name (_DDN, "COM1")
                         Name (RCOD, 0x00)
                         Name (POSS, ResourceTemplate ()
                         {
@@ -8486,12 +7747,11 @@
                             }
                             EndDependentFn ()
                         })
-                        Method (_PRS, 0, NotSerialized)  // _PRS: Possible Resource Settings
+                        Method (_PRS, 0, NotSerialized)
                         {
-                            Return (POSS) /* \_SB_.PCI0.LPCB.SIO_.COM1.POSS */
+                            Return (POSS)
                         }
-
-                        Method (_STA, 0, NotSerialized)  // _STA: Status
+                        Method (_STA, 0, NotSerialized)
                         {
                             Store (0x00, Local0)
                             If (LOr (\_SB.DCKD (), ICPT))
@@ -8505,17 +7765,14 @@
                                     Store (0x0D, Local0)
                                 }
                             }
-
                             Return (Local0)
                         }
-
-                        Method (_DIS, 0, NotSerialized)  // _DIS: Disable Device
+                        Method (_DIS, 0, NotSerialized)
                         {
                             DSOD (0x02)
                             Return (0x00)
                         }
-
-                        Method (_SRS, 1, NotSerialized)  // _SRS: Set Resource Settings
+                        Method (_SRS, 1, NotSerialized)
                         {
                             CreateWordField (Arg0, 0x02, MIN1)
                             CreateWordField (Arg0, 0x09, IRQ0)
@@ -8525,11 +7782,9 @@
                                 \_SB.PCI0.LPCB.CFG (0x02, MIN1, 0x00, IRQ0, 0x00)
                                 SETR (0x02, MIN1, 0x00, IRQ0, 0x00)
                             }
-
-                            Store (0x00, RCOD) /* \_SB_.PCI0.LPCB.SIO_.COM1.RCOD */
+                            Store (0x00, RCOD)
                         }
-
-                        Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
+                        Method (_CRS, 0, NotSerialized)
                         {
                             Name (CRES, ResourceTemplate ()
                             {
@@ -8542,9 +7797,9 @@
                                 IRQNoFlags (_Y20)
                                     {4}
                             })
-                            CreateWordField (CRES, \_SB.PCI0.LPCB.SIO.COM1._CRS._Y1F._MIN, MIN1)  // _MIN: Minimum Base Address
-                            CreateWordField (CRES, \_SB.PCI0.LPCB.SIO.COM1._CRS._Y1F._MAX, MAX1)  // _MAX: Maximum Base Address
-                            CreateWordField (CRES, \_SB.PCI0.LPCB.SIO.COM1._CRS._Y20._INT, IRQ0)  // _INT: Interrupts
+                            CreateWordField (CRES, \_SB.PCI0.LPCB.SIO.COM1._CRS._Y1F._MIN, MIN1)
+                            CreateWordField (CRES, \_SB.PCI0.LPCB.SIO.COM1._CRS._Y1F._MAX, MAX1)
+                            CreateWordField (CRES, \_SB.PCI0.LPCB.SIO.COM1._CRS._Y20._INT, IRQ0)
                             If (RCOD)
                             {
                                 Store (0x00, Local0)
@@ -8553,48 +7808,41 @@
                             {
                                 Store (SODS (0x02, 0x02), Local0)
                             }
-
                             If (LEqual (Local0, 0x00))
                             {
-                                Store (0x00, MIN1) /* \_SB_.PCI0.LPCB.SIO_.COM1._CRS.MIN1 */
-                                Store (0x00, MAX1) /* \_SB_.PCI0.LPCB.SIO_.COM1._CRS.MAX1 */
-                                Store (0x00, IRQ0) /* \_SB_.PCI0.LPCB.SIO_.COM1._CRS.IRQ0 */
-                                Return (CRES) /* \_SB_.PCI0.LPCB.SIO_.COM1._CRS.CRES */
+                                Store (0x00, MIN1)
+                                Store (0x00, MAX1)
+                                Store (0x00, IRQ0)
+                                Return (CRES)
                             }
-
                             Store (GETR (0x02), Local1)
-                            Store (DerefOf (Index (Local1, 0x00)), MIN1) /* \_SB_.PCI0.LPCB.SIO_.COM1._CRS.MIN1 */
-                            Store (MIN1, MAX1) /* \_SB_.PCI0.LPCB.SIO_.COM1._CRS.MAX1 */
-                            Store (DerefOf (Index (Local1, 0x02)), IRQ0) /* \_SB_.PCI0.LPCB.SIO_.COM1._CRS.IRQ0 */
-                            Return (CRES) /* \_SB_.PCI0.LPCB.SIO_.COM1._CRS.CRES */
+                            Store (DerefOf (Index (Local1, 0x00)), MIN1)
+                            Store (MIN1, MAX1)
+                            Store (DerefOf (Index (Local1, 0x02)), IRQ0)
+                            Return (CRES)
                         }
-
                         PowerResource (COMP, 0x00, 0x0000)
                         {
-                            Method (_STA, 0, NotSerialized)  // _STA: Status
+                            Method (_STA, 0, NotSerialized)
                             {
                                 Return (DPWS (0x02))
                             }
-
-                            Method (_ON, 0, NotSerialized)  // _ON_: Power On
+                            Method (_ON, 0, NotSerialized)
                             {
                                 DPW (0x02, 0x01)
                             }
-
-                            Method (_OFF, 0, NotSerialized)  // _OFF: Power Off
+                            Method (_OFF, 0, NotSerialized)
                             {
                             }
                         }
-
-                        Name (_PR0, Package (0x01)  // _PR0: Power Resources for D0
+                        Name (_PR0, Package (0x01)
                         {
                             COMP
                         })
                     }
-
                     Device (LPT0)
                     {
-                        Method (_HID, 0, Serialized)  // _HID: Hardware ID
+                        Method (_HID, 0, Serialized)
                         {
                             If (GTM ())
                             {
@@ -8604,26 +7852,22 @@
                             {
                                 Store (0x0004D041, Local0)
                             }
-
                             Return (Local0)
                         }
-
                         Name (LPM, 0xFF)
                         Method (GTM, 0, Serialized)
                         {
                             If (LEqual (LPM, 0xFF))
                             {
                                 Store (GLPM (), Local0)
-                                Store (0x00, LPM) /* \_SB_.PCI0.LPCB.SIO_.LPT0.LPM_ */
+                                Store (0x00, LPM)
                                 If (LGreater (Local0, 0x01))
                                 {
-                                    Store (0x01, LPM) /* \_SB_.PCI0.LPCB.SIO_.LPT0.LPM_ */
+                                    Store (0x01, LPM)
                                 }
                             }
-
-                            Return (LPM) /* \_SB_.PCI0.LPCB.SIO_.LPT0.LPM_ */
+                            Return (LPM)
                         }
-
                         Name (RLPD, 0x00)
                         Name (POSS, ResourceTemplate ()
                         {
@@ -8800,12 +8044,11 @@
                             }
                             EndDependentFn ()
                         })
-                        Method (_PRS, 0, NotSerialized)  // _PRS: Possible Resource Settings
+                        Method (_PRS, 0, NotSerialized)
                         {
-                            Return (POSS) /* \_SB_.PCI0.LPCB.SIO_.LPT0.POSS */
+                            Return (POSS)
                         }
-
-                        Method (_STA, 0, NotSerialized)  // _STA: Status
+                        Method (_STA, 0, NotSerialized)
                         {
                             If (RLPD)
                             {
@@ -8815,17 +8058,14 @@
                             {
                                 Store (SODS (0x01, 0x04), Local0)
                             }
-
                             Return (Local0)
                         }
-
-                        Method (_DIS, 0, NotSerialized)  // _DIS: Disable Device
+                        Method (_DIS, 0, NotSerialized)
                         {
                             DSOD (0x01)
                             Return (0x00)
                         }
-
-                        Method (_SRS, 1, NotSerialized)  // _SRS: Set Resource Settings
+                        Method (_SRS, 1, NotSerialized)
                         {
                             CreateWordField (Arg0, 0x02, MIN1)
                             CreateWordField (Arg0, 0x0A, MIN2)
@@ -8837,11 +8077,9 @@
                                 \_SB.PCI0.LPCB.CFG (0x01, MIN1, MIN2, IRQ0, DMA0)
                                 SETR (0x01, MIN1, MIN2, IRQ0, DMA0)
                             }
-
-                            Store (0x00, RLPD) /* \_SB_.PCI0.LPCB.SIO_.LPT0.RLPD */
+                            Store (0x00, RLPD)
                         }
-
-                        Method (_CRS, 0, NotSerialized)  // _CRS: Current Resource Settings
+                        Method (_CRS, 0, NotSerialized)
                         {
                             Name (CRES, ResourceTemplate ()
                             {
@@ -8862,14 +8100,14 @@
                                 DMA (Compatibility, NotBusMaster, Transfer8, _Y24)
                                     {3}
                             })
-                            CreateWordField (CRES, \_SB.PCI0.LPCB.SIO.LPT0._CRS._Y21._MIN, MIN1)  // _MIN: Minimum Base Address
-                            CreateWordField (CRES, \_SB.PCI0.LPCB.SIO.LPT0._CRS._Y21._MAX, MAX1)  // _MAX: Maximum Base Address
-                            CreateByteField (CRES, \_SB.PCI0.LPCB.SIO.LPT0._CRS._Y21._LEN, LEN1)  // _LEN: Length
-                            CreateWordField (CRES, \_SB.PCI0.LPCB.SIO.LPT0._CRS._Y22._MIN, MIN2)  // _MIN: Minimum Base Address
-                            CreateWordField (CRES, \_SB.PCI0.LPCB.SIO.LPT0._CRS._Y22._MAX, MAX2)  // _MAX: Maximum Base Address
-                            CreateByteField (CRES, \_SB.PCI0.LPCB.SIO.LPT0._CRS._Y22._LEN, LEN2)  // _LEN: Length
-                            CreateWordField (CRES, \_SB.PCI0.LPCB.SIO.LPT0._CRS._Y23._INT, IRQ0)  // _INT: Interrupts
-                            CreateWordField (CRES, \_SB.PCI0.LPCB.SIO.LPT0._CRS._Y24._DMA, DMA0)  // _DMA: Direct Memory Access
+                            CreateWordField (CRES, \_SB.PCI0.LPCB.SIO.LPT0._CRS._Y21._MIN, MIN1)
+                            CreateWordField (CRES, \_SB.PCI0.LPCB.SIO.LPT0._CRS._Y21._MAX, MAX1)
+                            CreateByteField (CRES, \_SB.PCI0.LPCB.SIO.LPT0._CRS._Y21._LEN, LEN1)
+                            CreateWordField (CRES, \_SB.PCI0.LPCB.SIO.LPT0._CRS._Y22._MIN, MIN2)
+                            CreateWordField (CRES, \_SB.PCI0.LPCB.SIO.LPT0._CRS._Y22._MAX, MAX2)
+                            CreateByteField (CRES, \_SB.PCI0.LPCB.SIO.LPT0._CRS._Y22._LEN, LEN2)
+                            CreateWordField (CRES, \_SB.PCI0.LPCB.SIO.LPT0._CRS._Y23._INT, IRQ0)
+                            CreateWordField (CRES, \_SB.PCI0.LPCB.SIO.LPT0._CRS._Y24._DMA, DMA0)
                             If (RLPD)
                             {
                                 Store (0x00, Local0)
@@ -8878,68 +8116,59 @@
                             {
                                 Store (SODS (0x01, 0x04), Local0)
                             }
-
                             If (LEqual (Local0, 0x00))
                             {
-                                Store (0x00, MIN1) /* \_SB_.PCI0.LPCB.SIO_.LPT0._CRS.MIN1 */
-                                Store (0x00, MAX1) /* \_SB_.PCI0.LPCB.SIO_.LPT0._CRS.MAX1 */
-                                Store (0x00, MIN2) /* \_SB_.PCI0.LPCB.SIO_.LPT0._CRS.MIN2 */
-                                Store (0x00, MAX2) /* \_SB_.PCI0.LPCB.SIO_.LPT0._CRS.MAX2 */
-                                Store (0x00, IRQ0) /* \_SB_.PCI0.LPCB.SIO_.LPT0._CRS.IRQ0 */
-                                Store (0x00, DMA0) /* \_SB_.PCI0.LPCB.SIO_.LPT0._CRS.DMA0 */
-                                Return (CRES) /* \_SB_.PCI0.LPCB.SIO_.LPT0._CRS.CRES */
+                                Store (0x00, MIN1)
+                                Store (0x00, MAX1)
+                                Store (0x00, MIN2)
+                                Store (0x00, MAX2)
+                                Store (0x00, IRQ0)
+                                Store (0x00, DMA0)
+                                Return (CRES)
                             }
-
                             Store (GETR (0x01), Local1)
-                            Store (DerefOf (Index (Local1, 0x00)), MIN1) /* \_SB_.PCI0.LPCB.SIO_.LPT0._CRS.MIN1 */
-                            Store (MIN1, MAX1) /* \_SB_.PCI0.LPCB.SIO_.LPT0._CRS.MAX1 */
+                            Store (DerefOf (Index (Local1, 0x00)), MIN1)
+                            Store (MIN1, MAX1)
                             If (LEqual (MIN1, 0x0278))
                             {
-                                Store (0x08, LEN1) /* \_SB_.PCI0.LPCB.SIO_.LPT0._CRS.LEN1 */
-                                Store (0x03, LEN2) /* \_SB_.PCI0.LPCB.SIO_.LPT0._CRS.LEN2 */
+                                Store (0x08, LEN1)
+                                Store (0x03, LEN2)
                             }
-
                             If (LEqual (MIN1, 0x03BC))
                             {
-                                Store (0x04, LEN1) /* \_SB_.PCI0.LPCB.SIO_.LPT0._CRS.LEN1 */
-                                Store (0x03, LEN2) /* \_SB_.PCI0.LPCB.SIO_.LPT0._CRS.LEN2 */
+                                Store (0x04, LEN1)
+                                Store (0x03, LEN2)
                             }
-
-                            Add (MIN1, 0x0400, MIN2) /* \_SB_.PCI0.LPCB.SIO_.LPT0._CRS.MIN2 */
-                            Store (MIN2, MAX2) /* \_SB_.PCI0.LPCB.SIO_.LPT0._CRS.MAX2 */
-                            Store (DerefOf (Index (Local1, 0x02)), IRQ0) /* \_SB_.PCI0.LPCB.SIO_.LPT0._CRS.IRQ0 */
-                            Store (DerefOf (Index (Local1, 0x03)), DMA0) /* \_SB_.PCI0.LPCB.SIO_.LPT0._CRS.DMA0 */
-                            Return (CRES) /* \_SB_.PCI0.LPCB.SIO_.LPT0._CRS.CRES */
+                            Add (MIN1, 0x0400, MIN2)
+                            Store (MIN2, MAX2)
+                            Store (DerefOf (Index (Local1, 0x02)), IRQ0)
+                            Store (DerefOf (Index (Local1, 0x03)), DMA0)
+                            Return (CRES)
                         }
-
                         PowerResource (LPP, 0x00, 0x0000)
                         {
-                            Method (_STA, 0, NotSerialized)  // _STA: Status
+                            Method (_STA, 0, NotSerialized)
                             {
                                 Return (DPWS (0x01))
                             }
-
-                            Method (_ON, 0, NotSerialized)  // _ON_: Power On
+                            Method (_ON, 0, NotSerialized)
                             {
                                 DPW (0x01, 0x01)
                             }
-
-                            Method (_OFF, 0, NotSerialized)  // _OFF: Power Off
+                            Method (_OFF, 0, NotSerialized)
                             {
                             }
                         }
-
-                        Name (_PR0, Package (0x01)  // _PR0: Power Resources for D0
+                        Name (_PR0, Package (0x01)
                         {
                             LPP
                         })
                     }
                 }
-
                 Device (PS2K)
                 {
-                    Name (_HID, EisaId ("PNP0303") /* IBM Enhanced Keyboard (101/102-key, PS/2 Mouse) */)  // _HID: Hardware ID
-                    Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
+                    Name (_HID, EisaId ("PNP0303"))
+                    Name (_CRS, ResourceTemplate ()
                     {
                         IO (Decode16,
                             0x0060,             // Range Minimum
@@ -8956,7 +8185,7 @@
                         IRQ (Edge, ActiveHigh, Exclusive, )
                             {1}
                     })
-                    Name (_PRS, ResourceTemplate ()  // _PRS: Possible Resource Settings
+                    Name (_PRS, ResourceTemplate ()
                     {
                         StartDependentFn (0x00, 0x00)
                         {
@@ -8974,21 +8203,20 @@
                         EndDependentFn ()
                     })
                 }
-
                 Device (PS2M)
                 {
-                    Name (_CID, Package (0x03)  // _CID: Compatible ID
+                    Name (_CID, Package (0x03)
                     {
                         EisaId ("SYN0100"), 
                         EisaId ("SYN0002"), 
-                        EisaId ("PNP0F13") /* PS/2 Mouse */
+                        EisaId ("PNP0F13")
                     })
-                    Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
+                    Name (_CRS, ResourceTemplate ()
                     {
                         IRQ (Edge, ActiveHigh, Exclusive, )
                             {12}
                     })
-                    Name (_PRS, ResourceTemplate ()  // _PRS: Possible Resource Settings
+                    Name (_PRS, ResourceTemplate ()
                     {
                         StartDependentFn (0x00, 0x00)
                         {
@@ -8999,10 +8227,9 @@
                     })
                 }
             }
-
             Device (SATA)
             {
-                Name (_ADR, 0x001F0002)  // _ADR: Address
+                Name (_ADR, 0x001F0002)
                 OperationRegion (SACS, PCI_Config, 0x40, 0xC0)
                 Field (SACS, DWordAcc, NoLock, Preserve)
                 {
@@ -9031,10 +8258,9 @@
                     MAPV,   2
                 }
             }
-
             Device (SAT1)
             {
-                Name (_ADR, 0x001F0005)  // _ADR: Address
+                Name (_ADR, 0x001F0005)
                 OperationRegion (SACS, PCI_Config, 0x40, 0xC0)
                 Field (SACS, DWordAcc, NoLock, Preserve)
                 {
@@ -9063,17 +8289,15 @@
                     MAPV,   2
                 }
             }
-
             Device (SBUS)
             {
-                Name (_ADR, 0x001F0003)  // _ADR: Address
+                Name (_ADR, 0x001F0003)
                 OperationRegion (SMBP, PCI_Config, 0x40, 0xC0)
                 Field (SMBP, DWordAcc, NoLock, Preserve)
                 {
                         ,   2, 
                     I2CE,   1
                 }
-
                 OperationRegion (SMBI, SystemIO, 0xEF80, 0x10)
                 Field (SMBI, ByteAcc, NoLock, Preserve)
                 {
@@ -9089,150 +8313,130 @@
                     RXSA,   8, 
                     SDAT,   16
                 }
-
                 Method (SSXB, 2, Serialized)
                 {
                     If (STRT ())
                     {
                         Return (0x00)
                     }
-
-                    Store (0x00, I2CE) /* \_SB_.PCI0.SBUS.I2CE */
-                    Store (0xBF, HSTS) /* \_SB_.PCI0.SBUS.HSTS */
-                    Store (Arg0, TXSA) /* \_SB_.PCI0.SBUS.TXSA */
-                    Store (Arg1, HCOM) /* \_SB_.PCI0.SBUS.HCOM */
-                    Store (0x48, HCON) /* \_SB_.PCI0.SBUS.HCON */
+                    Store (0x00, I2CE)
+                    Store (0xBF, HSTS)
+                    Store (Arg0, TXSA)
+                    Store (Arg1, HCOM)
+                    Store (0x48, HCON)
                     If (COMP ())
                     {
-                        Or (HSTS, 0xFF, HSTS) /* \_SB_.PCI0.SBUS.HSTS */
+                        Or (HSTS, 0xFF, HSTS)
                         Return (0x01)
                     }
-
                     Return (0x00)
                 }
-
                 Method (SRXB, 1, Serialized)
                 {
                     If (STRT ())
                     {
                         Return (0xFFFF)
                     }
-
-                    Store (0x00, I2CE) /* \_SB_.PCI0.SBUS.I2CE */
-                    Store (0xBF, HSTS) /* \_SB_.PCI0.SBUS.HSTS */
-                    Store (Or (Arg0, 0x01), TXSA) /* \_SB_.PCI0.SBUS.TXSA */
-                    Store (0x44, HCON) /* \_SB_.PCI0.SBUS.HCON */
+                    Store (0x00, I2CE)
+                    Store (0xBF, HSTS)
+                    Store (Or (Arg0, 0x01), TXSA)
+                    Store (0x44, HCON)
                     If (COMP ())
                     {
-                        Or (HSTS, 0xFF, HSTS) /* \_SB_.PCI0.SBUS.HSTS */
-                        Return (DAT0) /* \_SB_.PCI0.SBUS.DAT0 */
+                        Or (HSTS, 0xFF, HSTS)
+                        Return (DAT0)
                     }
-
                     Return (0xFFFF)
                 }
-
                 Method (SWRB, 3, Serialized)
                 {
                     If (STRT ())
                     {
                         Return (0x00)
                     }
-
-                    Store (0x00, I2CE) /* \_SB_.PCI0.SBUS.I2CE */
-                    Store (0xBF, HSTS) /* \_SB_.PCI0.SBUS.HSTS */
-                    Store (Arg0, TXSA) /* \_SB_.PCI0.SBUS.TXSA */
-                    Store (Arg1, HCOM) /* \_SB_.PCI0.SBUS.HCOM */
-                    Store (Arg2, DAT0) /* \_SB_.PCI0.SBUS.DAT0 */
-                    Store (0x48, HCON) /* \_SB_.PCI0.SBUS.HCON */
+                    Store (0x00, I2CE)
+                    Store (0xBF, HSTS)
+                    Store (Arg0, TXSA)
+                    Store (Arg1, HCOM)
+                    Store (Arg2, DAT0)
+                    Store (0x48, HCON)
                     If (COMP ())
                     {
-                        Or (HSTS, 0xFF, HSTS) /* \_SB_.PCI0.SBUS.HSTS */
+                        Or (HSTS, 0xFF, HSTS)
                         Return (0x01)
                     }
-
                     Return (0x00)
                 }
-
                 Method (SRDB, 2, Serialized)
                 {
                     If (STRT ())
                     {
                         Return (0xFFFF)
                     }
-
-                    Store (0x00, I2CE) /* \_SB_.PCI0.SBUS.I2CE */
-                    Store (0xBF, HSTS) /* \_SB_.PCI0.SBUS.HSTS */
-                    Store (Or (Arg0, 0x01), TXSA) /* \_SB_.PCI0.SBUS.TXSA */
-                    Store (Arg1, HCOM) /* \_SB_.PCI0.SBUS.HCOM */
-                    Store (0x48, HCON) /* \_SB_.PCI0.SBUS.HCON */
+                    Store (0x00, I2CE)
+                    Store (0xBF, HSTS)
+                    Store (Or (Arg0, 0x01), TXSA)
+                    Store (Arg1, HCOM)
+                    Store (0x48, HCON)
                     If (COMP ())
                     {
-                        Or (HSTS, 0xFF, HSTS) /* \_SB_.PCI0.SBUS.HSTS */
-                        Return (DAT0) /* \_SB_.PCI0.SBUS.DAT0 */
+                        Or (HSTS, 0xFF, HSTS)
+                        Return (DAT0)
                     }
-
                     Return (0xFFFF)
                 }
-
                 Method (SWRW, 3, Serialized)
                 {
                     If (STRT ())
                     {
                         Return (0x00)
                     }
-
-                    Store (0x00, I2CE) /* \_SB_.PCI0.SBUS.I2CE */
-                    Store (0xBF, HSTS) /* \_SB_.PCI0.SBUS.HSTS */
-                    Store (Arg0, TXSA) /* \_SB_.PCI0.SBUS.TXSA */
-                    Store (Arg1, HCOM) /* \_SB_.PCI0.SBUS.HCOM */
-                    And (Arg2, 0xFF, DAT1) /* \_SB_.PCI0.SBUS.DAT1 */
-                    And (ShiftRight (Arg2, 0x08), 0xFF, DAT0) /* \_SB_.PCI0.SBUS.DAT0 */
-                    Store (0x4C, HCON) /* \_SB_.PCI0.SBUS.HCON */
+                    Store (0x00, I2CE)
+                    Store (0xBF, HSTS)
+                    Store (Arg0, TXSA)
+                    Store (Arg1, HCOM)
+                    And (Arg2, 0xFF, DAT1)
+                    And (ShiftRight (Arg2, 0x08), 0xFF, DAT0)
+                    Store (0x4C, HCON)
                     If (COMP ())
                     {
-                        Or (HSTS, 0xFF, HSTS) /* \_SB_.PCI0.SBUS.HSTS */
+                        Or (HSTS, 0xFF, HSTS)
                         Return (0x01)
                     }
-
                     Return (0x00)
                 }
-
                 Method (SRDW, 2, Serialized)
                 {
                     If (STRT ())
                     {
                         Return (0xFFFF)
                     }
-
-                    Store (0x00, I2CE) /* \_SB_.PCI0.SBUS.I2CE */
-                    Store (0xBF, HSTS) /* \_SB_.PCI0.SBUS.HSTS */
-                    Store (Or (Arg0, 0x01), TXSA) /* \_SB_.PCI0.SBUS.TXSA */
-                    Store (Arg1, HCOM) /* \_SB_.PCI0.SBUS.HCOM */
-                    Store (0x4C, HCON) /* \_SB_.PCI0.SBUS.HCON */
+                    Store (0x00, I2CE)
+                    Store (0xBF, HSTS)
+                    Store (Or (Arg0, 0x01), TXSA)
+                    Store (Arg1, HCOM)
+                    Store (0x4C, HCON)
                     If (COMP ())
                     {
-                        Or (HSTS, 0xFF, HSTS) /* \_SB_.PCI0.SBUS.HSTS */
+                        Or (HSTS, 0xFF, HSTS)
                         Return (Or (ShiftLeft (DAT0, 0x08), DAT1))
                     }
-
                     Return (0xFFFFFFFF)
                 }
-
                 Method (SBLW, 4, Serialized)
                 {
                     If (STRT ())
                     {
                         Return (0x00)
                     }
-
-                    Store (Arg3, I2CE) /* \_SB_.PCI0.SBUS.I2CE */
-                    Store (0xBF, HSTS) /* \_SB_.PCI0.SBUS.HSTS */
-                    Store (Arg0, TXSA) /* \_SB_.PCI0.SBUS.TXSA */
-                    Store (Arg1, HCOM) /* \_SB_.PCI0.SBUS.HCOM */
-                    Store (SizeOf (Arg2), DAT0) /* \_SB_.PCI0.SBUS.DAT0 */
+                    Store (Arg3, I2CE)
+                    Store (0xBF, HSTS)
+                    Store (Arg0, TXSA)
+                    Store (Arg1, HCOM)
+                    Store (SizeOf (Arg2), DAT0)
                     Store (0x00, Local1)
-                    Store (DerefOf (Index (Arg2, 0x00)), HBDR) /* \_SB_.PCI0.SBUS.HBDR */
-                    Store (0x54, HCON) /* \_SB_.PCI0.SBUS.HCON */
+                    Store (DerefOf (Index (Arg2, 0x00)), HBDR)
+                    Store (0x54, HCON)
                     While (LGreater (SizeOf (Arg2), Local1))
                     {
                         Store (0x0FA0, Local0)
@@ -9241,30 +8445,25 @@
                             Decrement (Local0)
                             Stall (0x32)
                         }
-
                         If (LNot (Local0))
                         {
                             KILL ()
                             Return (0x00)
                         }
-
-                        Store (0x80, HSTS) /* \_SB_.PCI0.SBUS.HSTS */
+                        Store (0x80, HSTS)
                         Increment (Local1)
                         If (LGreater (SizeOf (Arg2), Local1))
                         {
-                            Store (DerefOf (Index (Arg2, Local1)), HBDR) /* \_SB_.PCI0.SBUS.HBDR */
+                            Store (DerefOf (Index (Arg2, Local1)), HBDR)
                         }
                     }
-
                     If (COMP ())
                     {
-                        Or (HSTS, 0xFF, HSTS) /* \_SB_.PCI0.SBUS.HSTS */
+                        Or (HSTS, 0xFF, HSTS)
                         Return (0x01)
                     }
-
                     Return (0x00)
                 }
-
                 Method (SBLR, 3, Serialized)
                 {
                     Name (TBUF, Buffer (0x0100) {})
@@ -9272,27 +8471,24 @@
                     {
                         Return (0x00)
                     }
-
-                    Store (Arg2, I2CE) /* \_SB_.PCI0.SBUS.I2CE */
-                    Store (0xBF, HSTS) /* \_SB_.PCI0.SBUS.HSTS */
-                    Store (Or (Arg0, 0x01), TXSA) /* \_SB_.PCI0.SBUS.TXSA */
-                    Store (Arg1, HCOM) /* \_SB_.PCI0.SBUS.HCOM */
-                    Store (0x54, HCON) /* \_SB_.PCI0.SBUS.HCON */
+                    Store (Arg2, I2CE)
+                    Store (0xBF, HSTS)
+                    Store (Or (Arg0, 0x01), TXSA)
+                    Store (Arg1, HCOM)
+                    Store (0x54, HCON)
                     Store (0x0FA0, Local0)
                     While (LAnd (LNot (And (HSTS, 0x80)), Local0))
                     {
                         Decrement (Local0)
                         Stall (0x32)
                     }
-
                     If (LNot (Local0))
                     {
                         KILL ()
                         Return (0x00)
                     }
-
                     Store (DAT0, Index (TBUF, 0x00))
-                    Store (0x80, HSTS) /* \_SB_.PCI0.SBUS.HSTS */
+                    Store (0x80, HSTS)
                     Store (0x01, Local1)
                     While (LLess (Local1, DerefOf (Index (TBUF, 0x00))))
                     {
@@ -9302,27 +8498,22 @@
                             Decrement (Local0)
                             Stall (0x32)
                         }
-
                         If (LNot (Local0))
                         {
                             KILL ()
                             Return (0x00)
                         }
-
                         Store (HBDR, Index (TBUF, Local1))
-                        Store (0x80, HSTS) /* \_SB_.PCI0.SBUS.HSTS */
+                        Store (0x80, HSTS)
                         Increment (Local1)
                     }
-
                     If (COMP ())
                     {
-                        Or (HSTS, 0xFF, HSTS) /* \_SB_.PCI0.SBUS.HSTS */
-                        Return (TBUF) /* \_SB_.PCI0.SBUS.SBLR.TBUF */
+                        Or (HSTS, 0xFF, HSTS)
+                        Return (TBUF)
                     }
-
                     Return (0x00)
                 }
-
                 Method (STRT, 0, Serialized)
                 {
                     Store (0xC8, Local0)
@@ -9342,7 +8533,6 @@
                             Store (0x00, Local0)
                         }
                     }
-
                     Store (0x0FA0, Local0)
                     While (Local0)
                     {
@@ -9360,10 +8550,8 @@
                             Return (0x00)
                         }
                     }
-
                     Return (0x01)
                 }
-
                 Method (COMP, 0, Serialized)
                 {
                     Store (0x0FA0, Local0)
@@ -9383,17 +8571,14 @@
                             }
                         }
                     }
-
                     Return (0x00)
                 }
-
                 Method (KILL, 0, Serialized)
                 {
-                    Or (HCON, 0x02, HCON) /* \_SB_.PCI0.SBUS.HCON */
-                    Or (HSTS, 0xFF, HSTS) /* \_SB_.PCI0.SBUS.HSTS */
+                    Or (HCON, 0x02, HCON)
+                    Or (HSTS, 0xFF, HSTS)
                 }
             }
-
             Scope (\)
             {
                 OperationRegion (THMR, SystemMemory, TBRB, 0xDC)
@@ -9409,10 +8594,9 @@
                     MCHT,   8
                 }
             }
-
             Device (RP01)
             {
-                Name (_ADR, 0x001C0000)  // _ADR: Address
+                Name (_ADR, 0x001C0000)
                 OperationRegion (PXCS, PCI_Config, 0x40, 0xC0)
                 Field (PXCS, AnyAcc, NoLock, WriteAsZeros)
                 {
@@ -9438,7 +8622,6 @@
                     HPSX,   1, 
                     PMSX,   1
                 }
-
                 Field (PXCS, AnyAcc, NoLock, Preserve)
                 {
                     Offset (0x02), 
@@ -9455,7 +8638,6 @@
                     HPCE,   1, 
                     PMCE,   1
                 }
-
                 Method (HPLG, 0, Serialized)
                 {
                     If (_STA ())
@@ -9465,19 +8647,18 @@
                             Sleep (0x64)
                             If (PDCX)
                             {
-                                Store (0x01, PDCX) /* \_SB_.PCI0.RP01.PDCX */
-                                Store (0x01, HPSX) /* \_SB_.PCI0.RP01.HPSX */
+                                Store (0x01, PDCX)
+                                Store (0x01, HPSX)
                                 \_SB.SSMI (0x5D, 0x00, 0x00, 0x00, 0x00)
-                                Notify (^, 0x00) // Bus Check
+                                Notify (^, 0x00)
                             }
                             Else
                             {
-                                Store (0x01, HPSX) /* \_SB_.PCI0.RP01.HPSX */
+                                Store (0x01, HPSX)
                             }
                         }
                     }
                 }
-
                 Method (PME, 0, Serialized)
                 {
                     If (_STA ())
@@ -9486,20 +8667,18 @@
                         {
                             While (PSPX)
                             {
-                                Store (0x01, PSPX) /* \_SB_.PCI0.RP01.PSPX */
+                                Store (0x01, PSPX)
                             }
-
-                            Store (0x01, PMSX) /* \_SB_.PCI0.RP01.PMSX */
-                            Notify (^, 0x02) // Device Wake
+                            Store (0x01, PMSX)
+                            Notify (^, 0x02)
                         }
                     }
                 }
-
                 Method (OSC, 2, Serialized)
                 {
                     If (_STA ())
                     {
-                        Store (Arg0, HPCE) /* \_SB_.PCI0.RP01.HPCE */
+                        Store (Arg0, HPCE)
                         If (Arg0)
                         {
                             And (SCTL, 0xFFC0, Local6)
@@ -9507,26 +8686,23 @@
                             {
                                 Or (Local6, 0x01, Local6)
                             }
-
-                            Store (Local6, SCTL) /* \_SB_.PCI0.RP01.SCTL */
-                            Store (0x3F, SSTS) /* \_SB_.PCI0.RP01.SSTS */
+                            Store (Local6, SCTL)
+                            Store (0x3F, SSTS)
                         }
                         Else
                         {
-                            Store (0x01, ABPX) /* \_SB_.PCI0.RP01.ABPX */
-                            Store (0x01, PDCX) /* \_SB_.PCI0.RP01.PDCX */
-                            Store (0x01, HPSX) /* \_SB_.PCI0.RP01.HPSX */
+                            Store (0x01, ABPX)
+                            Store (0x01, PDCX)
+                            Store (0x01, HPSX)
                         }
-
-                        Store (Arg1, PMCE) /* \_SB_.PCI0.RP01.PMCE */
+                        Store (Arg1, PMCE)
                         If (LEqual (Arg1, 0x00))
                         {
-                            Store (0x01, PMSX) /* \_SB_.PCI0.RP01.PMSX */
+                            Store (0x01, PMSX)
                         }
                     }
                 }
-
-                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
+                Method (_PRT, 0, NotSerialized)
                 {
                     If (\GPIC)
                     {
@@ -9539,7 +8715,6 @@
                                 0x00, 
                                 0x10
                             }, 
-
                             Package (0x04)
                             {
                                 0xFFFF, 
@@ -9547,7 +8722,6 @@
                                 0x00, 
                                 0x11
                             }, 
-
                             Package (0x04)
                             {
                                 0xFFFF, 
@@ -9555,7 +8729,6 @@
                                 0x00, 
                                 0x12
                             }, 
-
                             Package (0x04)
                             {
                                 0xFFFF, 
@@ -9576,7 +8749,6 @@
                                 LNKA, 
                                 0x00
                             }, 
-
                             Package (0x04)
                             {
                                 0xFFFF, 
@@ -9584,7 +8756,6 @@
                                 LNKB, 
                                 0x00
                             }, 
-
                             Package (0x04)
                             {
                                 0xFFFF, 
@@ -9592,7 +8763,6 @@
                                 LNKC, 
                                 0x00
                             }, 
-
                             Package (0x04)
                             {
                                 0xFFFF, 
@@ -9604,10 +8774,9 @@
                     }
                 }
             }
-
             Device (RP02)
             {
-                Name (_ADR, 0x001C0001)  // _ADR: Address
+                Name (_ADR, 0x001C0001)
                 OperationRegion (PXCS, PCI_Config, 0x40, 0xC0)
                 Field (PXCS, AnyAcc, NoLock, WriteAsZeros)
                 {
@@ -9633,7 +8802,6 @@
                     HPSX,   1, 
                     PMSX,   1
                 }
-
                 Field (PXCS, AnyAcc, NoLock, Preserve)
                 {
                     Offset (0x02), 
@@ -9650,7 +8818,6 @@
                     HPCE,   1, 
                     PMCE,   1
                 }
-
                 Method (HPLG, 0, Serialized)
                 {
                     If (_STA ())
@@ -9660,19 +8827,18 @@
                             Sleep (0x64)
                             If (PDCX)
                             {
-                                Store (0x01, PDCX) /* \_SB_.PCI0.RP02.PDCX */
-                                Store (0x01, HPSX) /* \_SB_.PCI0.RP02.HPSX */
+                                Store (0x01, PDCX)
+                                Store (0x01, HPSX)
                                 \_SB.SSMI (0x5D, 0x00, 0x00, 0x00, 0x00)
-                                Notify (^, 0x00) // Bus Check
+                                Notify (^, 0x00)
                             }
                             Else
                             {
-                                Store (0x01, HPSX) /* \_SB_.PCI0.RP02.HPSX */
+                                Store (0x01, HPSX)
                             }
                         }
                     }
                 }
-
                 Method (PME, 0, Serialized)
                 {
                     If (_STA ())
@@ -9681,20 +8847,18 @@
                         {
                             While (PSPX)
                             {
-                                Store (0x01, PSPX) /* \_SB_.PCI0.RP02.PSPX */
+                                Store (0x01, PSPX)
                             }
-
-                            Store (0x01, PMSX) /* \_SB_.PCI0.RP02.PMSX */
-                            Notify (^, 0x02) // Device Wake
+                            Store (0x01, PMSX)
+                            Notify (^, 0x02)
                         }
                     }
                 }
-
                 Method (OSC, 2, Serialized)
                 {
                     If (_STA ())
                     {
-                        Store (Arg0, HPCE) /* \_SB_.PCI0.RP02.HPCE */
+                        Store (Arg0, HPCE)
                         If (Arg0)
                         {
                             And (SCTL, 0xFFC0, Local6)
@@ -9702,26 +8866,23 @@
                             {
                                 Or (Local6, 0x01, Local6)
                             }
-
-                            Store (Local6, SCTL) /* \_SB_.PCI0.RP02.SCTL */
-                            Store (0x3F, SSTS) /* \_SB_.PCI0.RP02.SSTS */
+                            Store (Local6, SCTL)
+                            Store (0x3F, SSTS)
                         }
                         Else
                         {
-                            Store (0x01, ABPX) /* \_SB_.PCI0.RP02.ABPX */
-                            Store (0x01, PDCX) /* \_SB_.PCI0.RP02.PDCX */
-                            Store (0x01, HPSX) /* \_SB_.PCI0.RP02.HPSX */
+                            Store (0x01, ABPX)
+                            Store (0x01, PDCX)
+                            Store (0x01, HPSX)
                         }
-
-                        Store (Arg1, PMCE) /* \_SB_.PCI0.RP02.PMCE */
+                        Store (Arg1, PMCE)
                         If (LEqual (Arg1, 0x00))
                         {
-                            Store (0x01, PMSX) /* \_SB_.PCI0.RP02.PMSX */
+                            Store (0x01, PMSX)
                         }
                     }
                 }
-
-                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
+                Method (_PRT, 0, NotSerialized)
                 {
                     If (\GPIC)
                     {
@@ -9734,7 +8895,6 @@
                                 0x00, 
                                 0x11
                             }, 
-
                             Package (0x04)
                             {
                                 0xFFFF, 
@@ -9742,7 +8902,6 @@
                                 0x00, 
                                 0x12
                             }, 
-
                             Package (0x04)
                             {
                                 0xFFFF, 
@@ -9750,7 +8909,6 @@
                                 0x00, 
                                 0x13
                             }, 
-
                             Package (0x04)
                             {
                                 0xFFFF, 
@@ -9771,7 +8929,6 @@
                                 LNKB, 
                                 0x00
                             }, 
-
                             Package (0x04)
                             {
                                 0xFFFF, 
@@ -9779,7 +8936,6 @@
                                 LNKC, 
                                 0x00
                             }, 
-
                             Package (0x04)
                             {
                                 0xFFFF, 
@@ -9787,7 +8943,6 @@
                                 LNKD, 
                                 0x00
                             }, 
-
                             Package (0x04)
                             {
                                 0xFFFF, 
@@ -9798,73 +8953,62 @@
                         })
                     }
                 }
-
-                Name (_PRW, Package (0x02)  // _PRW: Power Resources for Wake
+                Name (_PRW, Package (0x02)
                 {
                     0x09, 
                     0x04
                 })
                 Device (ECF0)
                 {
-                    Name (_ADR, 0x00)  // _ADR: Address
-                    Method (_PRW, 0, Serialized)  // _PRW: Power Resources for Wake
+                    Name (_ADR, 0x00)
+                    Method (_PRW, 0, Serialized)
                     {
-                        Return (^^_PRW) /* \_SB_.PCI0.RP02._PRW */
+                        Return (^^_PRW)
                     }
-
-                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
+                    Method (_RMV, 0, NotSerialized)
                     {
                         Return (0x01)
                     }
                 }
-
                 Device (ECF1)
                 {
-                    Name (_ADR, 0x01)  // _ADR: Address
+                    Name (_ADR, 0x01)
                 }
-
                 Device (ECF2)
                 {
-                    Name (_ADR, 0x02)  // _ADR: Address
+                    Name (_ADR, 0x02)
                 }
-
                 Device (ECF3)
                 {
-                    Name (_ADR, 0x03)  // _ADR: Address
+                    Name (_ADR, 0x03)
                 }
-
                 Device (ECF4)
                 {
-                    Name (_ADR, 0x04)  // _ADR: Address
+                    Name (_ADR, 0x04)
                 }
-
                 Device (ECF5)
                 {
-                    Name (_ADR, 0x05)  // _ADR: Address
+                    Name (_ADR, 0x05)
                 }
-
                 Device (ECF6)
                 {
-                    Name (_ADR, 0x06)  // _ADR: Address
+                    Name (_ADR, 0x06)
                 }
-
                 Device (ECF7)
                 {
-                    Name (_ADR, 0x07)  // _ADR: Address
+                    Name (_ADR, 0x07)
                 }
-
                 Scope (ECF0)
                 {
-                    Method (_EJD, 0, NotSerialized)  // _EJD: Ejection Dependent Device
+                    Method (_EJD, 0, NotSerialized)
                     {
                         Return ("\\_SB.PCI0.EHC1.RHUB.PRT0.HPT4")
                     }
                 }
             }
-
             Device (RP03)
             {
-                Name (_ADR, 0x001C0002)  // _ADR: Address
+                Name (_ADR, 0x001C0002)
                 OperationRegion (PXCS, PCI_Config, 0x40, 0xC0)
                 Field (PXCS, AnyAcc, NoLock, WriteAsZeros)
                 {
@@ -9890,7 +9034,6 @@
                     HPSX,   1, 
                     PMSX,   1
                 }
-
                 Field (PXCS, AnyAcc, NoLock, Preserve)
                 {
                     Offset (0x02), 
@@ -9907,7 +9050,6 @@
                     HPCE,   1, 
                     PMCE,   1
                 }
-
                 Method (HPLG, 0, Serialized)
                 {
                     If (_STA ())
@@ -9917,19 +9059,18 @@
                             Sleep (0x64)
                             If (PDCX)
                             {
-                                Store (0x01, PDCX) /* \_SB_.PCI0.RP03.PDCX */
-                                Store (0x01, HPSX) /* \_SB_.PCI0.RP03.HPSX */
+                                Store (0x01, PDCX)
+                                Store (0x01, HPSX)
                                 \_SB.SSMI (0x5D, 0x00, 0x00, 0x00, 0x00)
-                                Notify (^, 0x00) // Bus Check
+                                Notify (^, 0x00)
                             }
                             Else
                             {
-                                Store (0x01, HPSX) /* \_SB_.PCI0.RP03.HPSX */
+                                Store (0x01, HPSX)
                             }
                         }
                     }
                 }
-
                 Method (PME, 0, Serialized)
                 {
                     If (_STA ())
@@ -9938,20 +9079,18 @@
                         {
                             While (PSPX)
                             {
-                                Store (0x01, PSPX) /* \_SB_.PCI0.RP03.PSPX */
+                                Store (0x01, PSPX)
                             }
-
-                            Store (0x01, PMSX) /* \_SB_.PCI0.RP03.PMSX */
-                            Notify (^, 0x02) // Device Wake
+                            Store (0x01, PMSX)
+                            Notify (^, 0x02)
                         }
                     }
                 }
-
                 Method (OSC, 2, Serialized)
                 {
                     If (_STA ())
                     {
-                        Store (Arg0, HPCE) /* \_SB_.PCI0.RP03.HPCE */
+                        Store (Arg0, HPCE)
                         If (Arg0)
                         {
                             And (SCTL, 0xFFC0, Local6)
@@ -9959,26 +9098,23 @@
                             {
                                 Or (Local6, 0x01, Local6)
                             }
-
-                            Store (Local6, SCTL) /* \_SB_.PCI0.RP03.SCTL */
-                            Store (0x3F, SSTS) /* \_SB_.PCI0.RP03.SSTS */
+                            Store (Local6, SCTL)
+                            Store (0x3F, SSTS)
                         }
                         Else
                         {
-                            Store (0x01, ABPX) /* \_SB_.PCI0.RP03.ABPX */
-                            Store (0x01, PDCX) /* \_SB_.PCI0.RP03.PDCX */
-                            Store (0x01, HPSX) /* \_SB_.PCI0.RP03.HPSX */
+                            Store (0x01, ABPX)
+                            Store (0x01, PDCX)
+                            Store (0x01, HPSX)
                         }
-
-                        Store (Arg1, PMCE) /* \_SB_.PCI0.RP03.PMCE */
+                        Store (Arg1, PMCE)
                         If (LEqual (Arg1, 0x00))
                         {
-                            Store (0x01, PMSX) /* \_SB_.PCI0.RP03.PMSX */
+                            Store (0x01, PMSX)
                         }
                     }
                 }
-
-                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
+                Method (_PRT, 0, NotSerialized)
                 {
                     If (\GPIC)
                     {
@@ -9991,7 +9127,6 @@
                                 0x00, 
                                 0x12
                             }, 
-
                             Package (0x04)
                             {
                                 0xFFFF, 
@@ -9999,7 +9134,6 @@
                                 0x00, 
                                 0x13
                             }, 
-
                             Package (0x04)
                             {
                                 0xFFFF, 
@@ -10007,7 +9141,6 @@
                                 0x00, 
                                 0x10
                             }, 
-
                             Package (0x04)
                             {
                                 0xFFFF, 
@@ -10028,7 +9161,6 @@
                                 LNKC, 
                                 0x00
                             }, 
-
                             Package (0x04)
                             {
                                 0xFFFF, 
@@ -10036,7 +9168,6 @@
                                 LNKD, 
                                 0x00
                             }, 
-
                             Package (0x04)
                             {
                                 0xFFFF, 
@@ -10044,7 +9175,6 @@
                                 LNKA, 
                                 0x00
                             }, 
-
                             Package (0x04)
                             {
                                 0xFFFF, 
@@ -10055,8 +9185,7 @@
                         })
                     }
                 }
-
-                Name (_PRW, Package (0x02)  // _PRW: Power Resources for Wake
+                Name (_PRW, Package (0x02)
                 {
                     0x09, 
                     0x04
@@ -10070,14 +9199,12 @@
                         D3EF,   1, 
                         Offset (0x01)
                     }
-
-                    Name (_ADR, 0x00)  // _ADR: Address
-                    Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
+                    Name (_ADR, 0x00)
+                    Method (_PLD, 0, Serialized)
                     {
-                        Return (EPLD) /* \EPLD */
+                        Return (EPLD)
                     }
-
-                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
+                    Method (_RMV, 0, NotSerialized)
                     {
                         If (\_OSI ("Windows 2009"))
                         {
@@ -10089,16 +9216,14 @@
                         }
                     }
                 }
-
                 Device (MSHC)
                 {
-                    Name (_ADR, 0x01)  // _ADR: Address
-                    Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
+                    Name (_ADR, 0x01)
+                    Method (_PLD, 0, Serialized)
                     {
-                        Return (EPLD) /* \EPLD */
+                        Return (EPLD)
                     }
-
-                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
+                    Method (_RMV, 0, NotSerialized)
                     {
                         If (\_OSI ("Windows 2009"))
                         {
@@ -10110,16 +9235,14 @@
                         }
                     }
                 }
-
                 Device (XDCC)
                 {
-                    Name (_ADR, 0x02)  // _ADR: Address
-                    Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
+                    Name (_ADR, 0x02)
+                    Method (_PLD, 0, Serialized)
                     {
-                        Return (EPLD) /* \EPLD */
+                        Return (EPLD)
                     }
-
-                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
+                    Method (_RMV, 0, NotSerialized)
                     {
                         If (\_OSI ("Windows 2009"))
                         {
@@ -10131,16 +9254,14 @@
                         }
                     }
                 }
-
                 Device (I1C)
                 {
-                    Name (_ADR, 0x03)  // _ADR: Address
-                    Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
+                    Name (_ADR, 0x03)
+                    Method (_PLD, 0, Serialized)
                     {
-                        Return (EPLD) /* \EPLD */
+                        Return (EPLD)
                     }
-
-                    Method (_RMV, 0, NotSerialized)  // _RMV: Removal Status
+                    Method (_RMV, 0, NotSerialized)
                     {
                         If (\_OSI ("Windows 2009"))
                         {
@@ -10153,10 +9274,9 @@
                     }
                 }
             }
-
             Device (RP04)
             {
-                Name (_ADR, 0x001C0003)  // _ADR: Address
+                Name (_ADR, 0x001C0003)
                 OperationRegion (PXCS, PCI_Config, 0x40, 0xC0)
                 Field (PXCS, AnyAcc, NoLock, WriteAsZeros)
                 {
@@ -10182,7 +9302,6 @@
                     HPSX,   1, 
                     PMSX,   1
                 }
-
                 Field (PXCS, AnyAcc, NoLock, Preserve)
                 {
                     Offset (0x02), 
@@ -10199,7 +9318,6 @@
                     HPCE,   1, 
                     PMCE,   1
                 }
-
                 Method (HPLG, 0, Serialized)
                 {
                     If (_STA ())
@@ -10209,19 +9327,18 @@
                             Sleep (0x64)
                             If (PDCX)
                             {
-                                Store (0x01, PDCX) /* \_SB_.PCI0.RP04.PDCX */
-                                Store (0x01, HPSX) /* \_SB_.PCI0.RP04.HPSX */
+                                Store (0x01, PDCX)
+                                Store (0x01, HPSX)
                                 \_SB.SSMI (0x5D, 0x00, 0x00, 0x00, 0x00)
-                                Notify (^, 0x00) // Bus Check
+                                Notify (^, 0x00)
                             }
                             Else
                             {
-                                Store (0x01, HPSX) /* \_SB_.PCI0.RP04.HPSX */
+                                Store (0x01, HPSX)
                             }
                         }
                     }
                 }
-
                 Method (PME, 0, Serialized)
                 {
                     If (_STA ())
@@ -10230,20 +9347,18 @@
                         {
                             While (PSPX)
                             {
-                                Store (0x01, PSPX) /* \_SB_.PCI0.RP04.PSPX */
+                                Store (0x01, PSPX)
                             }
-
-                            Store (0x01, PMSX) /* \_SB_.PCI0.RP04.PMSX */
-                            Notify (^, 0x02) // Device Wake
+                            Store (0x01, PMSX)
+                            Notify (^, 0x02)
                         }
                     }
                 }
-
                 Method (OSC, 2, Serialized)
                 {
                     If (_STA ())
                     {
-                        Store (Arg0, HPCE) /* \_SB_.PCI0.RP04.HPCE */
+                        Store (Arg0, HPCE)
                         If (Arg0)
                         {
                             And (SCTL, 0xFFC0, Local6)
@@ -10251,26 +9366,23 @@
                             {
                                 Or (Local6, 0x01, Local6)
                             }
-
-                            Store (Local6, SCTL) /* \_SB_.PCI0.RP04.SCTL */
-                            Store (0x3F, SSTS) /* \_SB_.PCI0.RP04.SSTS */
+                            Store (Local6, SCTL)
+                            Store (0x3F, SSTS)
                         }
                         Else
                         {
-                            Store (0x01, ABPX) /* \_SB_.PCI0.RP04.ABPX */
-                            Store (0x01, PDCX) /* \_SB_.PCI0.RP04.PDCX */
-                            Store (0x01, HPSX) /* \_SB_.PCI0.RP04.HPSX */
+                            Store (0x01, ABPX)
+                            Store (0x01, PDCX)
+                            Store (0x01, HPSX)
                         }
-
-                        Store (Arg1, PMCE) /* \_SB_.PCI0.RP04.PMCE */
+                        Store (Arg1, PMCE)
                         If (LEqual (Arg1, 0x00))
                         {
-                            Store (0x01, PMSX) /* \_SB_.PCI0.RP04.PMSX */
+                            Store (0x01, PMSX)
                         }
                     }
                 }
-
-                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
+                Method (_PRT, 0, NotSerialized)
                 {
                     If (\GPIC)
                     {
@@ -10283,7 +9395,6 @@
                                 0x00, 
                                 0x13
                             }, 
-
                             Package (0x04)
                             {
                                 0xFFFF, 
@@ -10291,7 +9402,6 @@
                                 0x00, 
                                 0x10
                             }, 
-
                             Package (0x04)
                             {
                                 0xFFFF, 
@@ -10299,7 +9409,6 @@
                                 0x00, 
                                 0x11
                             }, 
-
                             Package (0x04)
                             {
                                 0xFFFF, 
@@ -10320,7 +9429,6 @@
                                 LNKD, 
                                 0x00
                             }, 
-
                             Package (0x04)
                             {
                                 0xFFFF, 
@@ -10328,7 +9436,6 @@
                                 LNKA, 
                                 0x00
                             }, 
-
                             Package (0x04)
                             {
                                 0xFFFF, 
@@ -10336,7 +9443,6 @@
                                 LNKB, 
                                 0x00
                             }, 
-
                             Package (0x04)
                             {
                                 0xFFFF, 
@@ -10347,30 +9453,27 @@
                         })
                     }
                 }
-
-                Name (_PRW, Package (0x02)  // _PRW: Power Resources for Wake
+                Name (_PRW, Package (0x02)
                 {
                     0x09, 
                     0x05
                 })
                 Device (WNIC)
                 {
-                    Name (_ADR, 0x00)  // _ADR: Address
-                    Method (_PRW, 0, Serialized)  // _PRW: Power Resources for Wake
+                    Name (_ADR, 0x00)
+                    Method (_PRW, 0, Serialized)
                     {
-                        Return (^^_PRW) /* \_SB_.PCI0.RP04._PRW */
+                        Return (^^_PRW)
                     }
-
-                    Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
+                    Method (_PLD, 0, Serialized)
                     {
-                        Return (EPLD) /* \EPLD */
+                        Return (EPLD)
                     }
                 }
             }
-
             Device (RP05)
             {
-                Name (_ADR, 0x001C0004)  // _ADR: Address
+                Name (_ADR, 0x001C0004)
                 OperationRegion (PXCS, PCI_Config, 0x40, 0xC0)
                 Field (PXCS, AnyAcc, NoLock, WriteAsZeros)
                 {
@@ -10396,7 +9499,6 @@
                     HPSX,   1, 
                     PMSX,   1
                 }
-
                 Field (PXCS, AnyAcc, NoLock, Preserve)
                 {
                     Offset (0x02), 
@@ -10413,7 +9515,6 @@
                     HPCE,   1, 
                     PMCE,   1
                 }
-
                 Method (HPLG, 0, Serialized)
                 {
                     If (_STA ())
@@ -10423,19 +9524,18 @@
                             Sleep (0x64)
                             If (PDCX)
                             {
-                                Store (0x01, PDCX) /* \_SB_.PCI0.RP05.PDCX */
-                                Store (0x01, HPSX) /* \_SB_.PCI0.RP05.HPSX */
+                                Store (0x01, PDCX)
+                                Store (0x01, HPSX)
                                 \_SB.SSMI (0x5D, 0x00, 0x00, 0x00, 0x00)
-                                Notify (^, 0x00) // Bus Check
+                                Notify (^, 0x00)
                             }
                             Else
                             {
-                                Store (0x01, HPSX) /* \_SB_.PCI0.RP05.HPSX */
+                                Store (0x01, HPSX)
                             }
                         }
                     }
                 }
-
                 Method (PME, 0, Serialized)
                 {
                     If (_STA ())
@@ -10444,20 +9544,18 @@
                         {
                             While (PSPX)
                             {
-                                Store (0x01, PSPX) /* \_SB_.PCI0.RP05.PSPX */
+                                Store (0x01, PSPX)
                             }
-
-                            Store (0x01, PMSX) /* \_SB_.PCI0.RP05.PMSX */
-                            Notify (^, 0x02) // Device Wake
+                            Store (0x01, PMSX)
+                            Notify (^, 0x02)
                         }
                     }
                 }
-
                 Method (OSC, 2, Serialized)
                 {
                     If (_STA ())
                     {
-                        Store (Arg0, HPCE) /* \_SB_.PCI0.RP05.HPCE */
+                        Store (Arg0, HPCE)
                         If (Arg0)
                         {
                             And (SCTL, 0xFFC0, Local6)
@@ -10465,34 +9563,30 @@
                             {
                                 Or (Local6, 0x01, Local6)
                             }
-
-                            Store (Local6, SCTL) /* \_SB_.PCI0.RP05.SCTL */
-                            Store (0x3F, SSTS) /* \_SB_.PCI0.RP05.SSTS */
+                            Store (Local6, SCTL)
+                            Store (0x3F, SSTS)
                         }
                         Else
                         {
-                            Store (0x01, ABPX) /* \_SB_.PCI0.RP05.ABPX */
-                            Store (0x01, PDCX) /* \_SB_.PCI0.RP05.PDCX */
-                            Store (0x01, HPSX) /* \_SB_.PCI0.RP05.HPSX */
+                            Store (0x01, ABPX)
+                            Store (0x01, PDCX)
+                            Store (0x01, HPSX)
                         }
-
-                        Store (Arg1, PMCE) /* \_SB_.PCI0.RP05.PMCE */
+                        Store (Arg1, PMCE)
                         If (LEqual (Arg1, 0x00))
                         {
-                            Store (0x01, PMSX) /* \_SB_.PCI0.RP05.PMSX */
+                            Store (0x01, PMSX)
                         }
                     }
                 }
-
-                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
+                Method (_PRT, 0, NotSerialized)
                 {
                     Return (^^RP01._PRT ())
                 }
             }
-
             Device (RP06)
             {
-                Name (_ADR, 0x001C0005)  // _ADR: Address
+                Name (_ADR, 0x001C0005)
                 OperationRegion (PXCS, PCI_Config, 0x40, 0xC0)
                 Field (PXCS, AnyAcc, NoLock, WriteAsZeros)
                 {
@@ -10518,7 +9612,6 @@
                     HPSX,   1, 
                     PMSX,   1
                 }
-
                 Field (PXCS, AnyAcc, NoLock, Preserve)
                 {
                     Offset (0x02), 
@@ -10535,7 +9628,6 @@
                     HPCE,   1, 
                     PMCE,   1
                 }
-
                 Method (HPLG, 0, Serialized)
                 {
                     If (_STA ())
@@ -10545,19 +9637,18 @@
                             Sleep (0x64)
                             If (PDCX)
                             {
-                                Store (0x01, PDCX) /* \_SB_.PCI0.RP06.PDCX */
-                                Store (0x01, HPSX) /* \_SB_.PCI0.RP06.HPSX */
+                                Store (0x01, PDCX)
+                                Store (0x01, HPSX)
                                 \_SB.SSMI (0x5D, 0x00, 0x00, 0x00, 0x00)
-                                Notify (^, 0x00) // Bus Check
+                                Notify (^, 0x00)
                             }
                             Else
                             {
-                                Store (0x01, HPSX) /* \_SB_.PCI0.RP06.HPSX */
+                                Store (0x01, HPSX)
                             }
                         }
                     }
                 }
-
                 Method (PME, 0, Serialized)
                 {
                     If (_STA ())
@@ -10566,20 +9657,18 @@
                         {
                             While (PSPX)
                             {
-                                Store (0x01, PSPX) /* \_SB_.PCI0.RP06.PSPX */
+                                Store (0x01, PSPX)
                             }
-
-                            Store (0x01, PMSX) /* \_SB_.PCI0.RP06.PMSX */
-                            Notify (^, 0x02) // Device Wake
+                            Store (0x01, PMSX)
+                            Notify (^, 0x02)
                         }
                     }
                 }
-
                 Method (OSC, 2, Serialized)
                 {
                     If (_STA ())
                     {
-                        Store (Arg0, HPCE) /* \_SB_.PCI0.RP06.HPCE */
+                        Store (Arg0, HPCE)
                         If (Arg0)
                         {
                             And (SCTL, 0xFFC0, Local6)
@@ -10587,39 +9676,34 @@
                             {
                                 Or (Local6, 0x01, Local6)
                             }
-
-                            Store (Local6, SCTL) /* \_SB_.PCI0.RP06.SCTL */
-                            Store (0x3F, SSTS) /* \_SB_.PCI0.RP06.SSTS */
+                            Store (Local6, SCTL)
+                            Store (0x3F, SSTS)
                         }
                         Else
                         {
-                            Store (0x01, ABPX) /* \_SB_.PCI0.RP06.ABPX */
-                            Store (0x01, PDCX) /* \_SB_.PCI0.RP06.PDCX */
-                            Store (0x01, HPSX) /* \_SB_.PCI0.RP06.HPSX */
+                            Store (0x01, ABPX)
+                            Store (0x01, PDCX)
+                            Store (0x01, HPSX)
                         }
-
-                        Store (Arg1, PMCE) /* \_SB_.PCI0.RP06.PMCE */
+                        Store (Arg1, PMCE)
                         If (LEqual (Arg1, 0x00))
                         {
-                            Store (0x01, PMSX) /* \_SB_.PCI0.RP06.PMSX */
+                            Store (0x01, PMSX)
                         }
                     }
                 }
-
-                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
+                Method (_PRT, 0, NotSerialized)
                 {
                     Return (^^RP02._PRT ())
                 }
             }
-
             Device (RP07)
             {
-                Name (_ADR, 0x001C0006)  // _ADR: Address
-                Method (_STA, 0, NotSerialized)  // _STA: Status
+                Name (_ADR, 0x001C0006)
+                Method (_STA, 0, NotSerialized)
                 {
                     Return (ICST (RP7D))
                 }
-
                 OperationRegion (PXCS, PCI_Config, 0x40, 0xC0)
                 Field (PXCS, AnyAcc, NoLock, WriteAsZeros)
                 {
@@ -10645,7 +9729,6 @@
                     HPSX,   1, 
                     PMSX,   1
                 }
-
                 Field (PXCS, AnyAcc, NoLock, Preserve)
                 {
                     Offset (0x02), 
@@ -10662,7 +9745,6 @@
                     HPCE,   1, 
                     PMCE,   1
                 }
-
                 Method (HPLG, 0, Serialized)
                 {
                     If (_STA ())
@@ -10672,19 +9754,18 @@
                             Sleep (0x64)
                             If (PDCX)
                             {
-                                Store (0x01, PDCX) /* \_SB_.PCI0.RP07.PDCX */
-                                Store (0x01, HPSX) /* \_SB_.PCI0.RP07.HPSX */
+                                Store (0x01, PDCX)
+                                Store (0x01, HPSX)
                                 \_SB.SSMI (0x5D, 0x00, 0x00, 0x00, 0x00)
-                                Notify (^, 0x00) // Bus Check
+                                Notify (^, 0x00)
                             }
                             Else
                             {
-                                Store (0x01, HPSX) /* \_SB_.PCI0.RP07.HPSX */
+                                Store (0x01, HPSX)
                             }
                         }
                     }
                 }
-
                 Method (PME, 0, Serialized)
                 {
                     If (_STA ())
@@ -10693,20 +9774,18 @@
                         {
                             While (PSPX)
                             {
-                                Store (0x01, PSPX) /* \_SB_.PCI0.RP07.PSPX */
+                                Store (0x01, PSPX)
                             }
-
-                            Store (0x01, PMSX) /* \_SB_.PCI0.RP07.PMSX */
-                            Notify (^, 0x02) // Device Wake
+                            Store (0x01, PMSX)
+                            Notify (^, 0x02)
                         }
                     }
                 }
-
                 Method (OSC, 2, Serialized)
                 {
                     If (_STA ())
                     {
-                        Store (Arg0, HPCE) /* \_SB_.PCI0.RP07.HPCE */
+                        Store (Arg0, HPCE)
                         If (Arg0)
                         {
                             And (SCTL, 0xFFC0, Local6)
@@ -10714,45 +9793,39 @@
                             {
                                 Or (Local6, 0x01, Local6)
                             }
-
-                            Store (Local6, SCTL) /* \_SB_.PCI0.RP07.SCTL */
-                            Store (0x3F, SSTS) /* \_SB_.PCI0.RP07.SSTS */
+                            Store (Local6, SCTL)
+                            Store (0x3F, SSTS)
                         }
                         Else
                         {
-                            Store (0x01, ABPX) /* \_SB_.PCI0.RP07.ABPX */
-                            Store (0x01, PDCX) /* \_SB_.PCI0.RP07.PDCX */
-                            Store (0x01, HPSX) /* \_SB_.PCI0.RP07.HPSX */
+                            Store (0x01, ABPX)
+                            Store (0x01, PDCX)
+                            Store (0x01, HPSX)
                         }
-
-                        Store (Arg1, PMCE) /* \_SB_.PCI0.RP07.PMCE */
+                        Store (Arg1, PMCE)
                         If (LEqual (Arg1, 0x00))
                         {
-                            Store (0x01, PMSX) /* \_SB_.PCI0.RP07.PMSX */
+                            Store (0x01, PMSX)
                         }
                     }
                 }
-
-                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
+                Method (_PRT, 0, NotSerialized)
                 {
                     Return (^^RP03._PRT ())
                 }
-
-                Name (_PRW, Package (0x02)  // _PRW: Power Resources for Wake
+                Name (_PRW, Package (0x02)
                 {
                     0x09, 
                     0x04
                 })
             }
-
             Device (RP08)
             {
-                Name (_ADR, 0x001C0007)  // _ADR: Address
-                Method (_STA, 0, NotSerialized)  // _STA: Status
+                Name (_ADR, 0x001C0007)
+                Method (_STA, 0, NotSerialized)
                 {
                     Return (ICST (RP8D))
                 }
-
                 OperationRegion (PXCS, PCI_Config, 0x40, 0xC0)
                 Field (PXCS, AnyAcc, NoLock, WriteAsZeros)
                 {
@@ -10778,7 +9851,6 @@
                     HPSX,   1, 
                     PMSX,   1
                 }
-
                 Field (PXCS, AnyAcc, NoLock, Preserve)
                 {
                     Offset (0x02), 
@@ -10795,7 +9867,6 @@
                     HPCE,   1, 
                     PMCE,   1
                 }
-
                 Method (HPLG, 0, Serialized)
                 {
                     If (_STA ())
@@ -10805,19 +9876,18 @@
                             Sleep (0x64)
                             If (PDCX)
                             {
-                                Store (0x01, PDCX) /* \_SB_.PCI0.RP08.PDCX */
-                                Store (0x01, HPSX) /* \_SB_.PCI0.RP08.HPSX */
+                                Store (0x01, PDCX)
+                                Store (0x01, HPSX)
                                 \_SB.SSMI (0x5D, 0x00, 0x00, 0x00, 0x00)
-                                Notify (^, 0x00) // Bus Check
+                                Notify (^, 0x00)
                             }
                             Else
                             {
-                                Store (0x01, HPSX) /* \_SB_.PCI0.RP08.HPSX */
+                                Store (0x01, HPSX)
                             }
                         }
                     }
                 }
-
                 Method (PME, 0, Serialized)
                 {
                     If (_STA ())
@@ -10826,20 +9896,18 @@
                         {
                             While (PSPX)
                             {
-                                Store (0x01, PSPX) /* \_SB_.PCI0.RP08.PSPX */
+                                Store (0x01, PSPX)
                             }
-
-                            Store (0x01, PMSX) /* \_SB_.PCI0.RP08.PMSX */
-                            Notify (^, 0x02) // Device Wake
+                            Store (0x01, PMSX)
+                            Notify (^, 0x02)
                         }
                     }
                 }
-
                 Method (OSC, 2, Serialized)
                 {
                     If (_STA ())
                     {
-                        Store (Arg0, HPCE) /* \_SB_.PCI0.RP08.HPCE */
+                        Store (Arg0, HPCE)
                         If (Arg0)
                         {
                             And (SCTL, 0xFFC0, Local6)
@@ -10847,36 +9915,31 @@
                             {
                                 Or (Local6, 0x01, Local6)
                             }
-
-                            Store (Local6, SCTL) /* \_SB_.PCI0.RP08.SCTL */
-                            Store (0x3F, SSTS) /* \_SB_.PCI0.RP08.SSTS */
+                            Store (Local6, SCTL)
+                            Store (0x3F, SSTS)
                         }
                         Else
                         {
-                            Store (0x01, ABPX) /* \_SB_.PCI0.RP08.ABPX */
-                            Store (0x01, PDCX) /* \_SB_.PCI0.RP08.PDCX */
-                            Store (0x01, HPSX) /* \_SB_.PCI0.RP08.HPSX */
+                            Store (0x01, ABPX)
+                            Store (0x01, PDCX)
+                            Store (0x01, HPSX)
                         }
-
-                        Store (Arg1, PMCE) /* \_SB_.PCI0.RP08.PMCE */
+                        Store (Arg1, PMCE)
                         If (LEqual (Arg1, 0x00))
                         {
-                            Store (0x01, PMSX) /* \_SB_.PCI0.RP08.PMSX */
+                            Store (0x01, PMSX)
                         }
                     }
                 }
-
-                Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
+                Method (_PRT, 0, NotSerialized)
                 {
                     Return (^^RP04._PRT ())
                 }
-
-                Method (_PRW, 0, NotSerialized)  // _PRW: Power Resources for Wake
+                Method (_PRW, 0, NotSerialized)
                 {
                     Return (UPRW (0x09, 0x04))
                 }
             }
-
             Method (POSC, 2, Serialized)
             {
                 If (LOr (Arg1, LOr (And (Arg0, 0x01), And (Arg0, 
@@ -10894,7 +9957,6 @@
                     {
                         \_SB.PCI0.RP03.OSC (0x01, Local5)
                     }
-
                     \_SB.PCI0.RP04.OSC (Local4, Local5)
                     \_SB.PCI0.RP05.OSC (Local4, Local5)
                     \_SB.PCI0.RP06.OSC (Local4, Local5)
@@ -10903,12 +9965,10 @@
                     Store (Local5, \_SB.PCI0.LPCB.BPEE)
                 }
             }
-
             Device (B0D4)
             {
-                Name (_ADR, 0x00040000)  // _ADR: Address
+                Name (_ADR, 0x00040000)
             }
-
             Scope (\)
             {
                 Field (PMIO, ByteAcc, NoLock, Preserve)
@@ -10929,7 +9989,6 @@
                     AGSE,   16, 
                     AGSS,   16
                 }
-
                 Field (GPIO, ByteAcc, NoLock, Preserve)
                 {
                     Offset (0x04), 
@@ -10944,7 +10003,6 @@
                     GPL3,   32
                 }
             }
-
             Method (GUPT, 1, NotSerialized)
             {
                 And (Arg0, 0x0F, Local2)
@@ -10954,16 +10012,13 @@
                     Store (0x0A, Local0)
                     Return (Local0)
                 }
-
                 ShiftLeft (Local2, 0x01, Local0)
                 If (LEqual (And (Arg0, 0x001A0000), 0x001A0000))
                 {
                     Add (Local0, Local1, Local0)
                 }
-
                 Return (Local0)
             }
-
             Method (UPSW, 1, Serialized)
             {
                 Store (0x01, Local0)
@@ -10971,22 +10026,19 @@
                 And (Local1, 0x01, Local0)
                 Return (Local0)
             }
-
             Method (\_SB.PCI0.GSWS, 1, NotSerialized)
             {
                 While (APMS)
                 {
                     Stall (0x01)
                 }
-
-                Store (0xF3, SSMP) /* \SSMP */
+                Store (0xF3, SSMP)
                 Stall (0x32)
                 While (APMS)
                 {
                     Stall (0x01)
                 }
             }
-
             Mutex (SMIM, 0x00)
             Name (SMIS, 0x00)
             Name (SMID, 0x00)
@@ -10995,31 +10047,31 @@
                 Acquire (SMIM, 0xFFFF)
                 If (LEqual (SMID, 0x00))
                 {
-                    Store (0x00, GSIE) /* \GSIE */
-                    Store (0x00, EOS) /* \EOS_ */
+                    Store (0x00, GSIE)
+                    Store (0x00, EOS)
                 }
-
                 Increment (SMID)
                 Release (SMIM)
             }
-
             Method (ESMI, 0, NotSerialized)
             {
                 Acquire (SMIM, 0xFFFF)
                 Decrement (SMID)
                 If (LEqual (SMID, 0x00))
                 {
-                    Store (0x01, EOS) /* \EOS_ */
-                    Store (0x01, GSIE) /* \GSIE */
+                    Store (0x01, EOS)
+                    Store (0x01, GSIE)
                 }
-
                 Release (SMIM)
             }
-
             Alias (DSMI, \DSMI)
             Alias (ESMI, \ESMI)
-            Name (PUID, ToUUID ("33db4d5b-1ff7-401c-9657-7441c03dd766") /* PCI Host Bridge Device */)
-            Method (_OSC, 4, NotSerialized)  // _OSC: Operating System Capabilities
+            Name (PUID, Buffer (0x10)
+            {
+                /* 0000 */   0x5B, 0x4D, 0xDB, 0x33, 0xF7, 0x1F, 0x1C, 0x40,
+                /* 0008 */   0x96, 0x57, 0x74, 0x41, 0xC0, 0x3D, 0xD7, 0x66
+            })
+            Method (_OSC, 4, NotSerialized)
             {
                 CreateDWordField (Arg3, 0x00, CDW1)
                 CreateDWordField (Arg3, 0x04, CDW2)
@@ -11033,35 +10085,30 @@
                     {
                         And (Local3, 0x1E, Local3)
                     }
-
                     And (Local3, 0x1D, Local3)
                     If (LNot (And (CDW1, 0x01)))
                     {
                         POSC (Local3, 0x01)
                         If (And (Local3, 0x10)) {}
                     }
-
                     If (LNotEqual (Arg1, One))
                     {
-                        Or (CDW1, 0x08, CDW1) /* \_SB_.PCI0._OSC.CDW1 */
+                        Or (CDW1, 0x08, CDW1)
                     }
-
                     If (LNotEqual (CDW3, Local3))
                     {
-                        Or (CDW1, 0x10, CDW1) /* \_SB_.PCI0._OSC.CDW1 */
+                        Or (CDW1, 0x10, CDW1)
                     }
-
-                    Store (Local3, CDW3) /* \_SB_.PCI0._OSC.CDW3 */
-                    Store (Local3, OSCC) /* \OSCC */
+                    Store (Local3, CDW3)
+                    Store (Local3, OSCC)
                     Return (Arg3)
                 }
                 Else
                 {
-                    Or (CDW1, 0x04, CDW1) /* \_SB_.PCI0._OSC.CDW1 */
+                    Or (CDW1, 0x04, CDW1)
                     Return (Arg3)
                 }
             }
-
             Method (ICST, 1, NotSerialized)
             {
                 Store (0x0F, Local0)
@@ -11069,88 +10116,76 @@
                 {
                     Store (0x00, Local0)
                 }
-
                 Return (Local0)
             }
-
             Scope (RP01)
             {
-                Method (_STA, 0, NotSerialized)  // _STA: Status
+                Method (_STA, 0, NotSerialized)
                 {
                     Return (ICST (RP1D))
                 }
             }
-
             Scope (RP02)
             {
-                Method (_STA, 0, NotSerialized)  // _STA: Status
+                Method (_STA, 0, NotSerialized)
                 {
                     Return (ICST (RP2D))
                 }
             }
-
             Scope (RP03)
             {
-                Method (_STA, 0, NotSerialized)  // _STA: Status
+                Method (_STA, 0, NotSerialized)
                 {
                     Return (ICST (RP3D))
                 }
             }
-
             Scope (RP04)
             {
-                Method (_STA, 0, NotSerialized)  // _STA: Status
+                Method (_STA, 0, NotSerialized)
                 {
                     Return (ICST (RP4D))
                 }
             }
-
             Scope (RP05)
             {
-                Method (_STA, 0, NotSerialized)  // _STA: Status
+                Method (_STA, 0, NotSerialized)
                 {
                     Return (ICST (RP5D))
                 }
             }
-
             Scope (RP06)
             {
-                Method (_STA, 0, NotSerialized)  // _STA: Status
+                Method (_STA, 0, NotSerialized)
                 {
                     Return (ICST (RP6D))
                 }
             }
-
             Scope (HDEF)
             {
                 Name (ASTA, 0x00)
                 Name (ASTI, 0x00)
                 PowerResource (APPR, 0x00, 0x0000)
                 {
-                    Method (_STA, 0, NotSerialized)  // _STA: Status
+                    Method (_STA, 0, NotSerialized)
                     {
-                        Return (ASTA) /* \_SB_.PCI0.HDEF.ASTA */
+                        Return (ASTA)
                     }
-
-                    Method (_ON, 0, NotSerialized)  // _ON_: Power On
+                    Method (_ON, 0, NotSerialized)
                     {
-                        Store (0x01, ASTA) /* \_SB_.PCI0.HDEF.ASTA */
-                        Store (\_SB.PCI0.LPCB.EC0.SAST (0x01), ASTI) /* \_SB_.PCI0.HDEF.ASTI */
+                        Store (0x01, ASTA)
+                        Store (\_SB.PCI0.LPCB.EC0.SAST (0x01), ASTI)
                     }
-
-                    Method (_OFF, 0, NotSerialized)  // _OFF: Power Off
+                    Method (_OFF, 0, NotSerialized)
                     {
-                        Store (0x00, ASTA) /* \_SB_.PCI0.HDEF.ASTA */
-                        Store (\_SB.PCI0.LPCB.EC0.SAST (0x00), ASTI) /* \_SB_.PCI0.HDEF.ASTI */
+                        Store (0x00, ASTA)
+                        Store (\_SB.PCI0.LPCB.EC0.SAST (0x00), ASTI)
                     }
                 }
-
-                Name (_PR0, Package (0x01)  // _PR0: Power Resources for D0
+                Name (_PR0, Package (0x01)
                 {
                     APPR
                 })
             }
-
             Scope (LPCB)
             {
                 OperationRegion (LPC2, PCI_Config, 0x80, 0x3C)
@@ -11177,7 +10212,6 @@
                     Offset (0x38), 
                     GPRO,   32
                 }
-
                 Name (CDC, Package (0x08)
                 {
                     0x03F8, 
@@ -11210,10 +10244,8 @@
                     {
                         Store (\_SB.PCI0.SBUS.SRDB (Arg0, Arg1), Local0)
                     }
-
                     Return (Local0)
                 }
-
                 Method (DCS, 3, NotSerialized)
                 {
                     Store (0x00, Local1)
@@ -11222,40 +10254,37 @@
                     {
                         ShiftLeft (Local0, Arg2, Local1)
                     }
-
                     Return (Local1)
                 }
-
                 Method (DPD, 2, Serialized)
                 {
                     If (LEqual (Arg0, 0x00))
                     {
-                        Store (0x00, FDLE) /* \_SB_.PCI0.LPCB.FDLE */
+                        Store (0x00, FDLE)
                     }
                     Else
                     {
                         If (LEqual (Arg0, 0x01))
                         {
-                            Store (0x00, LLPE) /* \_SB_.PCI0.LPCB.LLPE */
+                            Store (0x00, LLPE)
                         }
                         Else
                         {
                             If (LEqual (Arg0, 0x02))
                             {
-                                Store (0x00, CALE) /* \_SB_.PCI0.LPCB.CALE */
+                                Store (0x00, CALE)
                             }
                             Else
                             {
                                 If (LEqual (Arg0, 0x03))
                                 {
-                                    Store (0x00, CBLE) /* \_SB_.PCI0.LPCB.CBLE */
-                                    And (G2DC, Not (0x01), G2DC) /* \_SB_.PCI0.LPCB.G2DC */
+                                    Store (0x00, CBLE)
+                                    And (G2DC, Not (0x01), G2DC)
                                 }
                             }
                         }
                     }
                 }
-
                 Method (EPD, 3, Serialized)
                 {
                     If (LEqual (Arg0, 0x00))
@@ -11265,38 +10294,36 @@
                         {
                             Store (0x01, Local0)
                         }
-
-                        Store (Local0, FDDC) /* \_SB_.PCI0.LPCB.FDDC */
-                        Store (0x01, FDLE) /* \_SB_.PCI0.LPCB.FDLE */
+                        Store (Local0, FDDC)
+                        Store (0x01, FDLE)
                     }
                     Else
                     {
                         If (LEqual (Arg0, 0x01))
                         {
-                            Store (DCS (LPD, Arg1, 0x00), LPDC) /* \_SB_.PCI0.LPCB.LPDC */
-                            Store (0x01, LLPE) /* \_SB_.PCI0.LPCB.LLPE */
+                            Store (DCS (LPD, Arg1, 0x00), LPDC)
+                            Store (0x01, LLPE)
                         }
                         Else
                         {
                             If (LEqual (Arg0, 0x02))
                             {
-                                Store (DCS (CDC, Arg1, 0x00), CMAD) /* \_SB_.PCI0.LPCB.CMAD */
-                                Store (0x01, CALE) /* \_SB_.PCI0.LPCB.CALE */
+                                Store (DCS (CDC, Arg1, 0x00), CMAD)
+                                Store (0x01, CALE)
                             }
                             Else
                             {
                                 If (LEqual (Arg0, 0x03))
                                 {
-                                    Store (DCS (CDC, Arg1, 0x00), CMBD) /* \_SB_.PCI0.LPCB.CMBD */
-                                    Store (0x01, CBLE) /* \_SB_.PCI0.LPCB.CBLE */
-                                    Store (0x0C, G2MK) /* \_SB_.PCI0.LPCB.G2MK */
-                                    Or (Arg2, 0x01, G2DC) /* \_SB_.PCI0.LPCB.G2DC */
+                                    Store (DCS (CDC, Arg1, 0x00), CMBD)
+                                    Store (0x01, CBLE)
+                                    Store (0x0C, G2MK)
+                                    Or (Arg2, 0x01, G2DC)
                                 }
                             }
                         }
                     }
                 }
-
                 Method (CFG, 5, Serialized)
                 {
                     If (LEqual (Arg1, 0x00))
@@ -11309,25 +10336,23 @@
                     }
                 }
             }
-
             Device (ACEL)
             {
-                Name (_HID, EisaId ("HPQ0004"))  // _HID: Hardware ID
+                Name (_HID, EisaId ("HPQ0004"))
                 Name (DEPT, 0xFF)
                 Name (CTST, 0xFF)
-                Method (_INI, 0, NotSerialized)  // _INI: Initialize
+                Method (_INI, 0, NotSerialized)
                 {
                     ITAL ()
                 }
-
-                Name (_CRS, ResourceTemplate ()  // _CRS: Current Resource Settings
+                Name (_CRS, ResourceTemplate ()
                 {
                     Interrupt (ResourceConsumer, Edge, ActiveHigh, Exclusive, ,, )
                     {
                         0x00000017,
                     }
                 })
-                Method (_STA, 0, NotSerialized)  // _STA: Status
+                Method (_STA, 0, NotSerialized)
                 {
                     If (LEqual (DEPT, 0xFF))
                     {
@@ -11337,13 +10362,10 @@
                         {
                             Store (0x00, Local0)
                         }
-
-                        Store (Local0, DEPT) /* \_SB_.PCI0.ACEL.DEPT */
+                        Store (Local0, DEPT)
                     }
-
-                    Return (DEPT) /* \_SB_.PCI0.ACEL.DEPT */
+                    Return (DEPT)
                 }
-
                 Method (ITAL, 0, Serialized)
                 {
                     If (_STA ())
@@ -11356,11 +10378,10 @@
                         ALWR (0x36, 0x13)
                         ALWR (0x37, 0x01)
                         ALWR (0x34, 0x0A)
-                        Store (0xFF, CTST) /* \_SB_.PCI0.ACEL.CTST */
+                        Store (0xFF, CTST)
                         AJAL ()
                     }
                 }
-
                 Method (AJAL, 0, Serialized)
                 {
                     If (_STA ())
@@ -11370,7 +10391,7 @@
                         {
                             If (LNotEqual (CTST, 0x01))
                             {
-                                Store (0x01, CTST) /* \_SB_.PCI0.ACEL.CTST */
+                                Store (0x01, CTST)
                                 ALWR (0x22, 0x60)
                             }
                         }
@@ -11378,13 +10399,12 @@
                         {
                             If (LNotEqual (CTST, 0x00))
                             {
-                                Store (0x00, CTST) /* \_SB_.PCI0.ACEL.CTST */
+                                Store (0x00, CTST)
                                 ALWR (0x22, 0x40)
                             }
                         }
                     }
                 }
-
                 Method (CLRI, 0, Serialized)
                 {
                     Store (0x00, Local2)
@@ -11397,40 +10417,33 @@
                             Store (DerefOf (Index (DerefOf (Index (NBST, 0x00)), 0x00)), 
                                 Local0)
                         }
-
                         If (LEqual (\_SB.BAT1._STA (), 0x1F))
                         {
                             Store (DerefOf (Index (DerefOf (Index (NBST, 0x01)), 0x00)), 
                                 Local1)
                         }
-
                         And (Local0, Local1, Local0)
                         If (And (Local0, 0x04))
                         {
                             Store (0x01, Local2)
                         }
                     }
-
                     Return (Local2)
                 }
-
                 Method (ALRD, 1, Serialized)
                 {
                     Store (\_SB.PCI0.LPCB.SMAB (0x33, Arg0, 0x00), Local0)
                     Return (Local0)
                 }
-
                 Method (ALWR, 2, Serialized)
                 {
                     Store (\_SB.PCI0.LPCB.SMAB (0x32, Arg0, Arg1), Local0)
                     Return (Local0)
                 }
-
                 Method (ALID, 1, Serialized)
                 {
                     Return (\_SB.LID._LID ())
                 }
-
                 Method (ADSN, 0, Serialized)
                 {
                     Store (HDDS, Local0)
@@ -11438,8 +10451,7 @@
                     Return (Local0)
                 }
             }
-
-            Method (_PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
+            Method (_PRT, 0, NotSerialized)
             {
                 If (GPIC)
                 {
@@ -11452,7 +10464,6 @@
                             0x00, 
                             0x10
                         }, 
-
                         Package (0x04)
                         {
                             0x0002FFFF, 
@@ -11460,7 +10471,6 @@
                             0x00, 
                             0x10
                         }, 
-
                         Package (0x04)
                         {
                             0x001FFFFF, 
@@ -11468,7 +10478,6 @@
                             0x00, 
                             0x15
                         }, 
-
                         Package (0x04)
                         {
                             0x001FFFFF, 
@@ -11476,7 +10485,6 @@
                             0x00, 
                             0x13
                         }, 
-
                         Package (0x04)
                         {
                             0x001FFFFF, 
@@ -11484,7 +10492,6 @@
                             0x00, 
                             0x12
                         }, 
-
                         Package (0x04)
                         {
                             0x001FFFFF, 
@@ -11492,7 +10499,6 @@
                             0x00, 
                             0x10
                         }, 
-
                         Package (0x04)
                         {
                             0x001DFFFF, 
@@ -11500,7 +10506,6 @@
                             0x00, 
                             0x10
                         }, 
-
                         Package (0x04)
                         {
                             0x001AFFFF, 
@@ -11508,7 +10513,6 @@
                             0x00, 
                             0x10
                         }, 
-
                         Package (0x04)
                         {
                             0x001BFFFF, 
@@ -11516,7 +10520,6 @@
                             0x00, 
                             0x16
                         }, 
-
                         Package (0x04)
                         {
                             0x001CFFFF, 
@@ -11524,7 +10527,6 @@
                             0x00, 
                             0x11
                         }, 
-
                         Package (0x04)
                         {
                             0x001CFFFF, 
@@ -11532,7 +10534,6 @@
                             0x00, 
                             0x10
                         }, 
-
                         Package (0x04)
                         {
                             0x001CFFFF, 
@@ -11540,7 +10541,6 @@
                             0x00, 
                             0x12
                         }, 
-
                         Package (0x04)
                         {
                             0x001CFFFF, 
@@ -11548,7 +10548,6 @@
                             0x00, 
                             0x13
                         }, 
-
                         Package (0x04)
                         {
                             0x0019FFFF, 
@@ -11556,7 +10555,6 @@
                             0x00, 
                             0x14
                         }, 
-
                         Package (0x04)
                         {
                             0x0016FFFF, 
@@ -11564,7 +10562,6 @@
                             0x00, 
                             0x10
                         }, 
-
                         Package (0x04)
                         {
                             0x0016FFFF, 
@@ -11572,7 +10569,6 @@
                             0x00, 
                             0x11
                         }, 
-
                         Package (0x04)
                         {
                             0x0016FFFF, 
@@ -11580,7 +10576,6 @@
                             0x00, 
                             0x12
                         }, 
-
                         Package (0x04)
                         {
                             0x0016FFFF, 
@@ -11588,7 +10583,6 @@
                             0x00, 
                             0x13
                         }, 
-
                         Package (0x04)
                         {
                             0x0004FFFF, 
@@ -11596,7 +10590,6 @@
                             0x00, 
                             0x10
                         }, 
-
                         Package (0x04)
                         {
                             0x0004FFFF, 
@@ -11604,7 +10597,6 @@
                             0x00, 
                             0x11
                         }, 
-
                         Package (0x04)
                         {
                             0x0004FFFF, 
@@ -11612,7 +10604,6 @@
                             0x00, 
                             0x12
                         }, 
-
                         Package (0x04)
                         {
                             0x0004FFFF, 
@@ -11620,7 +10611,6 @@
                             0x00, 
                             0x13
                         }, 
-
                         Package (0x04)
                         {
                             0x0006FFFF, 
@@ -11628,7 +10618,6 @@
                             0x00, 
                             0x13
                         }, 
-
                         Package (0x04)
                         {
                             0x0006FFFF, 
@@ -11636,7 +10625,6 @@
                             0x00, 
                             0x10
                         }, 
-
                         Package (0x04)
                         {
                             0x0006FFFF, 
@@ -11644,7 +10632,6 @@
                             0x00, 
                             0x11
                         }, 
-
                         Package (0x04)
                         {
                             0x0006FFFF, 
@@ -11665,7 +10652,6 @@
                             LNKA, 
                             0x00
                         }, 
-
                         Package (0x04)
                         {
                             0x0002FFFF, 
@@ -11673,7 +10659,6 @@
                             LNKA, 
                             0x00
                         }, 
-
                         Package (0x04)
                         {
                             0x0019FFFF, 
@@ -11681,7 +10666,6 @@
                             LNKE, 
                             0x00
                         }, 
-
                         Package (0x04)
                         {
                             0x001AFFFF, 
@@ -11689,7 +10673,6 @@
                             LNKA, 
                             0x00
                         }, 
-
                         Package (0x04)
                         {
                             0x001BFFFF, 
@@ -11697,7 +10680,6 @@
                             LNKG, 
                             0x00
                         }, 
-
                         Package (0x04)
                         {
                             0x001CFFFF, 
@@ -11705,7 +10687,6 @@
                             LNKB, 
                             0x00
                         }, 
-
                         Package (0x04)
                         {
                             0x001CFFFF, 
@@ -11713,7 +10694,6 @@
                             LNKA, 
                             0x00
                         }, 
-
                         Package (0x04)
                         {
                             0x001CFFFF, 
@@ -11721,7 +10701,6 @@
                             LNKC, 
                             0x00
                         }, 
-
                         Package (0x04)
                         {
                             0x001CFFFF, 
@@ -11729,7 +10708,6 @@
                             LNKD, 
                             0x00
                         }, 
-
                         Package (0x04)
                         {
                             0x001DFFFF, 
@@ -11737,7 +10715,6 @@
                             LNKA, 
                             0x00
                         }, 
-
                         Package (0x04)
                         {
                             0x001FFFFF, 
@@ -11745,7 +10722,6 @@
                             LNKF, 
                             0x00
                         }, 
-
                         Package (0x04)
                         {
                             0x001FFFFF, 
@@ -11753,7 +10729,6 @@
                             LNKD, 
                             0x00
                         }, 
-
                         Package (0x04)
                         {
                             0x001FFFFF, 
@@ -11761,7 +10736,6 @@
                             LNKC, 
                             0x00
                         }, 
-
                         Package (0x04)
                         {
                             0x001FFFFF, 
@@ -11769,7 +10743,6 @@
                             LNKA, 
                             0x00
                         }, 
-
                         Package (0x04)
                         {
                             0x0016FFFF, 
@@ -11777,7 +10750,6 @@
                             LNKA, 
                             0x00
                         }, 
-
                         Package (0x04)
                         {
                             0x0016FFFF, 
@@ -11785,7 +10757,6 @@
                             LNKD, 
                             0x00
                         }, 
-
                         Package (0x04)
                         {
                             0x0016FFFF, 
@@ -11793,7 +10764,6 @@
                             LNKC, 
                             0x00
                         }, 
-
                         Package (0x04)
                         {
                             0x0016FFFF, 
@@ -11801,7 +10771,6 @@
                             LNKB, 
                             0x00
                         }, 
-
                         Package (0x04)
                         {
                             0x0004FFFF, 
@@ -11809,7 +10778,6 @@
                             LNKA, 
                             0x00
                         }, 
-
                         Package (0x04)
                         {
                             0x0004FFFF, 
@@ -11817,7 +10785,6 @@
                             LNKB, 
                             0x00
                         }, 
-
                         Package (0x04)
                         {
                             0x0004FFFF, 
@@ -11825,7 +10792,6 @@
                             LNKC, 
                             0x00
                         }, 
-
                         Package (0x04)
                         {
                             0x0004FFFF, 
@@ -11833,7 +10799,6 @@
                             LNKD, 
                             0x00
                         }, 
-
                         Package (0x04)
                         {
                             0x0006FFFF, 
@@ -11841,7 +10806,6 @@
                             LNKD, 
                             0x00
                         }, 
-
                         Package (0x04)
                         {
                             0x0006FFFF, 
@@ -11849,7 +10813,6 @@
                             LNKA, 
                             0x00
                         }, 
-
                         Package (0x04)
                         {
                             0x0006FFFF, 
@@ -11857,7 +10820,6 @@
                             LNKB, 
                             0x00
                         }, 
-
                         Package (0x04)
                         {
                             0x0006FFFF, 
@@ -11868,8 +10830,7 @@
                     })
                 }
             }
-
-            Method (PCIB._PRT, 0, NotSerialized)  // _PRT: PCI Routing Table
+            Method (PCIB._PRT, 0, NotSerialized)
             {
                 If (GPIC)
                 {
@@ -11882,7 +10843,6 @@
                             0x00, 
                             0x14
                         }, 
-
                         Package (0x04)
                         {
                             0x0006FFFF, 
@@ -11890,7 +10850,6 @@
                             0x00, 
                             0x16
                         }, 
-
                         Package (0x04)
                         {
                             0x0006FFFF, 
@@ -11898,7 +10857,6 @@
                             0x00, 
                             0x16
                         }, 
-
                         Package (0x04)
                         {
                             0x0006FFFF, 
@@ -11906,7 +10864,6 @@
                             0x00, 
                             0x16
                         }, 
-
                         Package (0x04)
                         {
                             0x0006FFFF, 
@@ -11914,7 +10871,6 @@
                             0x00, 
                             0x16
                         }, 
-
                         Package (0x04)
                         {
                             0x0006FFFF, 
@@ -11935,7 +10891,6 @@
                             LNKE, 
                             0x00
                         }, 
-
                         Package (0x04)
                         {
                             0x0006FFFF, 
@@ -11943,7 +10898,6 @@
                             LNKG, 
                             0x00
                         }, 
-
                         Package (0x04)
                         {
                             0x0006FFFF, 
@@ -11951,7 +10905,6 @@
                             LNKG, 
                             0x00
                         }, 
-
                         Package (0x04)
                         {
                             0x0006FFFF, 
@@ -11959,7 +10912,6 @@
                             LNKG, 
                             0x00
                         }, 
-
                         Package (0x04)
                         {
                             0x0006FFFF, 
@@ -11967,7 +10919,6 @@
                             LNKG, 
                             0x00
                         }, 
-
                         Package (0x04)
                         {
                             0x0006FFFF, 
@@ -11978,17 +10929,15 @@
                     })
                 }
             }
-
             Field (GPIO, ByteAcc, NoLock, Preserve)
             {
                 Offset (0x0C), 
                 Offset (0x0C), 
                 GLEP,   1
             }
-
             Scope (RP06)
             {
-                Method (_PRW, 0, Serialized)  // _PRW: Power Resources for Wake
+                Method (_PRW, 0, Serialized)
                 {
                     Store (Package (0x02)
                         {
@@ -11999,16 +10948,13 @@
                     {
                         Store (0x00, Index (Local0, 0x01))
                     }
-
                     Return (Local0)
                 }
-
                 OperationRegion (NPCI, PCI_Config, 0x19, 0x01)
                 Field (NPCI, ByteAcc, NoLock, Preserve)
                 {
                     BUSN,   8
                 }
-
                 Method (GADD, 0, Serialized)
                 {
                     Store (BUSN, Local0)
@@ -12016,32 +10962,27 @@
                     Add (0xE0000000, Local0, Local1)
                     Return (Local1)
                 }
-
                 Device (NIC)
                 {
-                    Name (_ADR, 0x00)  // _ADR: Address
-                    Method (_PRW, 0, Serialized)  // _PRW: Power Resources for Wake
+                    Name (_ADR, 0x00)
+                    Method (_PRW, 0, Serialized)
                     {
                         Return (^^_PRW ())
                     }
-
                     Method (EJ0, 0, NotSerialized)
                     {
                         Sleep (0x0A)
-                        Store (0x00, GLEP) /* \_SB_.PCI0.GLEP */
+                        Store (0x00, GLEP)
                     }
-
                     Method (LPON, 0, NotSerialized)
                     {
                         Store (CondRefOf (\_GPE._L1C, Local0), Local1)
                         Return (Local1)
                     }
-
-                    Method (_PLD, 0, Serialized)  // _PLD: Physical Location of Device
+                    Method (_PLD, 0, Serialized)
                     {
-                        Return (EPLD) /* \EPLD */
+                        Return (EPLD)
                     }
-
                     OperationRegion (PCIR, PCI_Config, 0x0C, 0x01)
                     Field (PCIR, AnyAcc, NoLock, Preserve)
                     {
@@ -12049,7 +10990,6 @@
                     }
                 }
             }
-
             Scope (\_GPE)
             {
                 Name (CBID, 0x00)
@@ -12060,15 +11000,14 @@
                     {
                         HNLP (0x1000)
                         Store (GIV, Local0)
-                        XOr (Local0, 0x1000, GIV) /* \GIV_ */
-                        Store (0x00, CBID) /* \_GPE.CBID */
+                        XOr (Local0, 0x1000, GIV)
+                        Store (0x00, CBID)
                     }
                     Else
                     {
                         Increment (CBID)
                     }
                 }
-
                 Method (HNLP, 1, Serialized)
                 {
                     If (\_SB.PCI0.RP06.NIC.LPON ())
@@ -12083,7 +11022,7 @@
                             {
                                 If (ILUX)
                                 {
-                                    Notify (\_SB.PCI0.RP06.NIC, 0x03) // Eject Request
+                                    Notify (\_SB.PCI0.RP06.NIC, 0x03)
                                 }
                                 Else
                                 {
@@ -12091,12 +11030,10 @@
                                 }
                             }
                         }
-
                         Sleep (0x64)
-                        Notify (\_SB.PCI0.RP06, 0x00) // Bus Check
+                        Notify (\_SB.PCI0.RP06, 0x00)
                     }
                 }
-
                 Method (NNST, 0, Serialized)
                 {
                     Store (GPL0, Local1)
@@ -12111,10 +11048,8 @@
                             }
                         }
                     }
-
                     Return (Local3)
                 }
-
                 Method (INIC, 0, Serialized)
                 {
                     OperationRegion (NPC2, SystemMemory, \_SB.PCI0.RP06.GADD (), 0x02)
@@ -12122,7 +11057,6 @@
                     {
                         VEID,   16
                     }
-
                     Store (0x0B, Local1)
                     Store (0x01, Local3)
                     If (\_SB.PCI0.GLEP)
@@ -12133,7 +11067,6 @@
                             Store (0x00, Local3)
                         }
                     }
-
                     Store (\_SB.PCI0.RP06.HPCE, Local2)
                     While (LAnd (LGreater (Local1, 0x00), NNST ()))
                     {
@@ -12151,13 +11084,11 @@
                             Decrement (Local1)
                         }
                     }
-
                     Store (Local2, \_SB.PCI0.RP06.HPCE)
                     If (Local3)
                     {
                         \_SB.SSMI (0xEA3E, 0x00, 0x00, 0x00, 0x00)
                     }
-
                     If (LEqual (\WCOS (), 0x03))
                     {
                         Store (0x10, \_SB.PCI0.RP06.NIC.CLSZ)
@@ -12165,7 +11096,6 @@
                 }
             }
         }
-
         Name (NBTI, Package (0x02)
         {
             Package (0x0D)
@@ -12184,7 +11114,6 @@
                 "LIon", 
                 "Hewlett-Packard"
             }, 
-
             Package (0x0D)
             {
                 0x01, 
@@ -12211,7 +11140,6 @@
                 0x0FA0, 
                 0x04B0
             }, 
-
             Package (0x04)
             {
                 0x00, 
@@ -12257,36 +11185,32 @@
                 Return (DerefOf (Index (NBTI, Arg0)))
             }
         }
-
         Name (NFBS, 0x01)
         Method (BTST, 1, Serialized)
         {
             Store (NFBS, Local1)
             If (NFBS)
             {
-                Store (0x00, NFBS) /* \_SB_.NFBS */
+                Store (0x00, NFBS)
             }
-
             Store (\_SB.PCI0.LPCB.EC0.BTST (Arg0, Local1), Local0)
             Return (DerefOf (Index (NBST, Arg0)))
         }
-
         Device (BAT0)
         {
-            Name (_HID, EisaId ("PNP0C0A") /* Control Method Battery */)  // _HID: Hardware ID
-            Name (_UID, 0x01)  // _UID: Unique ID
-            Method (_STA, 0, NotSerialized)  // _STA: Status
+            Name (_HID, EisaId ("PNP0C0A"))
+            Name (_UID, 0x01)
+            Method (_STA, 0, NotSerialized)
             {
                 Store (\_SB.PCI0.LPCB.EC0.BSTA (0x01), Local0)
                 If (XOr (BT0P, Local0))
                 {
-                    Store (Local0, BT0P) /* \_SB_.BT0P */
+                    Store (Local0, BT0P)
                     Store (Local0, Local1)
                     If (LNotEqual (Local1, 0x1F))
                     {
                         Store (0x00, Local1)
                     }
-
                     \_SB.SSMI (0xEA3A, 0x00, Local1, 0x00, 0x00)
                     Store (ECX, Local1)
                     \_GPE.HWWP (0x01)
@@ -12294,65 +11218,55 @@
                     {
                         \_SB.PCI0.LPCB.EC0.HWWP (Local1)
                     }
-
                     \_SB.WMID.WGWE (0x05, 0x00)
                 }
-
                 Return (Local0)
             }
-
-            Method (_BIF, 0, NotSerialized)  // _BIF: Battery Information
+            Method (_BIF, 0, NotSerialized)
             {
                 Return (BTIF (0x00))
             }
-
-            Method (_BST, 0, NotSerialized)  // _BST: Battery Status
+            Method (_BST, 0, NotSerialized)
             {
                 Return (BTST (0x00))
             }
-
-            Name (_PCL, Package (0x01)  // _PCL: Power Consumer List
+            Name (_PCL, Package (0x01)
             {
                 \_SB
             })
         }
-
         Device (BAT1)
         {
-            Name (_HID, EisaId ("PNP0C0A") /* Control Method Battery */)  // _HID: Hardware ID
-            Name (_UID, 0x02)  // _UID: Unique ID
-            Method (_STA, 0, NotSerialized)  // _STA: Status
+            Name (_HID, EisaId ("PNP0C0A"))
+            Name (_UID, 0x02)
+            Method (_STA, 0, NotSerialized)
             {
                 Return (0x00)
             }
-
-            Method (_BIF, 0, NotSerialized)  // _BIF: Battery Information
+            Method (_BIF, 0, NotSerialized)
             {
                 Return (BTIF (0x01))
             }
-
-            Method (_BST, 0, NotSerialized)  // _BST: Battery Status
+            Method (_BST, 0, NotSerialized)
             {
                 Return (BTST (0x01))
             }
-
-            Name (_PCL, Package (0x01)  // _PCL: Power Consumer List
+            Name (_PCL, Package (0x01)
             {
                 \_SB
             })
         }
-
         Device (AC)
         {
-            Name (_HID, "ACPI0003" /* Power Source Device */)  // _HID: Hardware ID
-            Name (_PCL, Package (0x01)  // _PCL: Power Consumer List
+            Name (_HID, "ACPI0003")
+            Name (_PCL, Package (0x01)
             {
                 \_SB
             })
-            Method (_PSR, 0, NotSerialized)  // _PSR: Power Source
+            Method (_PSR, 0, NotSerialized)
             {
                 Store (\_SB.PCI0.LPCB.EC0.GACS (), Local0)
-                Store (Local0, PWRS) /* \PWRS */
+                Store (Local0, PWRS)
                 Store (\_SB.PCI0.LPCB.EC0.GPID (), Local1)
                 If (XOr (Local0, ACST))
                 {
@@ -12361,39 +11275,34 @@
                     \_GPE.VPUP (Local0, Local1)
                     \_SB.PCI0.LPCB.EC0.SMCP (Local0)
                 }
-
                 If (LOr (LAnd (Local0, LNot (ACST)), LAnd (Local1, LNot (SMAR))))
                 {
                     \_SB.WMID.WGWE (0x03, 0x00)
                 }
-
-                Store (Local0, ACST) /* \_SB_.ACST */
-                Store (Local1, SMAR) /* \_SB_.SMAR */
+                Store (Local0, ACST)
+                Store (Local1, SMAR)
                 Return (Local0)
             }
         }
-
         Device (SLPB)
         {
-            Name (_HID, EisaId ("PNP0C0E") /* Sleep Button Device */)  // _HID: Hardware ID
+            Name (_HID, EisaId ("PNP0C0E"))
         }
-
         Device (LID)
         {
-            Name (_HID, EisaId ("PNP0C0D") /* Lid Device */)  // _HID: Hardware ID
-            Method (_LID, 0, NotSerialized)  // _LID: Lid Status
+            Name (_HID, EisaId ("PNP0C0D"))
+            Method (_LID, 0, NotSerialized)
             {
                 Store (\_SB.PCI0.LPCB.EC0.CLID, Local0)
                 Return (Local0)
             }
         }
-
         Device (HST1)
         {
-            Name (_HID, EisaId ("PNP0C32"))  // _HID: Hardware ID
-            Name (_UID, 0x01)  // _UID: Unique ID
+            Name (_HID, EisaId ("PNP0C32"))
+            Name (_UID, 0x01)
             Name (HS1S, 0xFF)
-            Method (_STA, 0, Serialized)  // _STA: Status
+            Method (_STA, 0, Serialized)
             {
                 If (LEqual (HS1S, 0xFF))
                 {
@@ -12405,48 +11314,42 @@
                             Store (0x0F, Local0)
                         }
                     }
-
-                    Store (Local0, HS1S) /* \_SB_.HST1.HS1S */
+                    Store (Local0, HS1S)
                 }
-
-                Return (HS1S) /* \_SB_.HST1.HS1S */
+                Return (HS1S)
             }
-
-            Name (_PRW, Package (0x02)  // _PRW: Power Resources for Wake
+            Name (_PRW, Package (0x02)
             {
                 0x0A, 
                 0x05
             })
-            Method (_PSW, 1, NotSerialized)  // _PSW: Power State Wake
+            Method (_PSW, 1, NotSerialized)
             {
                 \_SB.PCI0.LPCB.EC0.HSPW (Arg0, 0x01)
             }
-
             Method (GHID, 0, Serialized)
             {
                 If (_STA ())
                 {
                     If (\_SB.PCI0.LPCB.EC0.CHSW (0x01))
                     {
-                        Notify (\_SB.HST1, 0x02) // Device Wake
+                        Notify (\_SB.HST1, 0x02)
                     }
                 }
-
                 Return (Buffer (0x01)
                 {
-                     0x01                                             /* . */
+                     0x01
                 })
             }
         }
-
         Name (WSIP, Buffer (0x09)
         {
-            /* 0000 */  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,  /* ........ */
-            /* 0008 */  0xFF                                             /* . */
+            /* 0000 */   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
+            /* 0008 */   0xFF
         })
         Name (SUIP, Buffer (0x03)
         {
-             0xFF, 0xFF, 0xFF                                 /* ... */
+             0xFF, 0xFF, 0xFF
         })
         Name (BSOL, Package (0x02)
         {
@@ -12482,7 +11385,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1D)
             {
                 "UEFI Boot Order", 
@@ -12523,49 +11425,41 @@
                 0x01, 
                 " Notebook Upgrade Bay "
             }, 
-
             Package (0x02)
             {
                 0x02, 
                 " Notebook Hard Drive "
             }, 
-
             Package (0x02)
             {
                 0x03, 
                 " USB Floppy "
             }, 
-
             Package (0x02)
             {
                 0x05, 
                 " USB CD-ROM "
             }, 
-
             Package (0x02)
             {
                 0x06, 
                 " USB Hard Drive "
             }, 
-
             Package (0x02)
             {
                 0x07, 
                 " Notebook Ethernet "
             }, 
-
             Package (0x02)
             {
                 0x08, 
                 " SD Card "
             }, 
-
             Package (0x02)
             {
                 0x0A, 
                 " Dock Upgrade Bay "
             }, 
-
             Package (0x02)
             {
                 0x0B, 
@@ -12579,13 +11473,11 @@
                 0x01, 
                 " Notebook Upgrade Bay (UEFI)"
             }, 
-
             Package (0x02)
             {
                 0x02, 
                 " OS Boot Manager"
             }, 
-
             Package (0x02)
             {
                 0x03, 
@@ -12612,20 +11504,20 @@
         })
         Name (FLAG, Buffer (0x01)
         {
-             0x05                                             /* . */
+             0x05
         })
         Name (PCHG, Buffer (0x01)
         {
-             0x00                                             /* . */
+             0x00
         })
         Name (WTB1, Buffer (0xCE) {})
         Name (DVAL, Buffer (0x01)
         {
-             0x00                                             /* . */
+             0x00
         })
         Name (VFSZ, Buffer (0x01)
         {
-             0x00                                             /* . */
+             0x00
         })
         Name (PCBF, Buffer (0x0190) {})
         Name (WSPS, Buffer (0x3F) {})
@@ -12639,19 +11531,19 @@
         Name (WBOR, Buffer (0x09) {})
         Name (BOID, Buffer (0x64)
         {
-            /* 0000 */  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,  /* ........ */
-            /* 0008 */  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,  /* ........ */
-            /* 0010 */  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,  /* ........ */
-            /* 0018 */  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,  /* ........ */
-            /* 0020 */  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,  /* ........ */
-            /* 0028 */  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,  /* ........ */
-            /* 0030 */  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,  /* ........ */
-            /* 0038 */  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,  /* ........ */
-            /* 0040 */  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,  /* ........ */
-            /* 0048 */  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,  /* ........ */
-            /* 0050 */  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,  /* ........ */
-            /* 0058 */  0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,  /* ........ */
-            /* 0060 */  0xFF, 0xFF, 0xFF, 0xFF                           /* .... */
+            /* 0000 */   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
+            /* 0008 */   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
+            /* 0010 */   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
+            /* 0018 */   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
+            /* 0020 */   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
+            /* 0028 */   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
+            /* 0030 */   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
+            /* 0038 */   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
+            /* 0040 */   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
+            /* 0048 */   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
+            /* 0050 */   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
+            /* 0058 */   0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF,
+            /* 0060 */   0xFF, 0xFF, 0xFF, 0xFF
         })
         Name (TEMP, Buffer (0x32) {})
         Name (ST01, Buffer (0x64) {})
@@ -12784,7 +11676,7 @@
         })
         Name (MPMI, Buffer (0x01)
         {
-             0x01                                             /* . */
+             0x01
         })
         Name (BISE, Package (0xCE)
         {
@@ -12817,7 +11709,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "Parallel port", 
@@ -12847,7 +11738,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "CD-ROM boot", 
@@ -12877,7 +11767,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "Floppy boot", 
@@ -12907,7 +11796,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "USB legacy support", 
@@ -12937,7 +11825,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "PXE Internal NIC boot", 
@@ -12967,7 +11854,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "Fn Key switch", 
@@ -12997,7 +11883,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "Fan Always on while on AC Power", 
@@ -13027,7 +11912,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "Flash media reader", 
@@ -13057,7 +11941,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "Startup Menu Delay (Sec.)", 
@@ -13087,7 +11970,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "Parallel port mode", 
@@ -13117,7 +11999,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "Multiboot Express Popup Delay(Sec)", 
@@ -13147,7 +12028,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "LAN/WLAN Switching", 
@@ -13177,7 +12057,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "Embedded Bluetooth Device", 
@@ -13207,7 +12086,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "Embedded WLAN Device", 
@@ -13237,7 +12115,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "Embedded WWAN Device", 
@@ -13267,7 +12144,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "LAN Power Saving", 
@@ -13297,7 +12173,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "Power-On Authentication Support", 
@@ -13327,7 +12202,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "Data Execution Prevention", 
@@ -13357,7 +12231,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "SATA Device Mode", 
@@ -13387,7 +12260,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "USB Port", 
@@ -13417,7 +12289,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "1394 Port", 
@@ -13447,7 +12318,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "Express Card Slot", 
@@ -13477,7 +12347,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "Multi Core CPU", 
@@ -13507,7 +12376,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "Wake on LAN", 
@@ -13537,7 +12405,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "Ambient Light Sensor", 
@@ -13567,7 +12434,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "Secondary Battery Fast Charge", 
@@ -13597,7 +12463,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "Embedded Security Device Availability", 
@@ -13627,7 +12492,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "Activate Embedded Security On Next Boot", 
@@ -13657,7 +12521,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "Embedded Security Activation Policy", 
@@ -13687,7 +12550,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "Fingerprint Device", 
@@ -13717,7 +12579,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "Notebook Upgrade Bay", 
@@ -13747,7 +12608,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "Network Interface Controller (LAN)", 
@@ -13777,7 +12637,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "OS Management of TPM", 
@@ -13807,7 +12666,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "Reset of TPM from OS", 
@@ -13837,7 +12695,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "Virtualization Technology", 
@@ -13867,7 +12724,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "Terminal Emulation Mode", 
@@ -13897,7 +12753,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "Firmware Verbosity", 
@@ -13927,7 +12782,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "Firmware Progress Event Support", 
@@ -13957,7 +12811,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "Unconfigure AMT on next boot", 
@@ -13987,7 +12840,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "Integrated Camera", 
@@ -14017,7 +12869,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "Custom Logo", 
@@ -14047,7 +12898,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "SD Card boot", 
@@ -14077,7 +12927,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "HP QuickLook", 
@@ -14107,7 +12956,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "Wireless Button State", 
@@ -14137,7 +12985,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "Modem Device", 
@@ -14167,7 +13014,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "At least one symbol required", 
@@ -14197,7 +13043,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "At least one number required", 
@@ -14227,7 +13072,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "At least one upper case character required", 
@@ -14257,7 +13101,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "At least one lower case character required", 
@@ -14287,7 +13130,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "Are spaces allowed in password", 
@@ -14317,7 +13159,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "Fingerprint Reset on Reboot (If Present)", 
@@ -14347,7 +13188,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "HP SpareKey", 
@@ -14377,7 +13217,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "TXT Technology", 
@@ -14407,7 +13246,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "Display Diagnostic URL", 
@@ -14437,7 +13275,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "Smart Card", 
@@ -14467,7 +13304,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "Always Prompt for HP SpareKey Enrollment", 
@@ -14497,7 +13333,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "USB Key Provisioning Support", 
@@ -14527,7 +13362,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "AMT Setup Prompt(Ctrl-P)", 
@@ -14557,7 +13391,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "Bypass Power-on password on restart", 
@@ -14587,7 +13420,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "Microphone", 
@@ -14617,7 +13449,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "Language", 
@@ -14647,7 +13478,6 @@
                 "Portugues", 
                 "Svenska"
             }, 
-
             Package (0x1A)
             {
                 "NumLock on at boot", 
@@ -14677,7 +13507,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "Preboot authentication on HP QuickLook Boot", 
@@ -14707,7 +13536,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "HP QuickWeb", 
@@ -14737,7 +13565,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "HP QuickWeb: Write Protect", 
@@ -14767,7 +13594,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "Initiate Intel CIRA", 
@@ -14797,7 +13623,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "Intel (R) Anti-Theft", 
@@ -14827,7 +13652,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "Power Monitor Circuit", 
@@ -14857,7 +13681,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "Reset Authentication Credential", 
@@ -14887,7 +13710,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "Speakers and Headphones", 
@@ -14917,7 +13739,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "Audio Device", 
@@ -14947,7 +13768,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "Ctrl I Prompt", 
@@ -14977,7 +13797,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "eSATA", 
@@ -15007,7 +13826,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "Wake on USB", 
@@ -15037,7 +13855,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "Intel (R) HT Technology", 
@@ -15067,7 +13884,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "UEFI Boot Mode", 
@@ -15097,7 +13913,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "HP DayStarter", 
@@ -15127,7 +13942,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "Backlit Keyboard Timeout", 
@@ -15157,7 +13971,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "Sunday", 
@@ -15187,7 +14000,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "Monday", 
@@ -15217,7 +14029,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "Tuesday", 
@@ -15247,7 +14058,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "Wednesday", 
@@ -15277,7 +14087,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "Thursday", 
@@ -15307,7 +14116,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "Friday", 
@@ -15337,7 +14145,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "Saturday", 
@@ -15367,7 +14174,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "USB device boot", 
@@ -15397,7 +14203,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "Upgrade Bay Hard Drive boot", 
@@ -15427,7 +14232,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "Audio alerts during boot", 
@@ -15457,7 +14261,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "Fast Boot", 
@@ -15487,7 +14290,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "DriveLock password on restart", 
@@ -15517,7 +14319,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "Virtualization Technology for Directed I/O", 
@@ -15547,7 +14348,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "Custom Help and URL message", 
@@ -15577,7 +14377,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "USB Charging Port", 
@@ -15607,7 +14406,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "Disable charging port in all sleep/off states below(%):", 
@@ -15637,7 +14435,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "System Management Command", 
@@ -15667,7 +14464,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "CFAST", 
@@ -15697,7 +14493,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "Manufacturing Programming Mode", 
@@ -15727,7 +14522,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "eSATA boot", 
@@ -15757,7 +14551,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "Express Card Link Speed", 
@@ -15787,7 +14580,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "TPM Reset to Factory Defaults", 
@@ -15817,7 +14609,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "Embedded GPS Device", 
@@ -15847,7 +14638,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "Switchable Graphics", 
@@ -15877,7 +14667,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "Restore Defaults", 
@@ -15907,7 +14696,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "Reset BIOS security to factory default", 
@@ -15937,7 +14725,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "Power Control", 
@@ -15967,7 +14754,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "Power-On when AC is detected", 
@@ -15997,7 +14783,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "Require acknowledgment of battery errors", 
@@ -16027,7 +14812,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 " ", 
@@ -16057,7 +14841,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "Bypass Power-on password on ALL restarts", 
@@ -16087,7 +14870,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "Serial port Security Level", 
@@ -16117,7 +14899,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "Parallel port Security Level", 
@@ -16147,7 +14928,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "CD-ROM boot Security Level", 
@@ -16177,7 +14957,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "Floppy boot Security Level", 
@@ -16207,7 +14986,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "PXE Internal NIC boot Security Level", 
@@ -16237,7 +15015,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "Fn Key Switch Security Level", 
@@ -16267,7 +15044,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "USB legacy support Security Level", 
@@ -16297,7 +15073,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "Fan Always on while on AC Power Security Level", 
@@ -16327,7 +15102,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "Flash media reader Security Level", 
@@ -16357,7 +15131,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "Startup Menu Delay (Sec.) Security Level", 
@@ -16387,7 +15160,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "Parallel port mode Security Level", 
@@ -16417,7 +15189,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "Multiboot Express Popup Delay(Sec) Security Level", 
@@ -16447,7 +15218,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "LAN/WLAN Switching Security Level", 
@@ -16477,7 +15247,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "Embedded Bluetooth Device Security Level", 
@@ -16507,7 +15276,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "Embedded WLAN Device Security Level", 
@@ -16537,7 +15305,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "Embedded WWAN Device Security Level", 
@@ -16567,7 +15334,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "LAN Power Saving Security Level", 
@@ -16597,7 +15363,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "Power-On Authentication Support Security Level", 
@@ -16627,7 +15392,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "Data Execution Prevention Security Level", 
@@ -16657,7 +15421,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "SATA Device Mode Security Level", 
@@ -16687,7 +15450,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "USB Port Security Level", 
@@ -16717,7 +15479,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "1394 Port Security Level", 
@@ -16747,7 +15508,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "Express Card Slot Security Level", 
@@ -16777,7 +15537,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "Multi Core CPU Security Level", 
@@ -16807,7 +15566,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "Wake on LAN Security Level", 
@@ -16837,7 +15595,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "Ambient Light Sensor Security Level", 
@@ -16867,7 +15624,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "Secondary Battery Fast Charge Security Level", 
@@ -16897,7 +15653,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "Embedded Security Device Availability Security Level", 
@@ -16927,7 +15682,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "Activate Embedded Security On Next Boot Security Level", 
@@ -16957,7 +15711,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "Embedded Security Activation Policy Security Level", 
@@ -16987,7 +15740,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "Fingerprint Device Security Level", 
@@ -17017,7 +15769,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "Notebook Upgrade Bay Security Level", 
@@ -17047,7 +15798,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "Network Interface Controller (LAN) Security Level", 
@@ -17077,7 +15827,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "OS Management of TPM Security Level", 
@@ -17107,7 +15856,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "Reset of TPM from OS Security Level", 
@@ -17137,7 +15885,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "Virtualization Technology Security Level", 
@@ -17167,7 +15914,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "Terminal Emulation Mode Security Level", 
@@ -17197,7 +15943,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "Firmware Verbosity Security Level", 
@@ -17227,7 +15972,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "Firmware Progress Event Support Security Level", 
@@ -17257,7 +16001,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "Unconfigure AMT on next boot Security Level", 
@@ -17287,7 +16030,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "Integrated Camera Security Level", 
@@ -17317,7 +16059,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "Notebook Asset Tag Security Level", 
@@ -17347,7 +16088,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "Notebook Ownership Tag Security Level", 
@@ -17377,7 +16117,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "Legacy Boot Order Security Level", 
@@ -17407,7 +16146,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "Custom Logo Security Level", 
@@ -17437,7 +16175,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "SD Card boot Security Level", 
@@ -17467,7 +16204,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "HP QuickLook Security Level", 
@@ -17497,7 +16233,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "Wireless Button State Security Level", 
@@ -17527,7 +16262,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "Modem Device Security Level", 
@@ -17557,7 +16291,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "Finger Print reset Security Level", 
@@ -17587,7 +16320,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "HP SpareKey Security Level", 
@@ -17617,7 +16349,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "TXT Technology Security Level", 
@@ -17647,7 +16378,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "Display Diagnostic URL Security Level", 
@@ -17677,7 +16407,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "Smart Card Security Level", 
@@ -17707,7 +16436,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "USB Key Provisioning Support Security Level", 
@@ -17737,7 +16465,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "AMT Setup Prompt(Ctrl-P) Security Level", 
@@ -17767,7 +16494,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "Microphone Security Level", 
@@ -17797,7 +16523,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "Disk Sanitizer Security Level", 
@@ -17827,7 +16552,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "UEFI Boot Mode Security Level", 
@@ -17857,7 +16581,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "NumLock on at boot Security Level", 
@@ -17887,7 +16610,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "Preboot authentication on HP QuickLook Boot Security Level", 
@@ -17917,7 +16639,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "HP QuickWeb Security Level", 
@@ -17947,7 +16668,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "Initiate Intel CIRA Security Level", 
@@ -17977,7 +16697,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "Intel (R) Anti-Theft Security Level", 
@@ -18007,7 +16726,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "Power Monitor Circuit Security Level", 
@@ -18037,7 +16755,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "Speakers and Headphones Security Level", 
@@ -18067,7 +16784,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "Audio Device Security Level", 
@@ -18097,7 +16813,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "eSATA Security Level", 
@@ -18127,7 +16842,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "Wake on USB Security Level", 
@@ -18157,7 +16871,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "Intel (R) HT Technology Security Level", 
@@ -18187,7 +16900,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "UEFI Boot Order Security Level", 
@@ -18217,7 +16929,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "Set DriveLock Password Security Level", 
@@ -18247,7 +16958,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 " ", 
@@ -18277,7 +16987,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "Backlit Keyboard Timeout Security Level", 
@@ -18307,7 +17016,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "HP DayStarter Security Level", 
@@ -18337,7 +17045,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "BIOS Power-on Security Level", 
@@ -18367,7 +17074,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "USB device boot Security Level", 
@@ -18397,7 +17103,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "Upgrade Bay Hard Drive boot Security Level", 
@@ -18427,7 +17132,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "Fast Boot Security Level", 
@@ -18457,7 +17161,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "DriveLock password on restart Security Level", 
@@ -18487,7 +17190,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "Virtualization Technology for Directed I/O Security Level", 
@@ -18517,7 +17219,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "Set All Security Levels", 
@@ -18547,7 +17248,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "Custom Help and URL message Security Level", 
@@ -18577,7 +17277,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "USB Charging Port Security Level", 
@@ -18607,7 +17306,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "System Management Command Security Level", 
@@ -18637,7 +17335,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "CFAST Security Level", 
@@ -18667,7 +17364,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "eSATA boot Security Level", 
@@ -18697,7 +17393,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "TPM Embedded Security Security Level", 
@@ -18727,7 +17422,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "Express Card Link Speed Security Level", 
@@ -18757,7 +17451,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "Embedded GPS Device Security Level", 
@@ -18787,7 +17480,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "Switchable Graphics Security Level", 
@@ -18817,7 +17509,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "Secure Erase Security Level", 
@@ -18847,7 +17538,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "Power Control Security Level", 
@@ -18877,7 +17567,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "Power-On when AC is detected Security Level", 
@@ -18907,7 +17596,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 "Require acknowledgment of battery errors Security Level", 
@@ -18937,7 +17625,6 @@
                 " ", 
                 " "
             }, 
-
             Package (0x1A)
             {
                 " ", 
@@ -18991,7 +17678,6 @@
                 0x00, 
                 0x00
             }, 
-
             Package (0x12)
             {
                 "Notebook hard drive drivelock master password", 
@@ -19013,7 +17699,6 @@
                 0x00, 
                 0x00
             }, 
-
             Package (0x12)
             {
                 "Notebook hard drive drivelock user password", 
@@ -19035,7 +17720,6 @@
                 0x00, 
                 0x00
             }, 
-
             Package (0x12)
             {
                 "Upgrade bay hard drive drivelock master password", 
@@ -19057,7 +17741,6 @@
                 0x00, 
                 0x00
             }, 
-
             Package (0x12)
             {
                 "Upgrade bay hard drive drivelock user password", 
@@ -19100,7 +17783,6 @@
                 0x20, 
                 0x04
             }, 
-
             Package (0x0F)
             {
                 "Manufacturing Programming Mode Counter", 
@@ -19139,7 +17821,6 @@
                 0x00, 
                 0x12
             }, 
-
             Package (0x0E)
             {
                 "Notebook Ownership Tag", 
@@ -19157,7 +17838,6 @@
                 0x00, 
                 0x50
             }, 
-
             Package (0x0E)
             {
                 " ", 
@@ -19175,7 +17855,6 @@
                 0x00, 
                 0xA0
             }, 
-
             Package (0x0E)
             {
                 "Set Alarm Time", 
@@ -19193,7 +17872,6 @@
                 0x00, 
                 0x05
             }, 
-
             Package (0x0E)
             {
                 "PCID", 
@@ -19211,7 +17889,6 @@
                 0x00, 
                 0x40
             }, 
-
             Package (0x0E)
             {
                 "Define Custom URL", 
@@ -19229,7 +17906,6 @@
                 0x00, 
                 0x82
             }, 
-
             Package (0x0E)
             {
                 "PCID Version", 
@@ -19247,7 +17923,6 @@
                 0x00, 
                 0x05
             }, 
-
             Package (0x0E)
             {
                 "Manufacturer", 
@@ -19265,7 +17940,6 @@
                 0x00, 
                 0x12
             }, 
-
             Package (0x0E)
             {
                 "Notebook Model", 
@@ -19283,7 +17957,6 @@
                 0x00, 
                 0x20
             }, 
-
             Package (0x0E)
             {
                 "Processor Type", 
@@ -19301,7 +17974,6 @@
                 0x00, 
                 0x12
             }, 
-
             Package (0x0E)
             {
                 "Processor Speed", 
@@ -19319,7 +17991,6 @@
                 0x00, 
                 0x0A
             }, 
-
             Package (0x0E)
             {
                 "Total Memory Size", 
@@ -19337,7 +18008,6 @@
                 0x00, 
                 0x12
             }, 
-
             Package (0x0E)
             {
                 "BIOS Date", 
@@ -19355,7 +18025,6 @@
                 0x00, 
                 0x12
             }, 
-
             Package (0x0E)
             {
                 "BIOS Version", 
@@ -19373,7 +18042,6 @@
                 0x00, 
                 0x12
             }, 
-
             Package (0x0E)
             {
                 "Serial Number", 
@@ -19391,7 +18059,6 @@
                 0x00, 
                 0x12
             }, 
-
             Package (0x0E)
             {
                 "Video BIOS Revision", 
@@ -19409,7 +18076,6 @@
                 0x00, 
                 0x12
             }, 
-
             Package (0x0E)
             {
                 "Video BIOS Revision 2", 
@@ -19427,7 +18093,6 @@
                 0x00, 
                 0x12
             }, 
-
             Package (0x0E)
             {
                 "Keyboard Controller Version", 
@@ -19445,7 +18110,6 @@
                 0x00, 
                 0x12
             }, 
-
             Package (0x0E)
             {
                 "Hard Disk Serial Number", 
@@ -19463,7 +18127,6 @@
                 0x00, 
                 0x14
             }, 
-
             Package (0x0E)
             {
                 "Hard Disk Make and Model", 
@@ -19481,7 +18144,6 @@
                 0x00, 
                 0x28
             }, 
-
             Package (0x0E)
             {
                 "Completion Date", 
@@ -19499,7 +18161,6 @@
                 0x00, 
                 0x11
             }, 
-
             Package (0x0E)
             {
                 "Completion Status", 
@@ -19517,7 +18178,6 @@
                 0x00, 
                 0x16
             }, 
-
             Package (0x0E)
             {
                 "Write Cycles Completed", 
@@ -19535,7 +18195,6 @@
                 0x00, 
                 0x01
             }, 
-
             Package (0x0E)
             {
                 "Warranty Start Date", 
@@ -19553,7 +18212,6 @@
                 0x00, 
                 0x0A
             }, 
-
             Package (0x0E)
             {
                 "Product Number", 
@@ -19571,7 +18229,6 @@
                 0x00, 
                 0x10
             }, 
-
             Package (0x0E)
             {
                 "System Board ID", 
@@ -19589,7 +18246,6 @@
                 0x00, 
                 0x04
             }, 
-
             Package (0x0E)
             {
                 "Primary Battery Serial Number", 
@@ -19607,7 +18263,6 @@
                 0x00, 
                 0x12
             }, 
-
             Package (0x0E)
             {
                 "Secondary Battery Serial Number", 
@@ -19625,7 +18280,6 @@
                 0x00, 
                 0x12
             }, 
-
             Package (0x0E)
             {
                 "Bluetooth FCC ID", 
@@ -19643,7 +18297,6 @@
                 0x00, 
                 0x14
             }, 
-
             Package (0x0E)
             {
                 "WLAN FCC ID", 
@@ -19661,7 +18314,6 @@
                 0x00, 
                 0x14
             }, 
-
             Package (0x0E)
             {
                 "WWAN FCC ID", 
@@ -19679,7 +18331,6 @@
                 0x00, 
                 0x14
             }, 
-
             Package (0x0E)
             {
                 "GPS FCC ID", 
@@ -19697,7 +18348,6 @@
                 0x00, 
                 0x14
             }, 
-
             Package (0x0E)
             {
                 "Universal Unique Identifier(UUID)", 
@@ -19715,7 +18365,6 @@
                 0x00, 
                 0x20
             }, 
-
             Package (0x0E)
             {
                 "System Configuration ID", 
@@ -19733,7 +18382,6 @@
                 0x00, 
                 0x1A
             }, 
-
             Package (0x0E)
             {
                 "System Board CT", 
@@ -19751,7 +18399,6 @@
                 0x00, 
                 0x0F
             }, 
-
             Package (0x0E)
             {
                 "MicroCode Revision", 
@@ -19769,7 +18416,6 @@
                 0x00, 
                 0x0F
             }, 
-
             Package (0x0E)
             {
                 "Disk Sanitation Method", 
@@ -19787,7 +18433,6 @@
                 0x00, 
                 0x1A
             }, 
-
             Package (0x0E)
             {
                 "Memory Slot 1 Information", 
@@ -19805,7 +18450,6 @@
                 0x00, 
                 0x50
             }, 
-
             Package (0x0E)
             {
                 "Memory Slot 2 Information", 
@@ -19823,7 +18467,6 @@
                 0x00, 
                 0x50
             }, 
-
             Package (0x0E)
             {
                 "Memory Slot 3 Information", 
@@ -19841,7 +18484,6 @@
                 0x00, 
                 0x50
             }, 
-
             Package (0x0E)
             {
                 "Memory Slot 4 Information", 
@@ -20563,7 +19205,6 @@
                 0x00, 
                 0x00
             }, 
-
             Package (0x13)
             {
                 " ", 
@@ -20586,7 +19227,6 @@
                 0x00, 
                 0x00
             }, 
-
             Package (0x13)
             {
                 " ", 
@@ -20746,321 +19386,280 @@
                 {
                     Store (0x00, Local0)
                 }
-
                 If (LEqual (Arg0, 0x02))
                 {
                     Store (0x04, Local0)
                 }
-
                 If (LEqual (Arg0, 0x03))
                 {
                     Store (0x80, Local0)
                 }
-
                 If (LEqual (Arg0, 0x04))
                 {
                     Store (0x0400, Local0)
                 }
-
                 If (LEqual (Arg0, 0x05))
                 {
                     Store (0x1000, Local0)
                 }
-
                 Store (Local0, Debug)
                 Store (Buffer (Add (0x08, Local0)) {}, Local1)
                 CreateDWordField (Local1, 0x00, SNOU)
                 CreateDWordField (Local1, 0x04, RTCD)
-                Store (0x4C494146, SNOU) /* \_SB_.WMID.WHCM.SNOU */
+                Store (0x4C494146, SNOU)
                 Store (DASI, Local5)
                 If (LGreater (DASI, 0x2000))
                 {
-                    Store (0x05, RTCD) /* \_SB_.WMID.WHCM.RTCD */
+                    Store (0x05, RTCD)
                     Return (Local1)
                 }
-
                 Store (DASI, Local5)
                 CreateField (Arg1, 0x00, Multiply (Add (Local5, 0x10), 0x08), 
                     DAIN)
-                Store (DAIN, ASMB) /* \ASMB */
-                Store (0x02, RTCD) /* \_SB_.WMID.WHCM.RTCD */
+                Store (DAIN, ASMB)
+                Store (0x02, RTCD)
                 Store (SNIN, Debug)
                 If (LEqual (SNIN, 0x55434553))
                 {
                     Store ("SECU Ready", Debug)
-                    Store (0x03, RTCD) /* \_SB_.WMID.WHCM.RTCD */
+                    Store (0x03, RTCD)
                     Store ("CommandType", Debug)
                     Store (CMTP, Debug)
                     If (LEqual (COMD, 0x01))
                     {
                         Store ("Read BIOS", Debug)
-                        Store (0x04, RTCD) /* \_SB_.WMID.WHCM.RTCD */
+                        Store (0x04, RTCD)
                         If (LEqual (CMTP, 0x01))
                         {
                             Store (^WGDD (), Local2)
-                            Store (0x00, RTCD) /* \_SB_.WMID.WHCM.RTCD */
+                            Store (0x00, RTCD)
                         }
-
                         If (LEqual (CMTP, 0x02))
                         {
                             Store (^WGHP (), Local2)
-                            Store (0x00, RTCD) /* \_SB_.WMID.WHCM.RTCD */
+                            Store (0x00, RTCD)
                         }
-
                         If (LEqual (CMTP, 0x03))
                         {
                             Store (^WALS (), Local2)
-                            Store (0x00, RTCD) /* \_SB_.WMID.WHCM.RTCD */
+                            Store (0x00, RTCD)
                         }
-
                         If (LEqual (CMTP, 0x04))
                         {
                             Store (^WGDS (), Local2)
-                            Store (0x00, RTCD) /* \_SB_.WMID.WHCM.RTCD */
+                            Store (0x00, RTCD)
                         }
-
                         If (LEqual (CMTP, 0x07))
                         {
                             If (DASI)
                             {
                                 Store (DerefOf (Index (Arg1, 0x10)), Local3)
                                 Store (WGBI (Local3), Local2)
-                                Store (0x00, RTCD) /* \_SB_.WMID.WHCM.RTCD */
+                                Store (0x00, RTCD)
                             }
                             Else
                             {
-                                Store (0x05, RTCD) /* \_SB_.WMID.WHCM.RTCD */
+                                Store (0x05, RTCD)
                             }
                         }
-
                         If (LEqual (CMTP, 0x08))
                         {
                             Store ("Bezel button table", Debug)
                             Store (^WGBN (), Local2)
-                            Store (0x00, RTCD) /* \_SB_.WMID.WHCM.RTCD */
+                            Store (0x00, RTCD)
                         }
-
                         If (LEqual (CMTP, 0x0D))
                         {
                             Store ("Feature Report", Debug)
                             Store (^GFRT (), Local2)
-                            Store (0x00, RTCD) /* \_SB_.WMID.WHCM.RTCD */
+                            Store (0x00, RTCD)
                         }
-
                         If (LEqual (CMTP, 0x09))
                         {
                             Store ("Hotkey Scancode", Debug)
                             Store (^GHKS (), Local2)
-                            Store (0x00, RTCD) /* \_SB_.WMID.WHCM.RTCD */
+                            Store (0x00, RTCD)
                         }
-
                         If (LEqual (CMTP, 0x0A))
                         {
                             Store ("Hotkey Function", Debug)
                             Store (^GHKF (), Local2)
-                            Store (0x00, RTCD) /* \_SB_.WMID.WHCM.RTCD */
+                            Store (0x00, RTCD)
                         }
-
                         If (LEqual (CMTP, 0x0C))
                         {
                             Store ("Bezel button", Debug)
                             Store (^WGBV (), Local2)
                             Store (Local2, Debug)
-                            Store (0x00, RTCD) /* \_SB_.WMID.WHCM.RTCD */
+                            Store (0x00, RTCD)
                         }
-
                         If (LEqual (CMTP, 0x0F))
                         {
                             Store (^GSAS (), Local2)
-                            Store (0x00, RTCD) /* \_SB_.WMID.WHCM.RTCD */
+                            Store (0x00, RTCD)
                         }
-
                         If (LEqual (CMTP, 0x10))
                         {
                             Store (^GSRV (), Local2)
-                            Store (0x00, RTCD) /* \_SB_.WMID.WHCM.RTCD */
+                            Store (0x00, RTCD)
                         }
-
                         If (LEqual (CMTP, 0x11))
                         {
                             Store (^GVPR (), Local2)
-                            Store (0x00, RTCD) /* \_SB_.WMID.WHCM.RTCD */
+                            Store (0x00, RTCD)
                         }
-
                         If (LEqual (CMTP, 0x12))
                         {
                             Store (^GBRS (), Local2)
-                            Store (0x00, RTCD) /* \_SB_.WMID.WHCM.RTCD */
+                            Store (0x00, RTCD)
                         }
-
                         If (LEqual (CMTP, 0x14))
                         {
                             Store (^GWPT (), Local2)
-                            Store (0x00, RTCD) /* \_SB_.WMID.WHCM.RTCD */
+                            Store (0x00, RTCD)
                         }
-
                         If (LEqual (CMTP, 0x18))
                         {
                             Store ("Get system configuration", Debug)
                             Store (^GDBT (), Local2)
-                            Store (0x00, RTCD) /* \_SB_.WMID.WHCM.RTCD */
+                            Store (0x00, RTCD)
                         }
-
                         If (LEqual (CMTP, 0x1B))
                         {
                             Store (^WGWS (), Local2)
-                            Store (0x00, RTCD) /* \_SB_.WMID.WHCM.RTCD */
+                            Store (0x00, RTCD)
                         }
-
                         If (LEqual (CMTP, 0x1C))
                         {
                             Store (^GPMC (0x00), Local2)
-                            Store (0x00, RTCD) /* \_SB_.WMID.WHCM.RTCD */
+                            Store (0x00, RTCD)
                         }
-
                         If (LEqual (CMTP, 0x1D))
                         {
                             Store ("Get Diags mode", Debug)
                             Store (^GDMD (), Local2)
-                            Store (0x00, RTCD) /* \_SB_.WMID.WHCM.RTCD */
+                            Store (0x00, RTCD)
                         }
-
                         If (LEqual (CMTP, 0x1E))
                         {
                             Store ("Get BIOS Update status", Debug)
                             Store (^GBUS (), Local2)
-                            Store (0x00, RTCD) /* \_SB_.WMID.WHCM.RTCD */
+                            Store (0x00, RTCD)
                         }
-
                         If (LEqual (CMTP, 0x28))
                         {
                             Store ("Get thermal status", Debug)
                             If (LNotEqual (DASI, 0x04))
                             {
-                                Store (0x05, RTCD) /* \_SB_.WMID.WHCM.RTCD */
+                                Store (0x05, RTCD)
                             }
                             Else
                             {
                                 CreateField (Arg1, 0x80, Multiply (DASI, 0x08), GTSD)
                                 Store (^GTMS (GTSD), Local2)
-                                Store (0x00, RTCD) /* \_SB_.WMID.WHCM.RTCD */
+                                Store (0x00, RTCD)
                             }
                         }
-
                         If (LEqual (CMTP, 0x2B))
                         {
                             Store ("Get Battery control", Debug)
                             Store (^WGBC (), Local2)
-                            Store (0x00, RTCD) /* \_SB_.WMID.WHCM.RTCD */
+                            Store (0x00, RTCD)
                         }
-
                         If (LEqual (CMTP, 0x20))
                         {
                             Store (^GBTT (), Local2)
-                            Store (0x00, RTCD) /* \_SB_.WMID.WHCM.RTCD */
+                            Store (0x00, RTCD)
                         }
-
                         If (LEqual (CMTP, 0x21))
                         {
                             If (LLess (DASI, DerefOf (Index (WCDS, Subtract (CMTP, 0x01)
                                 ))))
                             {
-                                Store (0x05, RTCD) /* \_SB_.WMID.WHCM.RTCD */
+                                Store (0x05, RTCD)
                             }
                             Else
                             {
                                 If (LGreaterEqual (\WCOS (), 0x06))
                                 {
-                                    Store (0x04, RTCD) /* \_SB_.WMID.WHCM.RTCD */
+                                    Store (0x04, RTCD)
                                 }
                                 Else
                                 {
                                     CreateDWordField (Arg1, 0x10, BTYP)
                                     Store (^GBTL (BTYP), Local2)
-                                    Store (0x00, RTCD) /* \_SB_.WMID.WHCM.RTCD */
+                                    Store (0x00, RTCD)
                                 }
                             }
                         }
-
                         If (LEqual (CMTP, 0x22))
                         {
                             Store ("Quick Button Policy", Debug)
                             Store (^GQBP (), Local2)
-                            Store (0x00, RTCD) /* \_SB_.WMID.WHCM.RTCD */
+                            Store (0x00, RTCD)
                         }
-
                         If (LEqual (CMTP, 0x23))
                         {
                             Store (^GPIN (), Local2)
-                            Store (0x00, RTCD) /* \_SB_.WMID.WHCM.RTCD */
+                            Store (0x00, RTCD)
                         }
-
                         If (LEqual (CMTP, 0x25))
                         {
                             Store (^GPMC (0x01), Local2)
-                            Store (0x00, RTCD) /* \_SB_.WMID.WHCM.RTCD */
+                            Store (0x00, RTCD)
                         }
-
                         If (LEqual (CMTP, 0x29))
                         {
                             Store (^GFCC (), Local2)
-                            Store (0x00, RTCD) /* \_SB_.WMID.WHCM.RTCD */
+                            Store (0x00, RTCD)
                         }
-
                         If (LEqual (CMTP, 0x2A))
                         {
                             Store (^GPES (), Local2)
-                            Store (0x00, RTCD) /* \_SB_.WMID.WHCM.RTCD */
+                            Store (0x00, RTCD)
                         }
-
                         If (LEqual (CMTP, 0x2E))
                         {
                             Store (^GLID (), Local2)
-                            Store (0x00, RTCD) /* \_SB_.WMID.WHCM.RTCD */
+                            Store (0x00, RTCD)
                         }
-
                         If (LEqual (CMTP, 0x30))
                         {
                             Store (^GEID (), Local2)
-                            Store (0x00, RTCD) /* \_SB_.WMID.WHCM.RTCD */
+                            Store (0x00, RTCD)
                         }
-
                         If (LEqual (CMTP, 0x33))
                         {
                             Store (^GDES (), Local2)
-                            Store (0x00, RTCD) /* \_SB_.WMID.WHCM.RTCD */
+                            Store (0x00, RTCD)
                         }
-
                         If (LEqual (CMTP, 0x36))
                         {
                             Store (^GPST (), Local2)
-                            Store (0x00, RTCD) /* \_SB_.WMID.WHCM.RTCD */
+                            Store (0x00, RTCD)
                         }
-
                         If (LEqual (CMTP, 0x37))
                         {
                             Store (^GBCT (), Local2)
-                            Store (0x00, RTCD) /* \_SB_.WMID.WHCM.RTCD */
+                            Store (0x00, RTCD)
                         }
-
                         If (LEqual (CMTP, 0x38))
                         {
                             Store (^GPSH (), Local2)
-                            Store (0x00, RTCD) /* \_SB_.WMID.WHCM.RTCD */
+                            Store (0x00, RTCD)
                         }
                     }
-
                     Store ("Not Read BIOS", Debug)
                     If (LEqual (COMD, 0x02))
                     {
                         Store ("write BIOS command", Debug)
-                        Store (0x04, RTCD) /* \_SB_.WMID.WHCM.RTCD */
+                        Store (0x04, RTCD)
                         If (LAnd (LGreater (CMTP, 0x00), LLessEqual (CMTP, 0x38)))
                         {
                             If (LLess (DASI, DerefOf (Index (WCDS, Subtract (CMTP, 0x01)
                                 ))))
                             {
-                                Store (0x05, RTCD) /* \_SB_.WMID.WHCM.RTCD */
+                                Store (0x05, RTCD)
                             }
                             Else
                             {
@@ -21069,59 +19668,51 @@
                                 {
                                     Store ("set display switch", Debug)
                                     Store (^WSDD (DDWD), Local2)
-                                    Store (0x00, RTCD) /* \_SB_.WMID.WHCM.RTCD */
+                                    Store (0x00, RTCD)
                                 }
-
                                 If (LEqual (CMTP, 0x02))
                                 {
                                     Store (^WITH (DDWD), Local2)
-                                    Store (0x00, RTCD) /* \_SB_.WMID.WHCM.RTCD */
+                                    Store (0x00, RTCD)
                                 }
-
                                 If (LEqual (CMTP, 0x03))
                                 {
                                     Store (^WSAL (DDWD), Local2)
-                                    Store (0x00, RTCD) /* \_SB_.WMID.WHCM.RTCD */
+                                    Store (0x00, RTCD)
                                 }
-
                                 If (LEqual (CMTP, 0x06))
                                 {
                                     Store ("write Brightness", Debug)
                                     Store (^SBBC (DDWD), Local2)
                                     Store (Local2, Debug)
-                                    Store (0x00, RTCD) /* \_SB_.WMID.WHCM.RTCD */
+                                    Store (0x00, RTCD)
                                 }
-
                                 If (LEqual (CMTP, 0x09))
                                 {
                                     Store ("Hotkey Scancode", Debug)
                                     Store (^SHKS (DDWD), Local2)
                                     Store (Local2, Debug)
-                                    Store (0x00, RTCD) /* \_SB_.WMID.WHCM.RTCD */
+                                    Store (0x00, RTCD)
                                 }
-
                                 If (LEqual (CMTP, 0x0A))
                                 {
                                     Store ("Hotkey Function", Debug)
                                     Store (^SHKF (DDWD), Local2)
                                     Store (Local2, Debug)
-                                    Store (0x00, RTCD) /* \_SB_.WMID.WHCM.RTCD */
+                                    Store (0x00, RTCD)
                                 }
-
                                 If (LEqual (CMTP, 0x10))
                                 {
                                     Store ("Set Service ID", Debug)
                                     Store (^SSRV (DDWD), Local2)
                                     Store (Local2, Debug)
-                                    Store (0x00, RTCD) /* \_SB_.WMID.WHCM.RTCD */
+                                    Store (0x00, RTCD)
                                 }
-
                                 If (LEqual (CMTP, 0x14))
                                 {
                                     Store (^SWPT (DDWD), Local2)
-                                    Store (0x00, RTCD) /* \_SB_.WMID.WHCM.RTCD */
+                                    Store (0x00, RTCD)
                                 }
-
                                 If (LEqual (CMTP, 0x18))
                                 {
                                     Store ("Set System configuration", Debug)
@@ -21130,56 +19721,49 @@
                                     If (And (Local3, 0x1800))
                                     {
                                         \_SB.PCI0.LPCB.EC0.PWUP (0x01, 0x00)
-                                        Notify (\_SB.AC, 0x80) // Status Change
-                                        Store (DDWD, DTCD) /* \DTCD */
+                                        Notify (\_SB.AC, 0x80)
+                                        Store (DDWD, DTCD)
                                     }
-
                                     Store (Local2, Debug)
-                                    Store (0x00, RTCD) /* \_SB_.WMID.WHCM.RTCD */
+                                    Store (0x00, RTCD)
                                 }
-
                                 If (LEqual (CMTP, 0x1B))
                                 {
                                     Store (^WSWS (DDWD), Local2)
-                                    Store (0x00, RTCD) /* \_SB_.WMID.WHCM.RTCD */
+                                    Store (0x00, RTCD)
                                     WGWE (0x05, 0x00)
                                 }
-
                                 If (LEqual (CMTP, 0x1D))
                                 {
                                     Store ("Get Diags mode", Debug)
                                     Store (^SDMD (DDWD), Local2)
                                     Store (Local2, Debug)
-                                    Store (0x00, RTCD) /* \_SB_.WMID.WHCM.RTCD */
+                                    Store (0x00, RTCD)
                                 }
-
                                 If (LEqual (CMTP, 0x1E))
                                 {
                                     Store ("Get BIOS Update status", Debug)
                                     Store (^SBUS (DDWD), Local2)
-                                    Store (0x00, RTCD) /* \_SB_.WMID.WHCM.RTCD */
+                                    Store (0x00, RTCD)
                                 }
-
                                 If (LEqual (CMTP, 0x28))
                                 {
                                     Store ("Set thermal status", Debug)
                                     CreateField (Arg1, 0x80, Multiply (DASI, 0x08), STSD)
                                     Store (^STMM (STSD), Local2)
-                                    Store (0x00, RTCD) /* \_SB_.WMID.WHCM.RTCD */
+                                    Store (0x00, RTCD)
                                 }
-
                                 If (LEqual (CMTP, 0x2B))
                                 {
                                     Store ("Get Battery control", Debug)
                                     Store (^WSBC (CMTP, DASI, DAIN), Local2)
-                                    Store (0x00, RTCD) /* \_SB_.WMID.WHCM.RTCD */
+                                    Store (0x00, RTCD)
                                 }
-
                                 If (LEqual (CMTP, 0x21))
                                 {
                                     If (LGreaterEqual (\WCOS (), 0x06))
                                     {
-                                        Store (0x04, RTCD) /* \_SB_.WMID.WHCM.RTCD */
+                                        Store (0x04, RTCD)
                                     }
                                     Else
                                     {
@@ -21187,7 +19771,7 @@
                                             ), 0xFFFF)), Local2)
                                         If (LNotEqual (Local2, Ones))
                                         {
-                                            Store (Local2, BRID) /* \BRID */
+                                            Store (Local2, BRID)
                                             \_SB.SSMI (0xEA74, 0x08, Local2, 0x00, 0x00)
                                             \_SB.WBRT ()
                                             Store (Package (0x02)
@@ -21204,76 +19788,64 @@
                                                     0x00
                                                 }, Local2)
                                         }
-
-                                        Store (0x00, RTCD) /* \_SB_.WMID.WHCM.RTCD */
+                                        Store (0x00, RTCD)
                                     }
                                 }
-
                                 If (LEqual (CMTP, 0x22))
                                 {
                                     Store ("Set Quick Button Policy", Debug)
                                     Store (^SQBP (DDWD), Local2)
-                                    Store (0x00, RTCD) /* \_SB_.WMID.WHCM.RTCD */
+                                    Store (0x00, RTCD)
                                 }
-
                                 If (LEqual (CMTP, 0x23))
                                 {
                                     Store (^SPIN (DDWD), Local2)
-                                    Store (0x00, RTCD) /* \_SB_.WMID.WHCM.RTCD */
+                                    Store (0x00, RTCD)
                                 }
-
                                 If (LEqual (CMTP, 0x25))
                                 {
                                     Store (^CPMC (), Local2)
-                                    Store (0x00, RTCD) /* \_SB_.WMID.WHCM.RTCD */
+                                    Store (0x00, RTCD)
                                 }
-
                                 If (LEqual (CMTP, 0x29))
                                 {
                                     Store (^SFCC (DDWD), Local2)
-                                    Store (0x00, RTCD) /* \_SB_.WMID.WHCM.RTCD */
+                                    Store (0x00, RTCD)
                                 }
-
                                 If (LEqual (CMTP, 0x2A))
                                 {
                                     Store (^SPES (DDWD), Local2)
-                                    Store (0x00, RTCD) /* \_SB_.WMID.WHCM.RTCD */
+                                    Store (0x00, RTCD)
                                 }
-
                                 If (LEqual (CMTP, 0x36))
                                 {
                                     Store (^SPST (DDWD), Local2)
-                                    Store (0x00, RTCD) /* \_SB_.WMID.WHCM.RTCD */
+                                    Store (0x00, RTCD)
                                 }
-
                                 If (LEqual (CMTP, 0x37))
                                 {
                                     Store (^SBCP (DDWD), Local2)
-                                    Store (0x00, RTCD) /* \_SB_.WMID.WHCM.RTCD */
+                                    Store (0x00, RTCD)
                                 }
-
                                 If (LEqual (CMTP, 0x38))
                                 {
                                     Store (^SPSH (DDWD), Local2)
-                                    Store (0x00, RTCD) /* \_SB_.WMID.WHCM.RTCD */
+                                    Store (0x00, RTCD)
                                 }
                             }
                         }
                     }
-
                     If (LEqual (COMD, 0x03))
                     {
                         Store (\_SB.HODM (CMTP, DASI, DAIN), Local2)
-                        Store (0x00, RTCD) /* \_SB_.WMID.WHCM.RTCD */
+                        Store (0x00, RTCD)
                     }
-
                     If (LEqual (COMD, 0x00020000))
                     {
                         \_SB.SSMI (0xEA75, COMD, CMTP, 0x574D4953, 0x00)
                         Store (WFDA (), Local2)
-                        Store (0x00, RTCD) /* \_SB_.WMID.WHCM.RTCD */
+                        Store (0x00, RTCD)
                     }
-
                     If (LEqual (COMD, 0x00020001))
                     {
                         \_SB.SSMI (0xEA75, COMD, CMTP, 0x574D4953, 0x00)
@@ -21284,22 +19856,18 @@
                                 \_SB.SSMI (0xEA75, COMD, 0x10, 0x574D4953, 0x00)
                                 Sleep (0x19)
                             }
-
-                            Store (0x00, ECX) /* \ECX_ */
-                            Store (0x574D4953, EDX) /* \EDX_ */
+                            Store (0x00, ECX)
+                            Store (0x574D4953, EDX)
                         }
-
                         Store (WFDA (), Local2)
-                        Store (0x00, RTCD) /* \_SB_.WMID.WHCM.RTCD */
+                        Store (0x00, RTCD)
                     }
-
                     If (LEqual (COMD, 0x00020002))
                     {
                         \_SB.SSMI (0xEA75, COMD, CMTP, 0x574D4953, 0x00)
                         Store (WFDA (), Local2)
-                        Store (0x00, RTCD) /* \_SB_.WMID.WHCM.RTCD */
+                        Store (0x00, RTCD)
                     }
-
                     If (LEqual (COMD, 0x00020003))
                     {
                         If (LEqual (CMTP, 0x06))
@@ -21322,21 +19890,18 @@
                         {
                             Store (HPMC (CMTP, 0x00), Local2)
                         }
-
-                        Store (0x00, RTCD) /* \_SB_.WMID.WHCM.RTCD */
+                        Store (0x00, RTCD)
                     }
-
                     If (LEqual (COMD, 0x00020004))
                     {
                         \_SB.SSMI (0xEA75, COMD, CMTP, 0x574D4953, 0x00)
                         Store (WFDA (), Local2)
-                        Store (0x00, RTCD) /* \_SB_.WMID.WHCM.RTCD */
+                        Store (0x00, RTCD)
                     }
                 }
-
                 If (LEqual (RTCD, 0x00))
                 {
-                    Store (DerefOf (Index (Local2, 0x00)), RTCD) /* \_SB_.WMID.WHCM.RTCD */
+                    Store (DerefOf (Index (Local2, 0x00)), RTCD)
                     If (LEqual (RTCD, 0x00))
                     {
                         Store (DerefOf (Index (Local2, 0x01)), Local3)
@@ -21349,33 +19914,29 @@
                                     Index (Local1, Add (Local5, 0x08)))
                                 Increment (Local5)
                             }
-
                             If (LEqual (COMD, 0x00020000))
                             {
                                 If (EDX)
                                 {
                                     Store ("Encrypted Data Out", Debug)
-                                    Or (ShiftLeft (Local3, 0x10), RTCD, RTCD) /* \_SB_.WMID.WHCM.RTCD */
+                                    Or (ShiftLeft (Local3, 0x10), RTCD, RTCD)
                                 }
                                 Else
                                 {
                                     Store ("No Encrypted Data Out", Debug)
                                 }
                             }
-
-                            Store (0x53534150, SNOU) /* \_SB_.WMID.WHCM.SNOU */
+                            Store (0x53534150, SNOU)
                         }
                         Else
                         {
-                            Store (0x05, RTCD) /* \_SB_.WMID.WHCM.RTCD */
+                            Store (0x05, RTCD)
                         }
                     }
                 }
-
-                Store (ZOBF, ASMB) /* \ASMB */
+                Store (ZOBF, ASMB)
                 Return (Local1)
             }
-
             Method (WFDA, 0, NotSerialized)
             {
                 If (LOr (LEqual (ECX, 0x00), LNotEqual (EBX, 0x00)))
@@ -21397,7 +19958,6 @@
                         }, Local0)
                     Store (ECX, Debug)
                 }
-
                 Store (EBX, Index (Local0, 0x00))
                 If (LEqual (EBX, 0x00))
                 {
@@ -21414,10 +19974,8 @@
                         }
                     }
                 }
-
                 Return (Local0)
             }
-
             Method (WGWE, 2, NotSerialized)
             {
                 If (LEqual (\_SB.WMID.WEI1, 0x00))
@@ -21430,10 +19988,8 @@
                     Store (Arg0, \_SB.WMID.WEI2)
                     Store (Arg1, \_SB.WMID.WED2)
                 }
-
-                Notify (\_SB.WMID, 0x80) // Status Change
+                Notify (\_SB.WMID, 0x80)
             }
-
             Method (HPMC, 2, NotSerialized)
             {
                 Store (Buffer (0x80) {}, Local0)
@@ -21449,14 +20005,14 @@
                     CreateDWordField (Local0, 0x14, S0DA)
                     CreateDWordField (Local0, 0x18, S3DA)
                     CreateDWordField (Local0, 0x1C, S5DA)
-                    Store (0x96, SYSD) /* \_SB_.WMID.HPMC.SYSD */
-                    Store (0x05DF, SUPP) /* \_SB_.WMID.HPMC.SUPP */
-                    Store (0x78, S0AC) /* \_SB_.WMID.HPMC.S0AC */
-                    Store (0x07B8, S3AC) /* \_SB_.WMID.HPMC.S3AC */
-                    Store (0x07B8, S5AC) /* \_SB_.WMID.HPMC.S5AC */
-                    Store (0x00, S0DA) /* \_SB_.WMID.HPMC.S0DA */
-                    Store (0x0790, S3DA) /* \_SB_.WMID.HPMC.S3DA */
-                    Store (0x0790, S5DA) /* \_SB_.WMID.HPMC.S5DA */
+                    Store (0x96, SYSD)
+                    Store (0x05DF, SUPP)
+                    Store (0x78, S0AC)
+                    Store (0x07B8, S3AC)
+                    Store (0x07B8, S5AC)
+                    Store (0x00, S0DA)
+                    Store (0x0790, S3DA)
+                    Store (0x0790, S5DA)
                     Store (Package (0x03)
                         {
                             0x00, 
@@ -21466,7 +20022,6 @@
                     Store (Local0, Index (Local1, 0x02))
                     Return (Local1)
                 }
-
                 If (LEqual (Arg0, 0x04))
                 {
                     If (LEqual (PMCS, 0x01))
@@ -21499,10 +20054,9 @@
                             {
                                 Or (Local3, 0x02, Local3)
                             }
-
-                            Store (Local3, SYSS) /* \_SB_.WMID.HPMC.SYSS */
-                            Store (0x00140000, S0AD) /* \_SB_.WMID.HPMC.S0AD */
-                            Or (ShiftLeft (And (Local1, 0x0F), 0x03), S0AD, S0AD) /* \_SB_.WMID.HPMC.S0AD */
+                            Store (Local3, SYSS)
+                            Store (0x00140000, S0AD)
+                            Or (ShiftLeft (And (Local1, 0x0F), 0x03), S0AD, S0AD)
                             Store (0x00140000, Local2)
                             Or (ShiftLeft (And (\_SB.PCI0.LPCB.EC0.SXF0, 0xF0), 0x03), Local2, Local2)
                             Store (Local2, Local3)
@@ -21511,109 +20065,98 @@
                             {
                                 Or (Local3, 0x08, Local3)
                             }
-
                             If (And (Local4, 0x04))
                             {
                                 Or (Local3, 0x10, Local3)
                             }
-
                             If (And (Local4, 0x40))
                             {
                                 Or (Local3, 0x20, Local3)
                             }
-
                             If (LEqual (And (Local3, 0x08), 0x00))
                             {
                                 Or (Local3, 0x8000, Local3)
                             }
-
-                            Store (Local3, S3AD) /* \_SB_.WMID.HPMC.S3AD */
+                            Store (Local3, S3AD)
                             Store (Local2, Local3)
                             If (And (Local4, 0x02))
                             {
                                 Or (Local3, 0x08, Local3)
                             }
-
                             If (And (Local4, 0x10))
                             {
                                 Or (Local3, 0x10, Local3)
                             }
-
                             If (And (Local4, 0x80))
                             {
                                 Or (Local3, 0x20, Local3)
                             }
-
                             If (LEqual (And (Local3, 0x08), 0x00))
                             {
                                 Or (Local3, 0x8000, Local3)
                             }
-
-                            Store (Local3, S5AD) /* \_SB_.WMID.HPMC.S5AD */
-                            Store (0x00, S0DD) /* \_SB_.WMID.HPMC.S0DD */
+                            Store (Local3, S5AD)
+                            Store (0x00, S0DD)
                             Store (0x00148000, Local3)
                             If (And (Local4, 0x08))
                             {
                                 Or (Local3, 0x10, Local3)
                             }
-
-                            Store (Local3, S3DD) /* \_SB_.WMID.HPMC.S3DD */
+                            Store (Local3, S3DD)
                             Store (0x00148000, Local3)
                             If (And (Local4, 0x20))
                             {
                                 Or (Local3, 0x10, Local3)
                             }
-
-                            Store (Local3, S5DD) /* \_SB_.WMID.HPMC.S5DD */
+                            Store (Local3, S5DD)
                             If (And (Local1, 0x20))
                             {
-                                Store (0xFFFFFFFF, S0PW) /* \_SB_.WMID.HPMC.S0PW */
-                                Store (0xFFFFFFFF, S0CT) /* \_SB_.WMID.HPMC.S0CT */
-                                Store (0xFFFFFFFF, S3PW) /* \_SB_.WMID.HPMC.S3PW */
-                                Store (0xFFFFFFFF, S3CT) /* \_SB_.WMID.HPMC.S3CT */
-                                Store (0xFFFFFFFF, S5PW) /* \_SB_.WMID.HPMC.S5PW */
-                                Store (0xFFFFFFFF, S5CT) /* \_SB_.WMID.HPMC.S5CT */
-                                Store (0xFFFFFFFF, S0DP) /* \_SB_.WMID.HPMC.S0DP */
-                                Store (0xFFFFFFFF, S0DC) /* \_SB_.WMID.HPMC.S0DC */
-                                Store (0xFFFFFFFF, S3DP) /* \_SB_.WMID.HPMC.S3DP */
-                                Store (0xFFFFFFFF, S3DC) /* \_SB_.WMID.HPMC.S3DC */
-                                Store (0xFFFFFFFF, S5DP) /* \_SB_.WMID.HPMC.S5DP */
-                                Store (0xFFFFFFFF, S5DC) /* \_SB_.WMID.HPMC.S5DC */
+                                Store (0xFFFFFFFF, S0PW)
+                                Store (0xFFFFFFFF, S0CT)
+                                Store (0xFFFFFFFF, S3PW)
+                                Store (0xFFFFFFFF, S3CT)
+                                Store (0xFFFFFFFF, S5PW)
+                                Store (0xFFFFFFFF, S5CT)
+                                Store (0xFFFFFFFF, S0DP)
+                                Store (0xFFFFFFFF, S0DC)
+                                Store (0xFFFFFFFF, S3DP)
+                                Store (0xFFFFFFFF, S3DC)
+                                Store (0xFFFFFFFF, S5DP)
+                                Store (0xFFFFFFFF, S5DC)
                             }
                             Else
                             {
                                 Store (0x00, \_SB.PCI0.LPCB.EC0.DIDX)
-                                Store (\_SB.PCI0.LPCB.EC0.PMCD, S0PW) /* \_SB_.WMID.HPMC.S0PW */
+                                Store (\_SB.PCI0.LPCB.EC0.PMCD, S0PW)
                                 Store (0x01, \_SB.PCI0.LPCB.EC0.DIDX)
-                                Store (\_SB.PCI0.LPCB.EC0.PMCD, S0CT) /* \_SB_.WMID.HPMC.S0CT */
+                                Store (\_SB.PCI0.LPCB.EC0.PMCD, S0CT)
                                 Store (0x02, \_SB.PCI0.LPCB.EC0.DIDX)
                                 Store (\_SB.PCI0.LPCB.EC0.PMCD, Local2)
                                 Store (0x03, \_SB.PCI0.LPCB.EC0.DIDX)
                                 Store (\_SB.PCI0.LPCB.EC0.PMCD, Local3)
                                 Store (0x06, \_SB.PCI0.LPCB.EC0.DIDX)
                                 Store (\_SB.PCI0.LPCB.EC0.PMCD, Local4)
-                                Add (Local2, Multiply (Local4, 0x01B8), S3PW) /* \_SB_.WMID.HPMC.S3PW */
-                                Add (Local3, Local4, S3CT) /* \_SB_.WMID.HPMC.S3CT */
+                                Add (Local2, Multiply (Local4, 0x01B8), S3PW)
+                                Add (Local3, Local4, S3CT)
                                 Store (0x04, \_SB.PCI0.LPCB.EC0.DIDX)
                                 Store (\_SB.PCI0.LPCB.EC0.PMCD, Local2)
                                 Store (0x05, \_SB.PCI0.LPCB.EC0.DIDX)
                                 Store (\_SB.PCI0.LPCB.EC0.PMCD, Local3)
                                 Store (0x07, \_SB.PCI0.LPCB.EC0.DIDX)
                                 Store (\_SB.PCI0.LPCB.EC0.PMCD, Local4)
-                                Add (Local2, Multiply (Local4, 0x01B8), S5PW) /* \_SB_.WMID.HPMC.S5PW */
-                                Add (Local3, Local4, S5CT) /* \_SB_.WMID.HPMC.S5CT */
-                                Store (0x00, S0DP) /* \_SB_.WMID.HPMC.S0DP */
-                                Store (0x00, S0DC) /* \_SB_.WMID.HPMC.S0DC */
+                                Add (Local2, Multiply (Local4, 0x01B8), S5PW)
+                                Add (Local3, Local4, S5CT)
+                                Store (0x00, S0DP)
+                                Store (0x00, S0DC)
                                 Store (0x08, \_SB.PCI0.LPCB.EC0.DIDX)
                                 Store (\_SB.PCI0.LPCB.EC0.PMCD, Local2)
-                                Multiply (Local2, 0x01B8, S3DP) /* \_SB_.WMID.HPMC.S3DP */
-                                Store (Local2, S3DC) /* \_SB_.WMID.HPMC.S3DC */
+                                Multiply (Local2, 0x01B8, S3DP)
+                                Store (Local2, S3DC)
                                 Store (0x09, \_SB.PCI0.LPCB.EC0.DIDX)
                                 Store (\_SB.PCI0.LPCB.EC0.PMCD, Local2)
-                                Multiply (Local2, 0x01B8, S5DP) /* \_SB_.WMID.HPMC.S5DP */
-                                Store (Local2, S5DC) /* \_SB_.WMID.HPMC.S5DC */
+                                Multiply (Local2, 0x01B8, S5DP)
+                                Store (Local2, S5DC)
                             }
-
                             Store (0x00, \_SB.PCI0.LPCB.EC0.PMCC)
                         }
                         Else
@@ -21625,7 +20168,6 @@
                             })
                         }
                     }
-
                     Store (Package (0x03)
                         {
                             0x00, 
@@ -21635,7 +20177,6 @@
                     Store (Local0, Index (Local1, 0x02))
                     Return (Local1)
                 }
-
                 If (LEqual (Arg0, 0x05))
                 {
                     If (LEqual (PMCS, 0x01))
@@ -21661,7 +20202,6 @@
                         }
                     }
                 }
-
                 If (LEqual (Arg0, 0x06))
                 {
                     If (LEqual (PMCS, 0x01))
@@ -21686,14 +20226,12 @@
                         }
                     }
                 }
-
                 Return (Package (0x02)
                 {
                     0x04, 
                     0x00
                 })
             }
-
             Method (GBTT, 0, NotSerialized)
             {
                 Store (BCL (), Local1)
@@ -21713,7 +20251,6 @@
                     Increment (Local2)
                     Add (Local3, 0x02, Local3)
                 }
-
                 Store (0x01, Index (Local0, Local3))
                 Increment (Local3)
                 Store (BRCT, Index (Local0, Local3))
@@ -21726,7 +20263,6 @@
                     Increment (Local2)
                     Increment (Local3)
                 }
-
                 Store (0x02, Index (Local0, Local3))
                 Increment (Local3)
                 Store (0x02, Index (Local0, Local3))
@@ -21749,7 +20285,6 @@
                 Store (Local0, Index (Local2, 0x02))
                 Return (Local2)
             }
-
             Method (GBTL, 1, NotSerialized)
             {
                 Store (0x00, Local0)
@@ -21786,7 +20321,6 @@
                                     Store (BMAP, Local2)
                                     Store (DerefOf (Index (Local2, BRID)), Local3)
                                 }
-
                                 Store (DerefOf (Index (Local1, Local3)), Local2)
                             }
                             Else
@@ -21796,7 +20330,6 @@
                         }
                     }
                 }
-
                 Store (Package (0x03) {}, Local1)
                 Store (Local0, Index (Local1, 0x00))
                 If (LEqual (Local0, 0x00))
@@ -21812,10 +20345,8 @@
                 {
                     Store (0x00, Index (Local1, 0x01))
                 }
-
                 Return (Local1)
             }
-
             Method (SBRT, 2, NotSerialized)
             {
                 Store (BCL (), Local0)
@@ -21851,7 +20382,6 @@
                                     Store (Local3, Local1)
                                     Store (0xFF, Local3)
                                 }
-
                                 Increment (Local3)
                             }
                         }
@@ -21869,23 +20399,19 @@
                                     {
                                         Store (DerefOf (Index (Local3, Local4)), Local5)
                                     }
-
                                     If (LEqual (DerefOf (Index (Local2, Local5)), Arg1))
                                     {
                                         Store (Local4, Local1)
                                         Store (0xFF, Local4)
                                     }
-
                                     Increment (Local4)
                                 }
                             }
                         }
                     }
                 }
-
                 Return (Local1)
             }
-
             Method (GEID, 0, NotSerialized)
             {
                 Store (Package (0x03)
@@ -21903,10 +20429,8 @@
                         0x02)), Local2))
                     Increment (Local2)
                 }
-
                 Return (Local0)
             }
-
             Name (NULL, "                                      ")
             Method (WQBC, 1, NotSerialized)
             {
@@ -21924,7 +20448,6 @@
                 {
                     Store (0x00, Index (DerefOf (Index (BISE, Arg0)), 0x04))
                 }
-
                 If (LEqual (FMOD, 0x00))
                 {
                     Store (DerefOf (Index (DerefOf (Index (BISE, Arg0)), 0x00)), 
@@ -21934,15 +20457,13 @@
                         Store (0x01, Index (DerefOf (Index (BISE, Arg0)), 0x05))
                         Store ("SELECT * FROM HP_BIOSPassword WHERE Name=\'Setup Password\' AND IsSet=1", Index (DerefOf (Index (BISE, Arg0)), 0x08))
                     }
-
                     If (\SRCM (Local3, "Manufacturing Programming Mode", 0x1E))
                     {
                         Store (0x01, Index (DerefOf (Index (BISE, Arg0)), 0x03))
                     }
                 }
-
                 Store (DerefOf (Index (DerefOf (Index (BISE, Arg0)), 0x01)), 
-                    ST11) /* \_SB_.ST11 */
+                    ST11)
                 Store (SizeOf (ST11), Local6)
                 Store (0x00, Local3)
                 While (LNotEqual (Local3, SizeOf (ST01)))
@@ -21950,10 +20471,9 @@
                     Store (0x00, Index (ST01, Local3))
                     Increment (Local3)
                 }
-
                 Store (0x01, Local3)
                 Store (DerefOf (Index (DerefOf (Index (BISE, Arg0)), 0x00)), 
-                    ST01) /* \_SB_.ST01 */
+                    ST01)
                 While (LNotEqual (Local4, Local6))
                 {
                     Store (DerefOf (Index (ST11, Local4)), Local5)
@@ -21961,15 +20481,12 @@
                     {
                         Increment (Local1)
                     }
-
                     If (LEqual (DerefOf (Index (ST11, Local4)), 0x2A))
                     {
                         Store (0x20, Index (ST11, Local4))
                     }
-
                     Increment (Local4)
                 }
-
                 Store (EVAL, Local6)
                 Store ("Instance = ", Debug)
                 Store (Arg0, Debug)
@@ -21996,7 +20513,6 @@
                             Store (PXE, Index (DerefOf (Index (BISE, Arg0)), 0x0C))
                         }
                     }
-
                     If (\SRCM (ST01, "Embedded Security Device Availability", 0x25))
                     {
                         Store (0x00, Local3)
@@ -22011,7 +20527,6 @@
                             Store (HID, Index (DerefOf (Index (BISE, Arg0)), 0x0C))
                         }
                     }
-
                     If (\SRCM (ST01, "Terminal Emulation Mode", 0x17))
                     {
                         Store (0x00, Local3)
@@ -22026,7 +20541,6 @@
                             Store (ANSI, Index (DerefOf (Index (BISE, Arg0)), 0x0C))
                         }
                     }
-
                     If (\SRCM (ST01, "At least one symbol required", 0x1C))
                     {
                         Store (0x00, Local3)
@@ -22041,7 +20555,6 @@
                             Store (NONO, Index (DerefOf (Index (BISE, Arg0)), 0x0C))
                         }
                     }
-
                     If (\SRCM (ST01, "At least one number required", 0x1C))
                     {
                         Store (0x00, Local3)
@@ -22056,7 +20569,6 @@
                             Store (NONO, Index (DerefOf (Index (BISE, Arg0)), 0x0C))
                         }
                     }
-
                     If (\SRCM (ST01, "At least one upper case character required", 0x2A))
                     {
                         Store (0x00, Local3)
@@ -22071,7 +20583,6 @@
                             Store (NONO, Index (DerefOf (Index (BISE, Arg0)), 0x0C))
                         }
                     }
-
                     If (\SRCM (ST01, "At least one lower case character required", 0x2A))
                     {
                         Store (0x00, Local3)
@@ -22086,7 +20597,6 @@
                             Store (NONO, Index (DerefOf (Index (BISE, Arg0)), 0x0C))
                         }
                     }
-
                     If (\SRCM (ST01, "Are spaces allowed in password", 0x1E))
                     {
                         Store (0x00, Local3)
@@ -22101,18 +20611,16 @@
                             Store (NONO, Index (DerefOf (Index (BISE, Arg0)), 0x0C))
                         }
                     }
-
                     If (\SRCM (ST01, "SATA Device Mode", 0x10))
                     {
                         Store (0x00, Local3)
-                        Store (DerefOf (Index (NRDF, Local6)), ST03) /* \_SB_.ST03 */
-                        Store (ST03, BF2S) /* \_SB_.BF2S */
+                        Store (DerefOf (Index (NRDF, Local6)), ST03)
+                        Store (ST03, BF2S)
                         Store (BF2S, Index (DerefOf (Index (BISE, Arg0)), 0x01))
-                        Store (DerefOf (Index (SMDE, Local6)), ST03) /* \_SB_.ST03 */
-                        Store (ST03, BF2S) /* \_SB_.BF2S */
+                        Store (DerefOf (Index (SMDE, Local6)), ST03)
+                        Store (ST03, BF2S)
                         Store (BF2S, Index (DerefOf (Index (BISE, Arg0)), 0x0C))
                     }
-
                     If (\SRCM (ST01, "NumLock on at boot", 0x12))
                     {
                         Store (0x00, Local3)
@@ -22127,7 +20635,6 @@
                             Store (OFOF, Index (DerefOf (Index (BISE, Arg0)), 0x0C))
                         }
                     }
-
                     If (\SRCM (ST01, "Reset Authentication Credential", 0x1F))
                     {
                         Store (0x00, Local3)
@@ -22142,7 +20649,6 @@
                             Store (NONO, Index (DerefOf (Index (BISE, Arg0)), 0x0C))
                         }
                     }
-
                     If (\SRCM (ST01, "TPM Reset to Factory Defaults", 0x1D))
                     {
                         Store (0x00, Local3)
@@ -22157,7 +20663,6 @@
                             Store (NONO, Index (DerefOf (Index (BISE, Arg0)), 0x0C))
                         }
                     }
-
                     If (\SRCM (ST01, "Manufacturing Programming Mode", 0x1E))
                     {
                         Store (0x00, Local3)
@@ -22172,7 +20677,6 @@
                             Store (LLCK, Index (DerefOf (Index (BISE, Arg0)), 0x0C))
                         }
                     }
-
                     If (\SRCM (ST01, "Express Card Link Speed", 0x17))
                     {
                         Store (0x00, Local3)
@@ -22187,7 +20691,6 @@
                             Store (GEN2, Index (DerefOf (Index (BISE, Arg0)), 0x0C))
                         }
                     }
-
                     If (\SRCM (ST01, "DriveLock password on restart", 0x1D))
                     {
                         Store (0x00, Local3)
@@ -22202,7 +20705,6 @@
                             Store (DISD, Index (DerefOf (Index (BISE, Arg0)), 0x0C))
                         }
                     }
-
                     If (\SRCM (ST01, "Restore Defaults", 0x10))
                     {
                         Store (0x00, Local3)
@@ -22217,7 +20719,6 @@
                             Store (NONO, Index (DerefOf (Index (BISE, Arg0)), 0x0C))
                         }
                     }
-
                     If (\SRCM (ST01, "Reset BIOS security to factory default", 0x26))
                     {
                         Store (0x00, Local3)
@@ -22232,7 +20733,6 @@
                             Store (NONO, Index (DerefOf (Index (BISE, Arg0)), 0x0C))
                         }
                     }
-
                     If (\SRCM (ST01, "Max SATA Speed", 0x0E))
                     {
                         Store (0x00, Local3)
@@ -22247,7 +20747,6 @@
                             Store (SGN3, Index (DerefOf (Index (BISE, Arg0)), 0x0C))
                         }
                     }
-
                     If (Local3)
                     {
                         If (Local6)
@@ -22277,82 +20776,71 @@
                                 Store (VIEW, Index (DerefOf (Index (BISE, Arg0)), 0x0C))
                                 Store ("Policy = VIEW", Debug)
                             }
-
                             If (LEqual (Local6, 0x02))
                             {
                                 Store (CSTR, Index (DerefOf (Index (BISE, Arg0)), 0x01))
                                 Store (CHGE, Index (DerefOf (Index (BISE, Arg0)), 0x0C))
                                 Store ("Policy = CHANGE", Debug)
                             }
-
                             If (LEqual (Local6, 0x03))
                             {
                                 Store (HSTR, Index (DerefOf (Index (BISE, Arg0)), 0x01))
                                 Store (HIDE, Index (DerefOf (Index (BISE, Arg0)), 0x0C))
                                 Store ("Policy = HIDE", Debug)
                             }
-
                             Return (DerefOf (Index (BISE, Arg0)))
                         }
                     }
-
                     Store (DerefOf (Index (DerefOf (Index (BISE, Arg0)), 0x00)), 
-                        TM01) /* \_SB_.TM01 */
+                        TM01)
                     If (LAnd (RDSP, \SRCM (TM01, "SATA Device Mode", 0x10)))
                     {
-                        Store (DerefOf (Index (RDFD, Local6)), ST03) /* \_SB_.ST03 */
-                        Store (ST03, BF2S) /* \_SB_.BF2S */
+                        Store (DerefOf (Index (RDFD, Local6)), ST03)
+                        Store (ST03, BF2S)
                         Store (BF2S, Index (DerefOf (Index (BISE, Arg0)), 0x01))
-                        Store (DerefOf (Index (SMDE, Local6)), ST03) /* \_SB_.ST03 */
-                        Store (ST03, BF2S) /* \_SB_.BF2S */
+                        Store (DerefOf (Index (SMDE, Local6)), ST03)
+                        Store (ST03, BF2S)
                         Store (BF2S, Index (DerefOf (Index (BISE, Arg0)), 0x0C))
                     }
-
                     If (\SRCM (TM01, "Virtualization Technology", 0x19))
                     {
-                        Store (DerefOf (Index (VTVL, Local6)), ST03) /* \_SB_.ST03 */
-                        Store (ST03, BF2S) /* \_SB_.BF2S */
+                        Store (DerefOf (Index (VTVL, Local6)), ST03)
+                        Store (ST03, BF2S)
                         Store (BF2S, Index (DerefOf (Index (BISE, Arg0)), 0x0C))
                     }
-
                     If (\SRCM (TM01, "Set All Security Levels", 0x17))
                     {
-                        Store (DerefOf (Index (SALL, Local6)), ST03) /* \_SB_.ST03 */
-                        Store (ST03, BF2S) /* \_SB_.BF2S */
+                        Store (DerefOf (Index (SALL, Local6)), ST03)
+                        Store (ST03, BF2S)
                         Store (BF2S, Index (DerefOf (Index (BISE, Arg0)), 0x0C))
                     }
-
                     If (\SRCM (TM01, "Virtualization Technology for Directed I/O", 0x2A))
                     {
-                        Store (DerefOf (Index (VTDV, Local6)), ST03) /* \_SB_.ST03 */
-                        Store (ST03, BF2S) /* \_SB_.BF2S */
+                        Store (DerefOf (Index (VTDV, Local6)), ST03)
+                        Store (ST03, BF2S)
                         Store (BF2S, Index (DerefOf (Index (BISE, Arg0)), 0x0C))
                     }
-
                     If (\SRCM (TM01, "Wake on LAN", 0x0B))
                     {
                         Store ("WOL values  ", Debug)
-                        Store (DerefOf (Index (WOLV, Local6)), ST03) /* \_SB_.ST03 */
-                        Store (ST03, BF2S) /* \_SB_.BF2S */
+                        Store (DerefOf (Index (WOLV, Local6)), ST03)
+                        Store (ST03, BF2S)
                         Store (BF2S, Index (DerefOf (Index (BISE, Arg0)), 0x0C))
                     }
-
                     If (\SRCM (TM01, "Parallel port mode", 0x12))
                     {
                         If (LEqual (Local6, 0x04))
                         {
                             Store (0x03, Local6)
                         }
-
                         Store ("Getting parallel port mode ", Debug)
-                        Store (DerefOf (Index (PPMD, Local6)), ST03) /* \_SB_.ST03 */
-                        Store (ST03, BF2S) /* \_SB_.BF2S */
+                        Store (DerefOf (Index (PPMD, Local6)), ST03)
+                        Store (ST03, BF2S)
                         Store (BF2S, Index (DerefOf (Index (BISE, Arg0)), 0x0C))
-                        Store (DerefOf (Index (PPMS, Local6)), ST03) /* \_SB_.ST03 */
-                        Store (ST03, BF2S) /* \_SB_.BF2S */
+                        Store (DerefOf (Index (PPMS, Local6)), ST03)
+                        Store (ST03, BF2S)
                         Store (BF2S, Index (DerefOf (Index (BISE, Arg0)), 0x01))
                     }
-
                     If (\SRCM (TM01, "Set All Security Levels", 0x17))
                     {
                         Store ("Set All Value = ", Debug)
@@ -22361,61 +20849,50 @@
                         {
                             Store (DALL, Index (DerefOf (Index (BISE, Arg0)), 0x01))
                         }
-
                         If (LEqual (Local6, 0x02))
                         {
                             Store (CALL, Index (DerefOf (Index (BISE, Arg0)), 0x01))
                         }
-
                         If (LEqual (Local6, 0x01))
                         {
                             Store (VALL, Index (DerefOf (Index (BISE, Arg0)), 0x01))
                         }
-
                         If (LEqual (Local6, 0x03))
                         {
                             Store (HALL, Index (DerefOf (Index (BISE, Arg0)), 0x01))
                         }
-
                         Return (DerefOf (Index (BISE, Arg0)))
                     }
-
                     If (\SRCM (TM01, "Startup Menu Delay (Sec.)", 0x18))
                     {
                         If (LGreater (Local6, 0x07))
                         {
                             ShiftRight (Local6, 0x05, Local6)
                         }
-
-                        Store (DerefOf (Index (F12D, Local6)), ST03) /* \_SB_.ST03 */
-                        Store (ST03, BF2S) /* \_SB_.BF2S */
+                        Store (DerefOf (Index (F12D, Local6)), ST03)
+                        Store (ST03, BF2S)
                         Store (BF2S, Index (DerefOf (Index (BISE, Arg0)), 0x0C))
                     }
-
                     If (\SRCM (TM01, "Disable charging port ", 0x16))
                     {
                         If (LGreater (Local6, 0x09))
                         {
                             ShiftRight (Local6, 0x05, Local6)
                         }
-
-                        Store (DerefOf (Index (BCPP, Local6)), ST03) /* \_SB_.ST03 */
-                        Store (ST03, BF2S) /* \_SB_.BF2S */
+                        Store (DerefOf (Index (BCPP, Local6)), ST03)
+                        Store (ST03, BF2S)
                         Store (BF2S, Index (DerefOf (Index (BISE, Arg0)), 0x0C))
                     }
-
                     If (\SRCM (TM01, "Multiboot Express Popup Delay(Sec)", 0x22))
                     {
                         If (LGreater (Local6, 0x07))
                         {
                             ShiftRight (Local6, 0x05, Local6)
                         }
-
-                        Store (DerefOf (Index (BPPD, Local6)), ST03) /* \_SB_.ST03 */
-                        Store (ST03, BF2S) /* \_SB_.BF2S */
+                        Store (DerefOf (Index (BPPD, Local6)), ST03)
+                        Store (ST03, BF2S)
                         Store (BF2S, Index (DerefOf (Index (BISE, Arg0)), 0x0C))
                     }
-
                     If (\SRCM (TM01, "Embedded Security Activation Policy", 0x23))
                     {
                         Store (0x00, Local3)
@@ -22424,34 +20901,29 @@
                             Store (F1PS, Index (DerefOf (Index (BISE, Arg0)), 0x01))
                             Store (F1PV, Index (DerefOf (Index (BISE, Arg0)), 0x0C))
                         }
-
                         If (LEqual (Local6, 0x01))
                         {
                             Store (F1F2, Index (DerefOf (Index (BISE, Arg0)), 0x01))
                             Store (F12V, Index (DerefOf (Index (BISE, Arg0)), 0x0C))
                         }
-
                         If (LEqual (Local6, 0x02))
                         {
                             Store (NOPS, Index (DerefOf (Index (BISE, Arg0)), 0x01))
                             Store (NOPR, Index (DerefOf (Index (BISE, Arg0)), 0x0C))
                         }
                     }
-
                     If (\SRCM (TM01, "Language", 0x08))
                     {
-                        Store (DerefOf (Index (LANG, Local6)), ST03) /* \_SB_.ST03 */
-                        Store (ST03, BF2S) /* \_SB_.BF2S */
+                        Store (DerefOf (Index (LANG, Local6)), ST03)
+                        Store (ST03, BF2S)
                         Store (BF2S, Index (DerefOf (Index (BISE, Arg0)), 0x0C))
                     }
-
                     If (\SRCM (TM01, "Backlit Keyboard Timeout", 0x18))
                     {
-                        Store (DerefOf (Index (BLKB, Local6)), ST03) /* \_SB_.ST03 */
-                        Store (ST03, BF2S) /* \_SB_.BF2S */
+                        Store (DerefOf (Index (BLKB, Local6)), ST03)
+                        Store (ST03, BF2S)
                         Store (BF2S, Index (DerefOf (Index (BISE, Arg0)), 0x0C))
                     }
-
                     Decrement (Local1)
                     Store ("Comma Count = ", Debug)
                     Store (Local1, Debug)
@@ -22474,19 +20946,15 @@
                                     Store (0x2A, Index (ST11, Local4))
                                 }
                             }
-
                             Increment (Local4)
                         }
                     }
-
-                    Store (ST11, BF2S) /* \_SB_.BF2S */
+                    Store (ST11, BF2S)
                     Store (BF2S, Index (DerefOf (Index (BISE, Arg0)), 0x01))
                 }
-
                 Store (0x00, Local4)
                 Return (DerefOf (Index (BISE, Arg0)))
             }
-
             Method (WQBD, 1, NotSerialized)
             {
                 Store (0x00, Local0)
@@ -22509,242 +20977,214 @@
                             Store (0x01, Index (DerefOf (Index (BSSS, Arg0)), 0x03))
                             Store (0x00, Local4)
                         }
-
                         Increment (Local2)
                     }
-
                     Store (0x00, Local4)
                 }
-
                 If (LEqual (Arg0, 0x00))
                 {
-                    Store (ASTG, WTB2) /* \_SB_.WTB2 */
+                    Store (ASTG, WTB2)
                     CreateField (WTB2, 0x00, 0x0100, CAST)
-                    Store (CAST, BF2S) /* \_SB_.BF2S */
+                    Store (CAST, BF2S)
                     Store (ShiftRight (And (STAT, 0xF0), 0x04), Index (DerefOf (
                         Index (BSSS, Arg0)), 0x0B))
                 }
-
                 If (LEqual (Arg0, 0x01))
                 {
-                    Store (OWNT, WTB2) /* \_SB_.WTB2 */
+                    Store (OWNT, WTB2)
                     CreateField (WTB2, 0x00, 0x0280, COWT)
-                    Store (COWT, BF2S) /* \_SB_.BF2S */
+                    Store (COWT, BF2S)
                     Store (ShiftRight (And (STAT, 0xF0), 0x04), Index (DerefOf (
                         Index (BSSS, Arg0)), 0x0B))
                 }
-
                 If (LEqual (Arg0, 0x02))
                 {
-                    Store (LFND, WTB2) /* \_SB_.WTB2 */
+                    Store (LFND, WTB2)
                     CreateField (WTB2, 0x00, 0x0510, WLFD)
-                    Store (WLFD, BF2S) /* \_SB_.BF2S */
+                    Store (WLFD, BF2S)
                     Store (EVAL, Local6)
                     Store (Local6, Index (DerefOf (Index (BSSS, Arg0)), 0x0B))
                 }
-
                 If (LEqual (Arg0, 0x03))
                 {
-                    Store (ATIM, WTB2) /* \_SB_.WTB2 */
+                    Store (ATIM, WTB2)
                     CreateField (WTB2, 0x00, 0x28, WATM)
-                    Store (WATM, BF2S) /* \_SB_.BF2S */
+                    Store (WATM, BF2S)
                 }
-
                 If (LEqual (Arg0, 0x04))
                 {
-                    Store (PCID, WTB2) /* \_SB_.WTB2 */
+                    Store (PCID, WTB2)
                     CreateField (WTB2, 0x00, 0x0200, WPCD)
-                    Store (WPCD, BF2S) /* \_SB_.BF2S */
+                    Store (WPCD, BF2S)
                 }
-
                 If (LEqual (Arg0, 0x05))
                 {
-                    Store (CURL, WTB2) /* \_SB_.WTB2 */
+                    Store (CURL, WTB2)
                     CreateField (WTB2, 0x00, 0x0410, WURL)
-                    Store (WURL, BF2S) /* \_SB_.BF2S */
+                    Store (WURL, BF2S)
                 }
-
                 If (LEqual (Arg0, 0x06))
                 {
-                    Store (PCVR, WTB2) /* \_SB_.WTB2 */
+                    Store (PCVR, WTB2)
                     CreateField (WTB2, 0x00, 0x28, PCIV)
-                    Store (PCIV, BF2S) /* \_SB_.BF2S */
+                    Store (PCIV, BF2S)
                 }
-
                 If (LEqual (Arg0, 0x07))
                 {
-                    Store (PROD, WTB2) /* \_SB_.WTB2 */
+                    Store (PROD, WTB2)
                     CreateField (WTB2, 0x00, 0x0280, CRPD)
-                    Store (CRPD, BF2S) /* \_SB_.BF2S */
+                    Store (CRPD, BF2S)
                 }
-
                 If (LEqual (Arg0, 0x08))
                 {
-                    Store (MODL, WTB2) /* \_SB_.WTB2 */
+                    Store (MODL, WTB2)
                     CreateField (WTB2, 0x00, 0x0280, CMOD)
-                    Store (CMOD, BF2S) /* \_SB_.BF2S */
+                    Store (CMOD, BF2S)
                 }
-
                 If (LEqual (Arg0, 0x09))
                 {
-                    Store (PTYP, WTB2) /* \_SB_.WTB2 */
+                    Store (PTYP, WTB2)
                     CreateField (WTB2, 0x00, 0x0280, CCPU)
-                    Store (CCPU, BF2S) /* \_SB_.BF2S */
+                    Store (CCPU, BF2S)
                 }
-
                 If (LEqual (Arg0, 0x0A))
                 {
-                    Store (PFRQ, WTB2) /* \_SB_.WTB2 */
+                    Store (PFRQ, WTB2)
                     CreateField (WTB2, 0x00, 0x50, CFRQ)
-                    Store (CFRQ, BF2S) /* \_SB_.BF2S */
+                    Store (CFRQ, BF2S)
                 }
-
                 If (LEqual (Arg0, 0x0B))
                 {
-                    Store (MEMS, WTB2) /* \_SB_.WTB2 */
+                    Store (MEMS, WTB2)
                     CreateField (WTB2, 0x00, 0x0280, MEMS)
-                    Store (MEMS, BF2S) /* \_SB_.BF2S */
+                    Store (MEMS, BF2S)
                 }
-
                 If (LEqual (Arg0, 0x0C))
                 {
-                    Store (DATE, WTB2) /* \_SB_.WTB2 */
+                    Store (DATE, WTB2)
                     CreateField (WTB2, 0x00, 0x0280, CDAT)
-                    Store (CDAT, BF2S) /* \_SB_.BF2S */
+                    Store (CDAT, BF2S)
                 }
-
                 If (LEqual (Arg0, 0x0D))
                 {
-                    Store (FAMI, WTB2) /* \_SB_.WTB2 */
+                    Store (FAMI, WTB2)
                     CreateField (WTB2, 0x00, 0x0280, CFAM)
-                    Store (CFAM, BF2S) /* \_SB_.BF2S */
+                    Store (CFAM, BF2S)
                 }
-
                 If (LEqual (Arg0, 0x0E))
                 {
-                    Store (SERL, WTB2) /* \_SB_.WTB2 */
+                    Store (SERL, WTB2)
                     CreateField (WTB2, 0x00, 0x0280, CSER)
-                    Store (CSER, BF2S) /* \_SB_.BF2S */
+                    Store (CSER, BF2S)
                 }
-
                 If (LEqual (Arg0, 0x0F))
                 {
-                    Store (VREV, WTB2) /* \_SB_.WTB2 */
+                    Store (VREV, WTB2)
                     CreateField (WTB2, 0x00, 0x0280, CREV)
-                    Store (CREV, BF2S) /* \_SB_.BF2S */
+                    Store (CREV, BF2S)
                 }
-
                 If (LEqual (Arg0, 0x10))
                 {
-                    Store (VRE2, WTB2) /* \_SB_.WTB2 */
+                    Store (VRE2, WTB2)
                     CreateField (WTB2, 0x00, 0x0280, CRE2)
-                    Store (CRE2, BF2S) /* \_SB_.BF2S */
+                    Store (CRE2, BF2S)
                 }
-
                 If (LEqual (Arg0, 0x11))
                 {
-                    Store (KBCD, WTB2) /* \_SB_.WTB2 */
+                    Store (KBCD, WTB2)
                     CreateField (WTB2, 0x00, 0x0280, CKBC)
-                    Store (CKBC, BF2S) /* \_SB_.BF2S */
+                    Store (CKBC, BF2S)
                 }
-
                 If (LEqual (Arg0, 0x12))
                 {
                     If (LEqual (STAT, 0x80))
                     {
                         Store (0x00, Index (DerefOf (Index (BSSS, Arg0)), 0x04))
-                        Store (NOIN, BF2S) /* \_SB_.BF2S */
+                        Store (NOIN, BF2S)
                     }
                     Else
                     {
-                        Store (HDDS, WTB2) /* \_SB_.WTB2 */
+                        Store (HDDS, WTB2)
                         CreateField (WTB2, 0x00, 0xA8, WHDD)
-                        Store (WHDD, BF2S) /* \_SB_.BF2S */
+                        Store (WHDD, BF2S)
                     }
                 }
-
                 If (LEqual (Arg0, 0x13))
                 {
                     If (LEqual (STAT, 0x80))
                     {
                         Store (0x00, Index (DerefOf (Index (BSSS, Arg0)), 0x04))
-                        Store (NOIN, BF2S) /* \_SB_.BF2S */
+                        Store (NOIN, BF2S)
                     }
                     Else
                     {
-                        Store (HDDM, WTB2) /* \_SB_.WTB2 */
+                        Store (HDDM, WTB2)
                         CreateField (WTB2, 0x00, 0x0148, WHDM)
-                        Store (WHDM, BF2S) /* \_SB_.BF2S */
+                        Store (WHDM, BF2S)
                     }
                 }
-
                 If (LEqual (Arg0, 0x14))
                 {
                     If (LEqual (STAT, 0x80))
                     {
                         Store (0x00, Index (DerefOf (Index (BSSS, Arg0)), 0x04))
-                        Store (NOIN, BF2S) /* \_SB_.BF2S */
+                        Store (NOIN, BF2S)
                     }
                     Else
                     {
-                        Store (CDAT, WTB2) /* \_SB_.WTB2 */
+                        Store (CDAT, WTB2)
                         CreateField (WTB2, 0x00, 0x88, WCDT)
-                        Store (WCDT, BF2S) /* \_SB_.BF2S */
+                        Store (WCDT, BF2S)
                     }
                 }
-
                 If (LEqual (Arg0, 0x15))
                 {
                     If (LEqual (STAT, 0x80))
                     {
                         Store (0x00, Index (DerefOf (Index (BSSS, Arg0)), 0x04))
-                        Store (NOIN, BF2S) /* \_SB_.BF2S */
+                        Store (NOIN, BF2S)
                     }
                     Else
                     {
-                        Store (CSTS, WTB2) /* \_SB_.WTB2 */
+                        Store (CSTS, WTB2)
                         CreateByteField (WTB2, 0x00, WCST)
                         Store (WCST, Local5)
                         If (LEqual (Local5, 0x00))
                         {
                             Store (0x00, Local0)
-                            Store (DerefOf (Index (DSTS, Local0)), WTB4) /* \_SB_.WTB4 */
-                            Store (WTB4, BF2S) /* \_SB_.BF2S */
+                            Store (DerefOf (Index (DSTS, Local0)), WTB4)
+                            Store (WTB4, BF2S)
                         }
-
                         If (LEqual (Local5, 0xFF))
                         {
                             Store (0x01, Local0)
-                            Store (DerefOf (Index (DSTS, Local0)), WTB4) /* \_SB_.WTB4 */
-                            Store (WTB4, BF2S) /* \_SB_.BF2S */
+                            Store (DerefOf (Index (DSTS, Local0)), WTB4)
+                            Store (WTB4, BF2S)
                         }
-
                         If (LEqual (Local5, 0xFE))
                         {
                             Store (0x02, Local0)
-                            Store (DerefOf (Index (DSTS, Local0)), WTB4) /* \_SB_.WTB4 */
-                            Store (WTB4, BF2S) /* \_SB_.BF2S */
+                            Store (DerefOf (Index (DSTS, Local0)), WTB4)
+                            Store (WTB4, BF2S)
                         }
-
                         If (LEqual (Local5, 0xFD))
                         {
                             Store (0x03, Local0)
-                            Store (DerefOf (Index (DSTS, Local0)), WTB4) /* \_SB_.WTB4 */
-                            Store (WTB4, BF2S) /* \_SB_.BF2S */
+                            Store (DerefOf (Index (DSTS, Local0)), WTB4)
+                            Store (WTB4, BF2S)
                         }
                     }
                 }
-
                 If (LEqual (Arg0, 0x16))
                 {
                     If (LEqual (STAT, 0x80))
                     {
                         Store (0x00, Index (DerefOf (Index (BSSS, Arg0)), 0x04))
-                        Store (NOIN, BF2S) /* \_SB_.BF2S */
+                        Store (NOIN, BF2S)
                     }
                     Else
                     {
-                        Store (CYCL, WTB2) /* \_SB_.WTB2 */
+                        Store (CYCL, WTB2)
                         CreateByteField (WTB2, 0x00, WCYC)
                         ToBCD (WCYC, Local1)
                         Store (0x01, Local2)
@@ -22752,187 +21192,159 @@
                         {
                             Store (0x01, Local2)
                         }
-
                         If (LGreaterEqual (WCYC, 0x0A))
                         {
                             Store (0x02, Local2)
                         }
-
                         If (LGreaterEqual (WCYC, 0x64))
                         {
                             Store (0x03, Local2)
                         }
-
                         If (LGreaterEqual (WCYC, 0x03E8))
                         {
                             Store (0x04, Local2)
                         }
-
                         If (LGreaterEqual (WCYC, 0x2710))
                         {
                             Store (0x05, Local2)
                         }
-
                         Store (\ISTR (Local1, Local2), Local3)
-                        Store (Local3, BF2S) /* \_SB_.BF2S */
+                        Store (Local3, BF2S)
                     }
                 }
-
                 If (LEqual (Arg0, 0x17))
                 {
-                    Store (SVID, WTB2) /* \_SB_.WTB2 */
+                    Store (SVID, WTB2)
                     CreateField (WTB2, 0x00, 0x50, CSID)
-                    Store (CSID, BF2S) /* \_SB_.BF2S */
+                    Store (CSID, BF2S)
                 }
-
                 If (LEqual (Arg0, 0x18))
                 {
-                    Store (SKUN, WTB2) /* \_SB_.WTB2 */
+                    Store (SKUN, WTB2)
                     CreateField (WTB2, 0x00, 0x80, CSKU)
-                    Store (CSKU, BF2S) /* \_SB_.BF2S */
+                    Store (CSKU, BF2S)
                 }
-
                 If (LEqual (Arg0, 0x19))
                 {
-                    Store (SSID, WTB2) /* \_SB_.WTB2 */
+                    Store (SSID, WTB2)
                     CreateField (WTB2, 0x00, 0x20, WSID)
-                    Store (WSID, BF2S) /* \_SB_.BF2S */
+                    Store (WSID, BF2S)
                 }
-
                 If (LEqual (Arg0, 0x1A))
                 {
-                    Store (PBSN, WTB2) /* \_SB_.WTB2 */
+                    Store (PBSN, WTB2)
                     CreateField (WTB2, 0x00, 0x90, WPSN)
-                    Store (WPSN, BF2S) /* \_SB_.BF2S */
+                    Store (WPSN, BF2S)
                 }
-
                 If (LEqual (Arg0, 0x1B))
                 {
-                    Store (SBSN, WTB2) /* \_SB_.WTB2 */
+                    Store (SBSN, WTB2)
                     CreateField (WTB2, 0x00, 0x90, WSSN)
-                    Store (WSSN, BF2S) /* \_SB_.BF2S */
+                    Store (WSSN, BF2S)
                 }
-
                 If (LEqual (Arg0, 0x1C))
                 {
-                    Store (BTFC, WTB2) /* \_SB_.WTB2 */
+                    Store (BTFC, WTB2)
                     CreateField (WTB2, 0x00, 0xA0, WBTF)
-                    Store (WBTF, BF2S) /* \_SB_.BF2S */
+                    Store (WBTF, BF2S)
                 }
-
                 If (LEqual (Arg0, 0x1D))
                 {
-                    Store (WLFC, WTB2) /* \_SB_.WTB2 */
+                    Store (WLFC, WTB2)
                     CreateField (WTB2, 0x00, 0xA0, WWLF)
-                    Store (WWLF, BF2S) /* \_SB_.BF2S */
+                    Store (WWLF, BF2S)
                 }
-
                 If (LEqual (Arg0, 0x1E))
                 {
-                    Store (WWFC, WTB2) /* \_SB_.WTB2 */
+                    Store (WWFC, WTB2)
                     CreateField (WTB2, 0x00, 0xA0, WWWF)
-                    Store (WWWF, BF2S) /* \_SB_.BF2S */
+                    Store (WWWF, BF2S)
                 }
-
                 If (LEqual (Arg0, 0x1F))
                 {
-                    Store (GPFC, WTB2) /* \_SB_.WTB2 */
+                    Store (GPFC, WTB2)
                     CreateField (WTB2, 0x00, 0xA0, WGPF)
-                    Store (WGPF, BF2S) /* \_SB_.BF2S */
+                    Store (WGPF, BF2S)
                 }
-
                 If (LEqual (Arg0, 0x20))
                 {
-                    Store (UUID, WTB2) /* \_SB_.WTB2 */
+                    Store (UUID, WTB2)
                     CreateField (WTB2, 0x00, 0x0100, WUUI)
-                    Store (WUUI, BF2S) /* \_SB_.BF2S */
+                    Store (WUUI, BF2S)
                 }
-
                 If (LEqual (Arg0, 0x21))
                 {
-                    Store (CFID, WTB2) /* \_SB_.WTB2 */
+                    Store (CFID, WTB2)
                     CreateField (WTB2, 0x00, 0xD0, WCFI)
-                    Store (WCFI, BF2S) /* \_SB_.BF2S */
+                    Store (WCFI, BF2S)
                 }
-
                 If (LEqual (Arg0, 0x22))
                 {
-                    Store (SBCT, WTB2) /* \_SB_.WTB2 */
+                    Store (SBCT, WTB2)
                     CreateField (WTB2, 0x00, 0x78, WBCT)
-                    Store (WBCT, BF2S) /* \_SB_.BF2S */
+                    Store (WBCT, BF2S)
                 }
-
                 If (LEqual (Arg0, 0x23))
                 {
-                    Store (CPRV, WTB2) /* \_SB_.WTB2 */
+                    Store (CPRV, WTB2)
                     CreateField (WTB2, 0x00, 0x78, WCRV)
-                    Store (WCRV, BF2S) /* \_SB_.BF2S */
+                    Store (WCRV, BF2S)
                 }
-
                 If (LEqual (Arg0, 0x24))
                 {
                     If (LEqual (STAT, 0x80))
                     {
                         Store (0x00, Index (DerefOf (Index (BSSS, Arg0)), 0x04))
-                        Store (NOIN, BF2S) /* \_SB_.BF2S */
+                        Store (NOIN, BF2S)
                     }
                     Else
                     {
-                        Store (SNMD, WTB2) /* \_SB_.WTB2 */
+                        Store (SNMD, WTB2)
                         CreateByteField (WTB2, 0x00, WSNM)
                         Store (WSNM, Local5)
-                        Store (DerefOf (Index (DSMD, Local5)), WTB4) /* \_SB_.WTB4 */
-                        Store (WTB4, BF2S) /* \_SB_.BF2S */
+                        Store (DerefOf (Index (DSMD, Local5)), WTB4)
+                        Store (WTB4, BF2S)
                     }
                 }
-
                 If (LEqual (Arg0, 0x25))
                 {
-                    Store (MMS1, WTB2) /* \_SB_.WTB2 */
+                    Store (MMS1, WTB2)
                     CreateField (WTB2, 0x00, 0x0280, WMS1)
-                    Store (WMS1, BF2S) /* \_SB_.BF2S */
+                    Store (WMS1, BF2S)
                 }
-
                 If (LEqual (Arg0, 0x26))
                 {
                     If (LLess (NMMS, 0x02))
                     {
                         Store (0x00, Index (DerefOf (Index (BSSS, Arg0)), 0x04))
                     }
-
-                    Store (MMS2, WTB2) /* \_SB_.WTB2 */
+                    Store (MMS2, WTB2)
                     CreateField (WTB2, 0x00, 0x0280, WMS2)
-                    Store (WMS2, BF2S) /* \_SB_.BF2S */
+                    Store (WMS2, BF2S)
                 }
-
                 If (LEqual (Arg0, 0x27))
                 {
                     If (LLess (NMMS, 0x03))
                     {
                         Store (0x00, Index (DerefOf (Index (BSSS, Arg0)), 0x04))
                     }
-
-                    Store (MMS3, WTB2) /* \_SB_.WTB2 */
+                    Store (MMS3, WTB2)
                     CreateField (WTB2, 0x00, 0x0280, WMS3)
-                    Store (WMS3, BF2S) /* \_SB_.BF2S */
+                    Store (WMS3, BF2S)
                 }
-
                 If (LEqual (Arg0, 0x28))
                 {
                     If (LLess (NMMS, 0x04))
                     {
                         Store (0x00, Index (DerefOf (Index (BSSS, Arg0)), 0x04))
                     }
-
-                    Store (MMS4, WTB2) /* \_SB_.WTB2 */
+                    Store (MMS4, WTB2)
                     CreateField (WTB2, 0x00, 0x0280, WMS4)
-                    Store (WMS4, BF2S) /* \_SB_.BF2S */
+                    Store (WMS4, BF2S)
                 }
-
                 Store (BF2S, Index (DerefOf (Index (BSSS, Arg0)), 0x01))
                 Return (DerefOf (Index (BSSS, Arg0)))
             }
-
             Method (WQBE, 1, NotSerialized)
             {
                 Store (0x00, Local1)
@@ -22946,8 +21358,8 @@
                     \_SB.SSMI (0xEA7B, 0x00, 0x03, Arg0, 0x00)
                     Store (ShiftRight (And (STAT, 0xF0), 0x04), Index (DerefOf (
                         Index (BSOL, Arg0)), 0x0B))
-                    And (STAT, 0x0F, STAT) /* \STAT */
-                    Store (BORD, WBOR) /* \_SB_.WBOR */
+                    And (STAT, 0x0F, STAT)
+                    Store (BORD, WBOR)
                     CreateField (WBOR, 0x00, Multiply (0x09, 0x08), CBOS)
                     While (LNotEqual (Local1, 0x09))
                     {
@@ -22962,38 +21374,34 @@
                                 If (LEqual (Local4, Local7))
                                 {
                                     Store (DerefOf (Index (DerefOf (Index (RMBI, Local5)), 0x01)), 
-                                        BF01) /* \_SB_.BF01 */
-                                    Store (BF01, BF2S) /* \_SB_.BF2S */
+                                        BF01)
+                                    Store (BF01, BF2S)
                                     Store (BF2S, Index (CRBI, Local6))
                                     Increment (Local6)
                                     Store (Subtract (0x09, 0x01), Local5)
                                 }
-
                                 Increment (Local5)
                             }
                         }
-
                         Increment (Local1)
                     }
-
                     Store (0x00, Local0)
                     Store (0x00, Local5)
                     Store (0x00, Local4)
                     Store (0x0D, Local0)
                     While (LNotEqual (Local5, 0x09))
                     {
-                        Store (DerefOf (Index (CRBI, Local5)), BF01) /* \_SB_.BF01 */
-                        Store (BF01, BF2S) /* \_SB_.BF2S */
+                        Store (DerefOf (Index (CRBI, Local5)), BF01)
+                        Store (BF01, BF2S)
                         Store (BF2S, Index (DerefOf (Index (BSOL, 0x00)), Local0))
                         Increment (Local5)
                         Increment (Local0)
                     }
-
                     Store (0x00, Local1)
                     Store (0x00, Local2)
                     While (LNotEqual (Local2, 0x09))
                     {
-                        Store (DerefOf (Index (CRBI, Local2)), BF01) /* \_SB_.BF01 */
+                        Store (DerefOf (Index (CRBI, Local2)), BF01)
                         Store (0x00, Local5)
                         While (LNotEqual (DerefOf (Index (BF01, Local5)), 0x00))
                         {
@@ -23002,12 +21410,10 @@
                             Increment (Local5)
                             Increment (Local1)
                         }
-
                         Store (0x2C, Index (BVAL, Local1))
                         Increment (Local1)
                         Increment (Local2)
                     }
-
                     Store (0x00, Local2)
                     While (LNotEqual (Local2, 0x09))
                     {
@@ -23017,19 +21423,17 @@
                         Increment (Local1)
                         Increment (Local2)
                     }
-
-                    Store (BVAL, BB2S) /* \_SB_.BB2S */
+                    Store (BVAL, BB2S)
                     Store (BB2S, Index (DerefOf (Index (BSOL, 0x00)), 0x01))
                 }
-
                 If (LEqual (Arg0, 0x01))
                 {
                     Store (IBUF (), Local4)
                     \_SB.SSMI (0xEA7B, 0x00, 0x08, Arg0, 0x00)
                     Store (ShiftRight (And (STAT, 0xF0), 0x04), Index (DerefOf (
                         Index (BSOL, Arg0)), 0x0B))
-                    And (STAT, 0x0F, STAT) /* \STAT */
-                    Store (WUFI, SUIP) /* \_SB_.SUIP */
+                    And (STAT, 0x0F, STAT)
+                    Store (WUFI, SUIP)
                     While (LNotEqual (Local1, 0x03))
                     {
                         Store (DerefOf (Index (SUIP, Local1)), Local4)
@@ -23043,38 +21447,34 @@
                                 If (LEqual (Local4, Local7))
                                 {
                                     Store (DerefOf (Index (DerefOf (Index (UEBL, Local5)), 0x01)), 
-                                        BF01) /* \_SB_.BF01 */
-                                    Store (BF01, BF2S) /* \_SB_.BF2S */
+                                        BF01)
+                                    Store (BF01, BF2S)
                                     Store (BF2S, Index (CUBO, Local6))
                                     Increment (Local6)
                                     Store (Subtract (0x03, 0x01), Local5)
                                 }
-
                                 Increment (Local5)
                             }
                         }
-
                         Increment (Local1)
                     }
-
                     Store (0x00, Local0)
                     Store (0x00, Local5)
                     Store (0x00, Local4)
                     Store (0x0D, Local0)
                     While (LNotEqual (Local5, 0x03))
                     {
-                        Store (DerefOf (Index (CUBO, Local5)), BF01) /* \_SB_.BF01 */
-                        Store (BF01, BF2S) /* \_SB_.BF2S */
+                        Store (DerefOf (Index (CUBO, Local5)), BF01)
+                        Store (BF01, BF2S)
                         Store (BF2S, Index (DerefOf (Index (BSOL, Arg0)), Local0))
                         Increment (Local5)
                         Increment (Local0)
                     }
-
                     Store (0x00, Local1)
                     Store (0x00, Local2)
                     While (LNotEqual (Local2, 0x03))
                     {
-                        Store (DerefOf (Index (CUBO, Local2)), BF01) /* \_SB_.BF01 */
+                        Store (DerefOf (Index (CUBO, Local2)), BF01)
                         Store (0x00, Local5)
                         While (LNotEqual (DerefOf (Index (BF01, Local5)), 0x00))
                         {
@@ -23083,12 +21483,10 @@
                             Increment (Local5)
                             Increment (Local1)
                         }
-
                         Store (0x2C, Index (BVAL, Local1))
                         Increment (Local1)
                         Increment (Local2)
                     }
-
                     Store (0x00, Local2)
                     While (LNotEqual (Local2, 0x09))
                     {
@@ -23098,14 +21496,11 @@
                         Increment (Local1)
                         Increment (Local2)
                     }
-
-                    Store (BVAL, BB2S) /* \_SB_.BB2S */
+                    Store (BVAL, BB2S)
                     Store (BB2S, Index (DerefOf (Index (BSOL, Arg0)), 0x01))
                 }
-
                 Return (DerefOf (Index (BSOL, Arg0)))
             }
-
             Method (ISSP, 0, NotSerialized)
             {
                 Store (0x00, Local0)
@@ -23118,10 +21513,8 @@
                 {
                     Store (0x00, Local0)
                 }
-
                 Return (Local0)
             }
-
             Method (PLOK, 1, NotSerialized)
             {
                 Store (0x00, Local1)
@@ -23132,12 +21525,10 @@
                     {
                         Increment (Local1)
                     }
-
                     While (LNotEqual (DerefOf (Index (NAPW, Local2)), 0x00))
                     {
                         Increment (Local2)
                     }
-
                     If (LOr (LGreater (Local1, 0x20), LGreater (Local2, 0x20)))
                     {
                         Return (0x00)
@@ -23147,10 +21538,8 @@
                         Return (0x01)
                     }
                 }
-
                 Return (0x00)
             }
-
             Method (GBID, 0, NotSerialized)
             {
                 Store (0x00, Local1)
@@ -23168,7 +21557,6 @@
                         Store (0x00, Index (TEMP, Local1))
                         Increment (Local1)
                     }
-
                     Store (0x00, Local1)
                     While (LNotEqual (Local1, 0x14))
                     {
@@ -23178,11 +21566,9 @@
                         {
                             Store (0x13, Local1)
                         }
-
                         Increment (Local1)
                         Increment (Local4)
                     }
-
                     If (LNotEqual (DerefOf (Index (BOIN, Local4)), 0x00))
                     {
                         Store (FNID (), Local3)
@@ -23190,7 +21576,6 @@
                         {
                             Store (Local3, Index (BOID, Local6))
                         }
-
                         Increment (Local6)
                     }
                     Else
@@ -23198,10 +21583,8 @@
                         Store (Local2, Local4)
                     }
                 }
-
                 Return (Local7)
             }
-
             Method (FNID, 0, NotSerialized)
             {
                 Store (0xFF, Local3)
@@ -23210,77 +21593,63 @@
                 {
                     Store (0x01, Local3)
                 }
-
                 If (LOr (\SRCM (TEMP, "Notebook Upgrade Bay (UEFI)", 0x1B), \SRCM (TEMP, " Notebook Upgrade Bay (UEFI)", SizeOf (
                     STG0))))
                 {
                     Store (0x01, Local3)
                 }
-
                 If (LOr (\SRCM (TEMP, "OS Boot Manager", 0x0F), \SRCM (TEMP, " OS Boot Manager", SizeOf (
                     STG0))))
                 {
                     Store (0x02, Local3)
                 }
-
                 If (LOr (\SRCM (TEMP, "Notebook Hard Drive", 0x13), \SRCM (TEMP, " Notebook Hard Drive ", 0x15)))
                 {
                     Store (0x02, Local3)
                 }
-
                 If (LOr (\SRCM (TEMP, "Hard Drive 2", 0x0C), \SRCM (TEMP, " Hard Drive 2", SizeOf (
                     STG0))))
                 {
                     Store (0x0C, Local3)
                 }
-
                 If (LOr (\SRCM (TEMP, "USB Floppy", 0x0A), \SRCM (TEMP, " USB Floppy", SizeOf (
                     STG0))))
                 {
                     Store (0x03, Local3)
                 }
-
                 If (LOr (\SRCM (TEMP, "USB CD-ROM", 0x0A), \SRCM (TEMP, " USB CD-ROM", SizeOf (
                     STG0))))
                 {
                     Store (0x05, Local3)
                 }
-
                 If (LOr (\SRCM (TEMP, "USB Hard Drive", 0x0E), \SRCM (TEMP, " USB Hard Drive", SizeOf (
                     STG0))))
                 {
                     Store (0x06, Local3)
                 }
-
                 If (LOr (\SRCM (TEMP, "Notebook Ethernet", 0x11), \SRCM (TEMP, " Notebook Ethernet ", SizeOf (
                     STG0))))
                 {
                     Store (0x07, Local3)
                 }
-
                 If (LOr (\SRCM (TEMP, "SD Card", 0x07), \SRCM (TEMP, " SD Card ", 0x09)))
                 {
                     Store (0x08, Local3)
                 }
-
                 If (LOr (\SRCM (TEMP, "Dock Upgrade Bay", 0x10), \SRCM (TEMP, " Dock Upgrade Bay ", 0x12)))
                 {
                     Store (0x0A, Local3)
                 }
-
                 If (LOr (\SRCM (TEMP, "eSATA Drive", 0x0B), \SRCM (TEMP, " eSATA Drive ", 0x0D)))
                 {
                     Store (0x0B, Local3)
                 }
-
                 If (LOr (\SRCM (TEMP, "Notebook Ethernet (", 0x13), \SRCM (TEMP, " Notebook Ethernet (U", 0x15)))
                 {
                     Store (0x03, Local3)
                 }
-
                 Return (Local3)
             }
-
             Method (WQBF, 1, NotSerialized)
             {
                 If (LEqual (Arg0, 0x00))
@@ -23295,7 +21664,6 @@
                         Store (0x00, Index (DerefOf (Index (BSPV, 0x00)), 0x10))
                         Store (0xFFFFFFFF, Index (DerefOf (Index (BSPV, 0x00)), 0x11))
                     }
-
                     \_SB.SSMI (0xEA7B, 0x00, 0x06, 0x00, 0x00)
                     Store (PWDL, Index (DerefOf (Index (BSPV, 0x00)), 0x0C))
                 }
@@ -23303,10 +21671,8 @@
                 {
                     \_SB.SSMI (0xEA7B, 0x00, 0x07, Arg0, 0x00)
                 }
-
                 Return (DerefOf (Index (BSPV, Arg0)))
             }
-
             Method (WQBG, 1, NotSerialized)
             {
                 \_SB.SSMI (0xEA7B, 0x00, 0x06, 0x00, 0x00)
@@ -23330,24 +21696,19 @@
                                 Store (0x00, Local3)
                             }
                         }
-
                         Increment (Local1)
                     }
-
                     Store (0x00, Local3)
                 }
-
                 Store (0x00, Local4)
                 If (LEqual (Arg0, 0x00))
                 {
                     Store (PWDL, Local4)
                 }
-
                 If (LEqual (Arg0, 0x01))
                 {
                     Store (MPMC, Local4)
                 }
-
                 Store (Local4, Index (DerefOf (Index (BSIN, Arg0)), 0x0E))
                 If (LLessEqual (Local4, 0x09))
                 {
@@ -23357,28 +21718,24 @@
                 {
                     Store (0x02, Local2)
                 }
-
                 ToBCD (Local4, Local1)
                 Store (\ISTR (Local1, Local2), Local3)
-                Store (Local3, BF2S) /* \_SB_.BF2S */
+                Store (Local3, BF2S)
                 Store (BF2S, Index (DerefOf (Index (BSIN, Arg0)), 0x01))
                 Return (DerefOf (Index (BSIN, Arg0)))
             }
-
             Method (WQBH, 0, NotSerialized)
             {
             }
-
             Method (WQBI, 0, NotSerialized)
             {
             }
-
             Method (WQBJ, 1, NotSerialized)
             {
                 \_SB.SSMI (0xEA7B, 0x02, Arg0, 0x00, 0x00)
                 If (LEqual (STAT, 0x00))
                 {
-                    Store (USRN, BF2S) /* \_SB_.BF2S */
+                    Store (USRN, BF2S)
                     Store (BF2S, Index (DerefOf (Index (BUSR, Arg0)), 0x00))
                     Store (ROLE, Index (DerefOf (Index (BUSR, Arg0)), 0x10))
                     CreateDWordField (HASH, 0x00, HSH1)
@@ -23405,10 +21762,8 @@
                     Store (0x00, Index (DerefOf (Index (BUSR, 0x00)), 0x10))
                     Store (0x00, Index (DerefOf (Index (BUSR, Arg0)), 0x11))
                 }
-
                 Return (DerefOf (Index (BUSR, Arg0)))
             }
-
             Method (USPP, 0, NotSerialized)
             {
                 Store (0x00, Local0)
@@ -23421,10 +21776,8 @@
                 {
                     Store (0x00, Local0)
                 }
-
                 Return (Local0)
             }
-
             Method (ZPBF, 0, NotSerialized)
             {
                 Store (0x00, Local3)
@@ -23433,20 +21786,16 @@
                     Store (0x00, Index (PCBF, Local3))
                     Increment (Local3)
                 }
-
                 Return (0x00)
             }
-
             Method (PARP, 0, NotSerialized)
             {
                 Return (0x00)
             }
-
             Method (WMBH, 1, NotSerialized)
             {
                 Return (0x00)
             }
-
             Method (WMBA, 3, NotSerialized)
             {
                 IWMP ()
@@ -23471,7 +21820,6 @@
                         Increment (Local2)
                         Increment (Local5)
                     }
-
                     Store (DerefOf (Index (Local0, Local2)), Local4)
                     Increment (Local2)
                     Increment (Local2)
@@ -23499,14 +21847,12 @@
                                 Increment (Local2)
                                 Increment (Local5)
                             }
-
                             If (LEqual (Local5, Local4))
                             {
                                 Store (0x00, Local4)
                             }
                         }
                     }
-
                     If (\SRCM (ST01, "Setup Password", 0x0E))
                     {
                         While (LNotEqual (Local5, Local4))
@@ -23516,8 +21862,7 @@
                             Increment (Local5)
                             Increment (Local6)
                         }
-
-                        Store (PCBF, NAPW) /* \NAPW */
+                        Store (PCBF, NAPW)
                         Store (DerefOf (Index (Local0, Local2)), Local4)
                         Increment (Local2)
                         Increment (Local2)
@@ -23531,50 +21876,42 @@
                             Increment (Local5)
                             Increment (Local6)
                         }
-
-                        Store (PCBF, OAPW) /* \OAPW */
+                        Store (PCBF, OAPW)
                         \_SB.SSMI (0xEA7B, 0x01, 0x04, 0x0400, 0x00)
                         If (LEqual (STAT, 0x00))
                         {
                             Store ("SUCCESS from SMI !", Debug)
                             Store (0x00, Index (ETYP, 0x00))
-                            Notify (\_SB.WMID, 0xA0) // Device-Specific
+                            Notify (\_SB.WMID, 0xA0)
                         }
-
                         If (LEqual (STAT, 0x06))
                         {
                             Store ("ACCESS_DENIED error from SMI ", Debug)
                             Store (0x01, Index (ETYP, 0x00))
-                            Notify (\_SB.WMID, 0xA0) // Device-Specific
+                            Notify (\_SB.WMID, 0xA0)
                         }
-
-                        Return (STAT) /* \STAT */
+                        Return (STAT)
                     }
-
                     If (\SRCM (ST01, "Notebook hard drive drivelock master password", 0x2D))
                     {
-                        Store (HDDL (Local0, Local2, Local4, 0x00), STAT) /* \STAT */
-                        Return (STAT) /* \STAT */
+                        Store (HDDL (Local0, Local2, Local4, 0x00), STAT)
+                        Return (STAT)
                     }
-
                     If (\SRCM (ST01, "Notebook hard drive drivelock user password", 0x2B))
                     {
-                        Store (HDDL (Local0, Local2, Local4, 0x01), STAT) /* \STAT */
-                        Return (STAT) /* \STAT */
+                        Store (HDDL (Local0, Local2, Local4, 0x01), STAT)
+                        Return (STAT)
                     }
-
                     If (\SRCM (ST01, "Upgrade bay hard drive drivelock master password", 0x30))
                     {
-                        Store (HDDL (Local0, Local2, Local4, 0x02), STAT) /* \STAT */
-                        Return (STAT) /* \STAT */
+                        Store (HDDL (Local0, Local2, Local4, 0x02), STAT)
+                        Return (STAT)
                     }
-
                     If (\SRCM (ST01, "Upgrade bay hard drive drivelock user password", 0x2E))
                     {
-                        Store (HDDL (Local0, Local2, Local4, 0x03), STAT) /* \STAT */
-                        Return (STAT) /* \STAT */
+                        Store (HDDL (Local0, Local2, Local4, 0x03), STAT)
+                        Return (STAT)
                     }
-
                     Store (0x00, Local5)
                     Store (0x00, Local6)
                     Store (Local4, Index (VFSZ, 0x00))
@@ -23587,15 +21924,13 @@
                         Increment (Local2)
                         Increment (Local5)
                     }
-
                     Store (DerefOf (Index (Local0, Local2)), Local4)
                     If (LAnd (LEqual (ISSP (), 0x01), LEqual (Local4, 0x00)))
                     {
                         Store (0x01, Index (ETYP, 0x00))
-                        Notify (\_SB.WMID, 0xA0) // Device-Specific
+                        Notify (\_SB.WMID, 0xA0)
                         Return (0x06)
                     }
-
                     Increment (Local2)
                     Increment (Local2)
                     Store (0x00, Local5)
@@ -23608,8 +21943,7 @@
                         Increment (Local5)
                         Increment (Local6)
                     }
-
-                    Store (PCBF, OAPW) /* \OAPW */
+                    Store (PCBF, OAPW)
                     Store (0x00, Local7)
                     Store (0x00, Local4)
                     Store (0x00, Local2)
@@ -23617,18 +21951,16 @@
                     While (LNotEqual (Local5, Local4))
                     {
                         Store (DerefOf (Index (DerefOf (Index (BISE, Local4)), 0x00)), 
-                            ST14) /* \_SB_.ST14 */
+                            ST14)
                         If (\SRCM (ST01, ST14, SizeOf (ST14)))
                         {
                             Store (0xCE, Local4)
                             Decrement (Local4)
                             Store (0x01, Local2)
                         }
-
                         Increment (Local7)
                         Increment (Local4)
                     }
-
                     Decrement (Local7)
                     If (LOr (\SRCM (ST01, "Legacy Boot Order Security Level", 0x20), \SRCM (ST01, "UEFI Boot Order Security Level", 0x1E)))
                     {
@@ -23640,13 +21972,11 @@
                         {
                             Store (0x03, Local2)
                         }
-
                         If (\SRCM (ST01, "UEFI Boot Order", 0x0F))
                         {
                             Store (0x08, Local2)
                         }
                     }
-
                     Store (ST01, Debug)
                     If (LOr (\SRCM (ST01, "Password Minimum Length", 0x17), \SRCM (ST01, "Manufacturing Programming Mode Counter", 0x26)))
                     {
@@ -23667,55 +21997,51 @@
                             CreateByteField (ST02, 0x00, MINL)
                             Subtract (MINL, 0x30, Local4)
                         }
-
                         Store (Local4, Debug)
                         If (\SRCM (ST01, "Password Minimum Length", 0x17))
                         {
                             If (LAnd (LGreaterEqual (Local4, 0x04), LLessEqual (Local4, 0x20)))
                             {
-                                Store (Local4, PWDL) /* \PWDL */
+                                Store (Local4, PWDL)
                                 Store (0x00, Index (FLAG, 0x00))
                                 Store (0x00, Local7)
                             }
                             Else
                             {
-                                Store (0x05, STAT) /* \STAT */
-                                Return (STAT) /* \STAT */
+                                Store (0x05, STAT)
+                                Return (STAT)
                             }
                         }
-
                         If (\SRCM (ST01, "Manufacturing Programming Mode Counter", 0x26))
                         {
                             If (FMOD)
                             {
                                 If (LAnd (LGreaterEqual (Local4, 0x00), LLessEqual (Local4, 0x0A)))
                                 {
-                                    Store (Local4, MPMC) /* \MPMC */
+                                    Store (Local4, MPMC)
                                     Store (0x00, Index (FLAG, 0x00))
                                     Store (0x01, Local7)
                                     If (LEqual (Local4, 0x0A))
                                     {
                                         \_SB.SSMI (0xEA7B, 0x01, 0x61, 0x0100, 0x00)
-                                        Store (0x00, FMOD) /* \FMOD */
+                                        Store (0x00, FMOD)
                                     }
                                 }
                                 Else
                                 {
-                                    Store (0x05, STAT) /* \STAT */
-                                    Return (STAT) /* \STAT */
+                                    Store (0x05, STAT)
+                                    Return (STAT)
                                 }
                             }
                             Else
                             {
-                                Store (0x01, STAT) /* \STAT */
-                                Return (STAT) /* \STAT */
+                                Store (0x01, STAT)
+                                Return (STAT)
                             }
                         }
-
                         Store (0x06, Local6)
                         ShiftLeft (Local6, 0x08, Local6)
                     }
-
                     If (LEqual (Local2, 0x00))
                     {
                         Store (0x00, Local7)
@@ -23723,21 +22049,18 @@
                         While (LLess (Local4, 0x29))
                         {
                             Store (DerefOf (Index (DerefOf (Index (BSSS, Local4)), 0x00)), 
-                                ST14) /* \_SB_.ST14 */
+                                ST14)
                             Store (ST14, Debug)
                             If (\SRCM (ST01, ST14, SizeOf (ST14)))
                             {
                                 Store (0x29, Local4)
                                 Store (0x02, Local2)
                             }
-
                             Increment (Local7)
                             Increment (Local4)
                         }
-
                         Decrement (Local7)
                     }
-
                     If (LEqual (Local2, 0x01))
                     {
                         Store ("Setting belongs to enumeration class", Debug)
@@ -23749,12 +22072,11 @@
                                 {
                                     Store (0x05, Index (FLAG, 0x00))
                                 }
-
                                 If (\SRCM (ST02, LLCK, 0x04))
                                 {
                                     Store (0x00, Local6)
                                     Store (0x00, Index (FLAG, 0x00))
-                                    Store (0x00, FMOD) /* \FMOD */
+                                    Store (0x00, FMOD)
                                 }
                             }
                         }
@@ -23768,33 +22090,28 @@
                                 }
                             }
                         }
-
                         If (\SRCM (ST02, ONON, 0x02))
                         {
                             Store (0x01, Local6)
                             Store (0x00, Index (FLAG, 0x00))
                         }
-
                         If (\SRCM (ST02, OFOF, 0x03))
                         {
                             Store (0x00, Local6)
                             Store (0x00, Index (FLAG, 0x00))
                         }
-
                         If (\SRCM (ST02, YESY, 0x03))
                         {
                             Store (0x01, Local6)
                             Store (0x00, Index (FLAG, 0x00))
                             Store (0x01, Index (PCHG, 0x00))
                         }
-
                         If (\SRCM (ST02, NONO, 0x02))
                         {
                             Store (0x00, Local6)
                             Store (0x00, Index (FLAG, 0x00))
                             Store (0x01, Index (PCHG, 0x00))
                         }
-
                         If (\SRCM (ST02, DFLT, SizeOf (DFLT)))
                         {
                             Store (0x00, Local6)
@@ -23809,7 +22126,6 @@
                                 Store (0x01, Index (PCHG, 0x00))
                             }
                         }
-
                         If (\SRCM (ST02, VIEW, SizeOf (VIEW)))
                         {
                             Store (0x01, Local6)
@@ -23824,7 +22140,6 @@
                                 Store (0x01, Index (PCHG, 0x00))
                             }
                         }
-
                         If (\SRCM (ST02, CHGE, SizeOf (CHGE)))
                         {
                             Store (0x02, Local6)
@@ -23839,7 +22154,6 @@
                                 Store (0x01, Index (PCHG, 0x00))
                             }
                         }
-
                         If (\SRCM (ST02, HIDE, SizeOf (HIDE)))
                         {
                             Store (0x03, Local6)
@@ -23854,7 +22168,6 @@
                                 Store (0x01, Index (PCHG, 0x00))
                             }
                         }
-
                         If (LOr (\SRCM (ST01, "Language", 0x08), \SRCM (ST01, "Restore Defaults", 0x10)))
                         {
                             Store (0x00, Index (PCHG, 0x00))
@@ -23866,7 +22179,6 @@
                                 Store (0x00, Index (PCHG, 0x00))
                             }
                         }
-
                         If (LEqual (DerefOf (Index (PCHG, 0x00)), 0x01))
                         {
                             Store (0x01, Local1)
@@ -23877,16 +22189,14 @@
                                     Store (0x00, Local1)
                                 }
                             }
-
                             Store ("Setting has a dependency ", Debug)
                             If (LAnd (Local1, LEqual (ISSP (), 0x00)))
                             {
                                 Store ("BIOS Admin and/or PT user present", Debug)
-                                Store (0x8001, STAT) /* \STAT */
-                                Return (STAT) /* \STAT */
+                                Store (0x8001, STAT)
+                                Return (STAT)
                             }
                         }
-
                         If (\SRCM (ST02, ST06, SizeOf (ST06)))
                         {
                             Store (0x01, Local6)
@@ -23909,20 +22219,17 @@
                                         Store (0x00, Local6)
                                         Store (0x00, Index (FLAG, 0x00))
                                     }
-
                                     If (\SRCM (ST02, "Boot to Network", 0x0F))
                                     {
                                         Store (0x01, Local6)
                                         Store (0x00, Index (FLAG, 0x00))
                                     }
-
                                     If (\SRCM (ST02, "Follow Boot Order", 0x11))
                                     {
                                         Store (0x02, Local6)
                                         Store (0x00, Index (FLAG, 0x00))
                                     }
                                 }
-
                                 If (\SRCM (ST01, "Parallel port mode", 0x12))
                                 {
                                     If (\SRCM (ST02, "Standard", 0x08))
@@ -23930,26 +22237,22 @@
                                         Store (0x02, Local6)
                                         Store (0x00, Index (FLAG, 0x00))
                                     }
-
                                     If (\SRCM (ST02, "Bidirectional", 0x0D))
                                     {
                                         Store (0x01, Local6)
                                         Store (0x00, Index (FLAG, 0x00))
                                     }
-
                                     If (\SRCM (ST02, "EPP", 0x03))
                                     {
                                         Store (0x00, Local6)
                                         Store (0x00, Index (FLAG, 0x00))
                                     }
-
                                     If (\SRCM (ST02, "ECP", 0x03))
                                     {
                                         Store (0x04, Local6)
                                         Store (0x00, Index (FLAG, 0x00))
                                     }
                                 }
-
                                 If (\SRCM (ST01, "Startup Menu Delay (Sec.)", 0x18))
                                 {
                                     If (\SRCM (ST02, "0", 0x01))
@@ -23957,50 +22260,42 @@
                                         Store (0x00, Local6)
                                         Store (0x00, Index (FLAG, 0x00))
                                     }
-
                                     If (\SRCM (ST02, "5", 0x01))
                                     {
                                         Store (0x01, Local6)
                                         Store (0x00, Index (FLAG, 0x00))
                                     }
-
                                     If (\SRCM (ST02, "10", 0x02))
                                     {
                                         Store (0x02, Local6)
                                         Store (0x00, Index (FLAG, 0x00))
                                     }
-
                                     If (\SRCM (ST02, "15", 0x02))
                                     {
                                         Store (0x03, Local6)
                                         Store (0x00, Index (FLAG, 0x00))
                                     }
-
                                     If (\SRCM (ST02, "20", 0x02))
                                     {
                                         Store (0x04, Local6)
                                         Store (0x00, Index (FLAG, 0x00))
                                     }
-
                                     If (\SRCM (ST02, "25", 0x02))
                                     {
                                         Store (0x05, Local6)
                                         Store (0x00, Index (FLAG, 0x00))
                                     }
-
                                     If (\SRCM (ST02, "30", 0x02))
                                     {
                                         Store (0x06, Local6)
                                         Store (0x00, Index (FLAG, 0x00))
                                     }
-
                                     If (\SRCM (ST02, "35", 0x02))
                                     {
                                         Store (0x07, Local6)
                                         Store (0x00, Index (FLAG, 0x00))
                                     }
                                 }
-
                                 If (\SRCM (ST01, "Multiboot Express Popup Delay(Sec)", 0x22))
                                 {
                                     If (\SRCM (ST02, "0", 0x01))
@@ -24008,50 +22303,42 @@
                                         Store (0x00, Local6)
                                         Store (0x00, Index (FLAG, 0x00))
                                     }
-
                                     If (\SRCM (ST02, "5", 0x01))
                                     {
                                         Store (0x01, Local6)
                                         Store (0x00, Index (FLAG, 0x00))
                                     }
-
                                     If (\SRCM (ST02, "10", 0x02))
                                     {
                                         Store (0x02, Local6)
                                         Store (0x00, Index (FLAG, 0x00))
                                     }
-
                                     If (\SRCM (ST02, "15", 0x02))
                                     {
                                         Store (0x03, Local6)
                                         Store (0x00, Index (FLAG, 0x00))
                                     }
-
                                     If (\SRCM (ST02, "20", 0x02))
                                     {
                                         Store (0x04, Local6)
                                         Store (0x00, Index (FLAG, 0x00))
                                     }
-
                                     If (\SRCM (ST02, "25", 0x02))
                                     {
                                         Store (0x05, Local6)
                                         Store (0x00, Index (FLAG, 0x00))
                                     }
-
                                     If (\SRCM (ST02, "30", 0x02))
                                     {
                                         Store (0x06, Local6)
                                         Store (0x00, Index (FLAG, 0x00))
                                     }
-
                                     If (\SRCM (ST02, "35", 0x02))
                                     {
                                         Store (0x07, Local6)
                                         Store (0x00, Index (FLAG, 0x00))
                                     }
                                 }
-
                                 If (\SRCM (ST01, "Internal Network Adapter Boot Mode", 0x22))
                                 {
                                     If (\SRCM (ST02, "PXE", 0x03))
@@ -24059,14 +22346,12 @@
                                         Store (0x00, Local6)
                                         Store (0x00, Index (FLAG, 0x00))
                                     }
-
                                     If (\SRCM (ST02, "RPL", 0x03))
                                     {
                                         Store (0x01, Local6)
                                         Store (0x00, Index (FLAG, 0x00))
                                     }
                                 }
-
                                 If (\SRCM (ST01, "Virtualization Technology", 0x19))
                                 {
                                     If (\SRCM (ST02, "Reset to default", 0x10))
@@ -24075,7 +22360,6 @@
                                         Store (0x00, Index (FLAG, 0x00))
                                     }
                                 }
-
                                 If (\SRCM (ST01, "Virtualization Technology for Directed I/O", 0x2A))
                                 {
                                     If (\SRCM (ST02, "Reset to default", 0x10))
@@ -24084,7 +22368,6 @@
                                         Store (0x00, Index (FLAG, 0x00))
                                     }
                                 }
-
                                 If (\SRCM (ST01, "Disable charging port in all sleep/off states below(%):", 0x37))
                                 {
                                     If (\SRCM (ST02, "0", 0x01))
@@ -24092,68 +22375,57 @@
                                         Store (0x00, Local6)
                                         Store (0x00, Index (FLAG, 0x00))
                                     }
-
                                     If (\SRCM (ST02, "10", 0x02))
                                     {
                                         Store (0x01, Local6)
                                         Store (0x00, Index (FLAG, 0x00))
                                     }
-
                                     If (\SRCM (ST02, "20", 0x02))
                                     {
                                         Store (0x02, Local6)
                                         Store (0x00, Index (FLAG, 0x00))
                                     }
-
                                     If (\SRCM (ST02, "30", 0x02))
                                     {
                                         Store (0x03, Local6)
                                         Store (0x00, Index (FLAG, 0x00))
                                     }
-
                                     If (\SRCM (ST02, "40", 0x02))
                                     {
                                         Store (0x04, Local6)
                                         Store (0x00, Index (FLAG, 0x00))
                                     }
-
                                     If (\SRCM (ST02, "50", 0x02))
                                     {
                                         Store (0x05, Local6)
                                         Store (0x00, Index (FLAG, 0x00))
                                     }
-
                                     If (\SRCM (ST02, "60", 0x02))
                                     {
                                         Store (0x06, Local6)
                                         Store (0x00, Index (FLAG, 0x00))
                                     }
-
                                     If (\SRCM (ST02, "70", 0x02))
                                     {
                                         Store (0x07, Local6)
                                         Store (0x00, Index (FLAG, 0x00))
                                     }
-
                                     If (\SRCM (ST02, "80", 0x02))
                                     {
                                         Store (0x08, Local6)
                                         Store (0x00, Index (FLAG, 0x00))
                                     }
-
                                     If (\SRCM (ST02, "90", 0x02))
                                     {
                                         Store (0x09, Local6)
                                         Store (0x00, Index (FLAG, 0x00))
                                     }
-
                                     If (\SRCM (ST02, "100", 0x03))
                                     {
                                         Store (0x0A, Local6)
                                         Store (0x00, Index (FLAG, 0x00))
                                     }
                                 }
-
                                 If (\SRCM (ST01, "SATA Device Mode", 0x10))
                                 {
                                     If (\SRCM (ST02, "AHCI", 0x04))
@@ -24161,20 +22433,17 @@
                                         Store (0x01, Local6)
                                         Store (0x00, Index (FLAG, 0x00))
                                     }
-
                                     If (\SRCM (ST02, "IDE", 0x03))
                                     {
                                         Store (0x00, Local6)
                                         Store (0x00, Index (FLAG, 0x00))
                                     }
-
                                     If (LAnd (RDSP, \SRCM (ST02, "RAID", 0x04)))
                                     {
                                         Store (0x02, Local6)
                                         Store (0x00, Index (FLAG, 0x00))
                                     }
                                 }
-
                                 If (\SRCM (ST01, "Embedded Security Device Availability", 0x25))
                                 {
                                     If (\SRCM (ST02, "Available", 0x09))
@@ -24182,14 +22451,12 @@
                                         Store (0x01, Local6)
                                         Store (0x00, Index (FLAG, 0x00))
                                     }
-
                                     If (\SRCM (ST02, "Hidden", 0x06))
                                     {
                                         Store (0x00, Local6)
                                         Store (0x00, Index (FLAG, 0x00))
                                     }
                                 }
-
                                 If (\SRCM (ST01, "Embedded Security Activation Policy", 0x23))
                                 {
                                     If (\SRCM (ST02, "F1 to Boot", 0x0A))
@@ -24197,20 +22464,17 @@
                                         Store (0x00, Local6)
                                         Store (0x00, Index (FLAG, 0x00))
                                     }
-
                                     If (\SRCM (ST02, "Allow user to reject", 0x14))
                                     {
                                         Store (0x01, Local6)
                                         Store (0x00, Index (FLAG, 0x00))
                                     }
-
                                     If (\SRCM (ST02, "No prompts", 0x0A))
                                     {
                                         Store (0x02, Local6)
                                         Store (0x00, Index (FLAG, 0x00))
                                     }
                                 }
-
                                 If (\SRCM (ST01, "Terminal Emulation Mode", 0x17))
                                 {
                                     If (\SRCM (ST02, "ANSI", 0x04))
@@ -24218,14 +22482,12 @@
                                         Store (0x02, Local6)
                                         Store (0x00, Index (FLAG, 0x00))
                                     }
-
                                     If (\SRCM (ST02, "VT100", 0x05))
                                     {
                                         Store (0x01, Local6)
                                         Store (0x00, Index (FLAG, 0x00))
                                     }
                                 }
-
                                 If (\SRCM (ST01, "Language", 0x08))
                                 {
                                     If (\SRCM (ST02, "English", 0x07))
@@ -24233,74 +22495,62 @@
                                         Store (0x00, Local6)
                                         Store (0x00, Index (FLAG, 0x00))
                                     }
-
                                     If (\SRCM (ST02, "Francais", 0x08))
                                     {
                                         Store (0x01, Local6)
                                         Store (0x00, Index (FLAG, 0x00))
                                     }
-
                                     If (\SRCM (ST02, "Deutsch", 0x07))
                                     {
                                         Store (0x02, Local6)
                                         Store (0x00, Index (FLAG, 0x00))
                                     }
-
                                     If (\SRCM (ST02, "Espanol", 0x07))
                                     {
                                         Store (0x03, Local6)
                                         Store (0x00, Index (FLAG, 0x00))
                                     }
-
                                     If (\SRCM (ST02, "Italiano", 0x08))
                                     {
                                         Store (0x04, Local6)
                                         Store (0x00, Index (FLAG, 0x00))
                                     }
-
                                     If (\SRCM (ST02, "Dansk", 0x05))
                                     {
                                         Store (0x05, Local6)
                                         Store (0x00, Index (FLAG, 0x00))
                                     }
-
                                     If (\SRCM (ST02, "Nederlands", 0x0A))
                                     {
                                         Store (0x06, Local6)
                                         Store (0x00, Index (FLAG, 0x00))
                                     }
-
                                     If (\SRCM (ST02, "Suomi", 0x05))
                                     {
                                         Store (0x07, Local6)
                                         Store (0x00, Index (FLAG, 0x00))
                                     }
-
                                     If (\SRCM (ST02, "Japanese", 0x08))
                                     {
                                         Store (0x08, Local6)
                                         Store (0x00, Index (FLAG, 0x00))
                                     }
-
                                     If (\SRCM (ST02, "Norsk", 0x05))
                                     {
                                         Store (0x09, Local6)
                                         Store (0x00, Index (FLAG, 0x00))
                                     }
-
                                     If (\SRCM (ST02, "Portugues", 0x09))
                                     {
                                         Store (0x0A, Local6)
                                         Store (0x00, Index (FLAG, 0x00))
                                     }
-
                                     If (\SRCM (ST02, "Svenska", 0x07))
                                     {
                                         Store (0x0B, Local6)
                                         Store (0x00, Index (FLAG, 0x00))
                                     }
                                 }
-
                                 If (\SRCM (ST01, "NumLock on at boot", 0x12))
                                 {
                                     If (\SRCM (ST02, "On", 0x02))
@@ -24308,14 +22558,12 @@
                                         Store (0x01, Local6)
                                         Store (0x00, Index (FLAG, 0x00))
                                     }
-
                                     If (\SRCM (ST02, "Off", 0x03))
                                     {
                                         Store (0x00, Local6)
                                         Store (0x00, Index (FLAG, 0x00))
                                     }
                                 }
-
                                 If (\SRCM (ST01, "Backlit Keyboard Timeout", 0x18))
                                 {
                                     Store ("Backlit Keyboard Timeout values  ", Debug)
@@ -24324,38 +22572,32 @@
                                         Store (0x00, Local6)
                                         Store (0x00, Index (FLAG, 0x00))
                                     }
-
                                     If (\SRCM (ST02, "15 secs.", 0x08))
                                     {
                                         Store (0x01, Local6)
                                         Store (0x00, Index (FLAG, 0x00))
                                     }
-
                                     If (\SRCM (ST02, "30 secs.", 0x08))
                                     {
                                         Store (0x02, Local6)
                                         Store (0x00, Index (FLAG, 0x00))
                                     }
-
                                     If (\SRCM (ST02, "1 min.", 0x06))
                                     {
                                         Store (0x03, Local6)
                                         Store (0x00, Index (FLAG, 0x00))
                                     }
-
                                     If (\SRCM (ST02, "5 mins.", 0x07))
                                     {
                                         Store (0x04, Local6)
                                         Store (0x00, Index (FLAG, 0x00))
                                     }
-
                                     If (\SRCM (ST02, "Never", 0x08))
                                     {
                                         Store (0x05, Local6)
                                         Store (0x00, Index (FLAG, 0x00))
                                     }
                                 }
-
                                 If (\SRCM (ST01, "Express Card Link Speed", 0x17))
                                 {
                                     If (\SRCM (ST02, "Generation 1", 0x0C))
@@ -24363,14 +22605,12 @@
                                         Store (0x01, Local6)
                                         Store (0x00, Index (FLAG, 0x00))
                                     }
-
                                     If (\SRCM (ST02, "Generation 2", 0x0C))
                                     {
                                         Store (0x00, Local6)
                                         Store (0x00, Index (FLAG, 0x00))
                                     }
                                 }
-
                                 If (\SRCM (ST01, "DriveLock password on restart", 0x1D))
                                 {
                                     If (\SRCM (ST02, "Enabled", 0x07))
@@ -24378,14 +22618,12 @@
                                         Store (0x01, Local6)
                                         Store (0x00, Index (FLAG, 0x00))
                                     }
-
                                     If (\SRCM (ST02, "Disabled", 0x08))
                                     {
                                         Store (0x00, Local6)
                                         Store (0x00, Index (FLAG, 0x00))
                                     }
                                 }
-
                                 If (\SRCM (ST01, "Restore Defaults", 0x10))
                                 {
                                     If (\SRCM (ST02, "Yes", 0x03))
@@ -24397,18 +22635,16 @@
                                         {
                                             Store ("SUCCESS from SMI !", Debug)
                                             Store (0x00, Index (ETYP, 0x00))
-                                            Notify (\_SB.WMID, 0xA0) // Device-Specific
+                                            Notify (\_SB.WMID, 0xA0)
                                         }
-
                                         If (LEqual (STAT, 0x06))
                                         {
                                             Store ("ACCESS_DENIED error from SMI ", Debug)
                                             Store (0x01, Index (ETYP, 0x00))
-                                            Notify (\_SB.WMID, 0xA0) // Device-Specific
+                                            Notify (\_SB.WMID, 0xA0)
                                         }
                                     }
                                 }
-
                                 If (\SRCM (ST01, "Max SATA Speed", 0x0E))
                                 {
                                     If (\SRCM (ST02, "6.0 Gbps", 0x08))
@@ -24416,7 +22652,6 @@
                                         Store (0x00, Local6)
                                         Store (0x00, Index (FLAG, 0x00))
                                     }
-
                                     If (\SRCM (ST02, "3.0 Gbps", 0x08))
                                     {
                                         Store (0x01, Local6)
@@ -24425,12 +22660,10 @@
                                 }
                             }
                         }
-
                         And (Local6, 0xFF, Local6)
                         Store (0x01, Local3)
                         Or (ShiftLeft (Local3, 0x08), Local6, Local6)
                     }
-
                     If (LEqual (Local2, 0x02))
                     {
                         Store ("Setting belongs to string class", Debug)
@@ -24442,32 +22675,27 @@
                             {
                                 If (\SRCM (ST01, DerefOf (Index (MPMS, Local4)), SizeOf (ST01)))
                                 {
-                                    Store (0x01, STAT) /* \STAT */
-                                    Return (STAT) /* \STAT */
+                                    Store (0x01, STAT)
+                                    Return (STAT)
                                 }
-
                                 Increment (Local4)
                             }
-
                             Store (0x00, Local4)
                         }
-
                         While (LLess (Local4, SizeOf (TROS)))
                         {
                             If (\SRCM (ST01, DerefOf (Index (TROS, Local4)), SizeOf (ST01)))
                             {
-                                Store (0x01, STAT) /* \STAT */
-                                Return (STAT) /* \STAT */
+                                Store (0x01, STAT)
+                                Return (STAT)
                             }
-
                             Increment (Local4)
                         }
-
                         Store (0x00, Local4)
                         Store (0x00, Local7)
                         If (\SRCM (ST01, "Notebook Asset Tag", SizeOf (ST01)))
                         {
-                            Store (ST02, BF2S) /* \_SB_.BF2S */
+                            Store (ST02, BF2S)
                             Store (0x00, Local4)
                             Store (0x00, Local5)
                             Store (0x00, Local1)
@@ -24479,11 +22707,9 @@
                                     Store (SizeOf (ST02), Local5)
                                     Decrement (Local5)
                                 }
-
                                 Increment (Local4)
                                 Increment (Local5)
                             }
-
                             Decrement (Local4)
                             If (LGreater (Local4, 0x12))
                             {
@@ -24493,13 +22719,11 @@
                             {
                                 Store (0x00, Index (FLAG, 0x00))
                             }
-
-                            Store (Local4, ASTL) /* \ASTL */
-                            Store (ST02, WATS) /* \_SB_.WATS */
-                            Store (WATS, ASTG) /* \ASTG */
-                            Store (ASTG, WTB3) /* \_SB_.WTB3 */
+                            Store (Local4, ASTL)
+                            Store (ST02, WATS)
+                            Store (WATS, ASTG)
+                            Store (ASTG, WTB3)
                         }
-
                         If (\SRCM (ST01, "Notebook Ownership Tag", SizeOf (ST01)))
                         {
                             Store (0x00, Local1)
@@ -24508,12 +22732,10 @@
                                 Store (DerefOf (Index (ST02, Local1)), Index (WONT, Local1))
                                 Increment (Local1)
                             }
-
-                            Store (WONT, OWNT) /* \OWNT */
+                            Store (WONT, OWNT)
                             Store (0x01, Local7)
                             Store (0x00, Index (FLAG, 0x00))
                         }
-
                         Store ("Checkpoint 1", Debug)
                         If (\SRCM (ST01, "Set Alarm Time", SizeOf (ST01)))
                         {
@@ -24524,13 +22746,11 @@
                                 Store (DerefOf (Index (ST02, Local1)), Index (TATM, Local1))
                                 Increment (Local1)
                             }
-
-                            Store (TATM, ATIM) /* \ATIM */
+                            Store (TATM, ATIM)
                             Store (0x03, Local7)
                             Store (0x00, Index (FLAG, 0x00))
                             Store (ATIM, Debug)
                         }
-
                         If (\SRCM (ST01, "PCID", 0x04))
                         {
                             Store ("PCID values", Debug)
@@ -24540,20 +22760,17 @@
                                 Store (0x00, Index (TPCD, Local1))
                                 Increment (Local1)
                             }
-
                             Store (0x00, Local1)
                             While (LNotEqual (Local1, 0x40))
                             {
                                 Store (DerefOf (Index (ST02, Local1)), Index (TPCD, Local1))
                                 Increment (Local1)
                             }
-
-                            Store (TPCD, PCID) /* \PCID */
+                            Store (TPCD, PCID)
                             Store (0x04, Local7)
                             Store (0x00, Index (FLAG, 0x00))
                             Store (PCID, Debug)
                         }
-
                         If (\SRCM (ST01, "Serial Number", 0x0D))
                         {
                             Store ("Serial Number", Debug)
@@ -24563,13 +22780,11 @@
                                 Store (DerefOf (Index (ST02, Local1)), Index (TBUF, Local1))
                                 Increment (Local1)
                             }
-
-                            Store (TBUF, SERL) /* \SERL */
+                            Store (TBUF, SERL)
                             Store (0x06, Local7)
                             Store (0x00, Index (FLAG, 0x00))
                             Store (SERL, Debug)
                         }
-
                         If (\SRCM (ST01, "Product Number", 0x0E))
                         {
                             Store ("Product Number", Debug)
@@ -24579,13 +22794,11 @@
                                 Store (DerefOf (Index (ST02, Local1)), Index (TSKU, Local1))
                                 Increment (Local1)
                             }
-
-                            Store (TSKU, SKUN) /* \SKUN */
+                            Store (TSKU, SKUN)
                             Store (0x07, Local7)
                             Store (0x00, Index (FLAG, 0x00))
                             Store (SKUN, Debug)
                         }
-
                         If (\SRCM (ST01, "Notebook Model", 0x0E))
                         {
                             Store ("Notebook Model", Debug)
@@ -24595,13 +22808,11 @@
                                 Store (DerefOf (Index (ST02, Local1)), Index (TBUF, Local1))
                                 Increment (Local1)
                             }
-
-                            Store (TBUF, MODL) /* \MODL */
+                            Store (TBUF, MODL)
                             Store (0x08, Local7)
                             Store (0x00, Index (FLAG, 0x00))
                             Store (MODL, Debug)
                         }
-
                         If (\SRCM (ST01, "System Board CT", 0x0F))
                         {
                             Store ("System Board CT", Debug)
@@ -24611,20 +22822,17 @@
                                 Store (0x00, Index (TBCT, Local1))
                                 Increment (Local1)
                             }
-
                             Store (0x00, Local1)
                             While (LLess (Local1, Subtract (SizeOf (TBCT), 0x01)))
                             {
                                 Store (DerefOf (Index (ST02, Local1)), Index (TBCT, Local1))
                                 Increment (Local1)
                             }
-
-                            Store (TBCT, SBCT) /* \SBCT */
+                            Store (TBCT, SBCT)
                             Store (0x09, Local7)
                             Store (0x00, Index (FLAG, 0x00))
                             Store (SBCT, Debug)
                         }
-
                         If (\SRCM (ST01, "Define Custom URL", 0x11))
                         {
                             Store ("Custom URL value", Debug)
@@ -24634,24 +22842,20 @@
                                 Store (0x00, Index (TURL, Local1))
                                 Increment (Local1)
                             }
-
                             Store (0x00, Local1)
                             While (LNotEqual (Local1, 0x82))
                             {
                                 Store (DerefOf (Index (ST02, Local1)), Index (TURL, Local1))
                                 Increment (Local1)
                             }
-
-                            Store (TURL, CURL) /* \CURL */
+                            Store (TURL, CURL)
                             Store (0x05, Local7)
                             Store (0x00, Index (FLAG, 0x00))
                             Store (CURL, Debug)
                         }
-
                         Store (0x02, Local6)
                         ShiftLeft (Local6, 0x08, Local6)
                     }
-
                     If (LEqual (Local2, 0x03))
                     {
                         Store ("Setting belongs to ordered list class", Debug)
@@ -24664,7 +22868,7 @@
                         Store (0x00, Local7)
                         \_SB.SSMI (0xEA7B, 0x00, 0x03, 0x00, 0x00)
                         Store (0x00, Local2)
-                        Store (BORD, WSIP) /* \_SB_.WSIP */
+                        Store (BORD, WSIP)
                         Store (GBID (), Local1)
                         Store (0x00, Index (DVAL, 0x00))
                         While (LLess (Local2, 0x64))
@@ -24679,11 +22883,9 @@
                                     Store (0x01, Index (DVAL, 0x00))
                                     Store (Subtract (0x09, 0x01), Local6)
                                 }
-
                                 Increment (Local5)
                                 Increment (Local6)
                             }
-
                             Decrement (Local5)
                             If (LEqual (DerefOf (Index (DVAL, 0x00)), 0x01))
                             {
@@ -24695,22 +22897,18 @@
                                     Decrement (Local5)
                                     Decrement (Local4)
                                 }
-
                                 Store (DerefOf (Index (BOID, Local2)), Index (WSIP, Local3))
                                 Increment (Local3)
                             }
-
                             Increment (Local2)
                             Store (0x00, Index (DVAL, 0x00))
                         }
-
-                        Store (WSIP, BORD) /* \BORD */
+                        Store (WSIP, BORD)
                         Store (0x00, Index (FLAG, 0x00))
                         Store (0x00, Local7)
                         Store (0x03, Local6)
                         ShiftLeft (Local6, 0x08, Local6)
                     }
-
                     If (LEqual (Local2, 0x08))
                     {
                         Store ("Setting belongs to uefi ordered list class", Debug)
@@ -24723,7 +22921,7 @@
                         Store (0x00, Local7)
                         \_SB.SSMI (0xEA7B, 0x00, 0x08, 0x00, 0x00)
                         Store (0x00, Local2)
-                        Store (WUFI, SUIP) /* \_SB_.SUIP */
+                        Store (WUFI, SUIP)
                         Store (GBID (), Local1)
                         Store (0x00, Index (DVAL, 0x00))
                         While (LLess (Local2, 0x64))
@@ -24738,11 +22936,9 @@
                                     Store (0x01, Index (DVAL, 0x00))
                                     Store (Subtract (0x03, 0x01), Local6)
                                 }
-
                                 Increment (Local5)
                                 Increment (Local6)
                             }
-
                             Decrement (Local5)
                             If (LEqual (DerefOf (Index (DVAL, 0x00)), 0x01))
                             {
@@ -24754,16 +22950,13 @@
                                     Decrement (Local5)
                                     Decrement (Local4)
                                 }
-
                                 Store (DerefOf (Index (BOID, Local2)), Index (SUIP, Local3))
                                 Increment (Local3)
                             }
-
                             Increment (Local2)
                             Store (0x00, Index (DVAL, 0x00))
                         }
-
-                        Store (SUIP, WUFI) /* \WUFI */
+                        Store (SUIP, WUFI)
                         Store ("UEFI Boot order to SMI =", Debug)
                         Store (WUFI, Debug)
                         Store (0x00, Index (FLAG, 0x00))
@@ -24771,20 +22964,17 @@
                         Store (0x08, Local6)
                         ShiftLeft (Local6, 0x08, Local6)
                     }
-
                     If (LEqual (Local2, 0x00))
                     {
-                        Store (0x01, STAT) /* \STAT */
+                        Store (0x01, STAT)
                         Store ("Setting not found !", Debug)
-                        Return (STAT) /* \STAT */
+                        Return (STAT)
                     }
-
                     If (LEqual (DerefOf (Index (FLAG, 0x00)), 0x05))
                     {
-                        Store (0x05, STAT) /* \STAT */
-                        Return (STAT) /* \STAT */
+                        Store (0x05, STAT)
+                        Return (STAT)
                     }
-
                     If (LNotEqual (Local2, 0x00))
                     {
                         Store ("Issuing SW SMI ", Debug)
@@ -24793,20 +22983,17 @@
                         {
                             Store ("SUCCESS from SMI !", Debug)
                             Store (0x00, Index (ETYP, 0x00))
-                            Notify (\_SB.WMID, 0xA0) // Device-Specific
+                            Notify (\_SB.WMID, 0xA0)
                         }
-
                         If (LEqual (STAT, 0x06))
                         {
                             Store ("ACCESS_DENIED error from SMI ", Debug)
                             Store (0x01, Index (ETYP, 0x00))
-                            Notify (\_SB.WMID, 0xA0) // Device-Specific
+                            Notify (\_SB.WMID, 0xA0)
                         }
                     }
-
-                    Return (STAT) /* \STAT */
+                    Return (STAT)
                 }
-
                 If (LEqual (Arg1, 0x02))
                 {
                     Store ("Enter restore defaults ", Debug)
@@ -24829,8 +23016,7 @@
                             Increment (Local5)
                             Increment (Local6)
                         }
-
-                        Store (PCBF, OAPW) /* \OAPW */
+                        Store (PCBF, OAPW)
                         Store (DerefOf (Index (Local0, Local2)), Local4)
                         Increment (Local2)
                         Increment (Local2)
@@ -24846,7 +23032,6 @@
                             Increment (Local5)
                         }
                     }
-
                     If (\SRCM (STG1, "true", 0x04))
                     {
                         Store ("Policy defaults true ", Debug)
@@ -24855,17 +23040,15 @@
                         {
                             Store ("SUCCESS from SMI !", Debug)
                             Store (0x00, Index (ETYP, 0x00))
-                            Notify (\_SB.WMID, 0xA0) // Device-Specific
+                            Notify (\_SB.WMID, 0xA0)
                         }
-
                         If (LEqual (STAT, 0x06))
                         {
                             Store ("ACCESS_DENIED error from SMI ", Debug)
                             Store (0x01, Index (ETYP, 0x00))
-                            Notify (\_SB.WMID, 0xA0) // Device-Specific
+                            Notify (\_SB.WMID, 0xA0)
                         }
-
-                        Return (STAT) /* \STAT */
+                        Return (STAT)
                     }
                     Else
                     {
@@ -24875,64 +23058,56 @@
                         {
                             Store ("SUCCESS from SMI !", Debug)
                             Store (0x00, Index (ETYP, 0x00))
-                            Notify (\_SB.WMID, 0xA0) // Device-Specific
+                            Notify (\_SB.WMID, 0xA0)
                         }
-
                         If (LEqual (STAT, 0x06))
                         {
                             Store ("ACCESS_DENIED error from SMI ", Debug)
                             Store (0x01, Index (ETYP, 0x00))
-                            Notify (\_SB.WMID, 0xA0) // Device-Specific
+                            Notify (\_SB.WMID, 0xA0)
                         }
-
-                        Return (STAT) /* \STAT */
+                        Return (STAT)
                     }
                 }
                 Else
                 {
-                    Store (0x05, STAT) /* \STAT */
-                    Return (STAT) /* \STAT */
+                    Store (0x05, STAT)
+                    Return (STAT)
                 }
             }
-
             Method (IBUF, 0, NotSerialized)
             {
                 Store (0x00, Local3)
-                Store (0x05, STAT) /* \STAT */
+                Store (0x05, STAT)
                 While (LNotEqual (Local3, SizeOf (ST01)))
                 {
                     Store (0x00, Index (ST01, Local3))
                     Increment (Local3)
                 }
-
                 Store (0x00, Local3)
                 While (LNotEqual (Local3, SizeOf (ST02)))
                 {
                     Store (0x00, Index (ST02, Local3))
                     Increment (Local3)
                 }
-
                 Store (0x00, Local3)
                 While (LNotEqual (Local3, SizeOf (ST03)))
                 {
                     Store (0x00, Index (ST03, Local3))
                     Increment (Local3)
                 }
-
                 Store (0x00, Local3)
                 While (LNotEqual (Local3, SizeOf (BOIN)))
                 {
                     Store (0x00, Index (BOIN, Local3))
                     Increment (Local3)
                 }
-
                 Store (0x00, Local3)
                 While (LNotEqual (Local3, SizeOf (BOID)))
                 {
                     Store (0xFF, Index (BOID, Local3))
                     Increment (Local3)
                 }
-
                 Store (0x00, Local3)
                 While (LNotEqual (Local3, SizeOf (WSPS)))
                 {
@@ -24942,47 +23117,40 @@
                     Store (0x00, Index (WNPP, Local3))
                     Increment (Local3)
                 }
-
                 Store (0x00, Local3)
                 While (LNotEqual (Local3, SizeOf (PCBF)))
                 {
                     Store (0x00, Index (PCBF, Local3))
                     Increment (Local3)
                 }
-
                 Store (0x00, Local3)
                 While (LNotEqual (Local3, SizeOf (ST11)))
                 {
                     Store (0x00, Index (ST11, Local3))
                     Increment (Local3)
                 }
-
-                Store (WSPS, OAPW) /* \OAPW */
-                Store (WNWP, NAPW) /* \NAPW */
+                Store (WSPS, OAPW)
+                Store (WNWP, NAPW)
                 Store (0x00, Local3)
                 While (LNotEqual (Local3, SizeOf (BVAL)))
                 {
                     Store (0x00, Index (BVAL, Local3))
                     Increment (Local3)
                 }
-
                 Store (0x00, Local3)
                 While (LNotEqual (Local3, SizeOf (BF01)))
                 {
                     Store (0x00, Index (BF01, Local3))
                     Increment (Local3)
                 }
-
                 Store (0x00, Local3)
                 While (LNotEqual (Local3, 0x03))
                 {
                     Store (0x00, Index (SUIP, Local3))
                     Increment (Local3)
                 }
-
                 Return (0x00)
             }
-
             Method (WMAC, 3, NotSerialized)
             {
                 If (LEqual (Arg1, 0x01))
@@ -24998,17 +23166,15 @@
                     Store (0x00, Local3)
                     If (LGreater (Local4, 0x40))
                     {
-                        Store (0x05, STAT) /* \STAT */
-                        Return (STAT) /* \STAT */
+                        Store (0x05, STAT)
+                        Return (STAT)
                     }
-
                     Store (0x00, Local3)
                     While (LNotEqual (Local3, SizeOf (BUFU)))
                     {
                         Store (0x00, Index (BUFU, Local3))
                         Increment (Local3)
                     }
-
                     Divide (Local4, 0x02, Local3, Local1)
                     Store (0x00, Local3)
                     While (LNotEqual (Local5, Local4))
@@ -25020,7 +23186,6 @@
                         Increment (Local2)
                         Increment (Local5)
                     }
-
                     And (Local1, 0x01, Local5)
                     If (LEqual (Local5, 0x00))
                     {
@@ -25028,25 +23193,24 @@
                         Increment (Local2)
                         Increment (Local2)
                     }
-
-                    Store (BUFU, USRN) /* \USRN */
+                    Store (BUFU, USRN)
                     Store (0x00, Local5)
                     Store (0x00, Local6)
                     CreateDWordField (Local0, Local2, WROL)
-                    Store (WROL, ROLE) /* \ROLE */
+                    Store (WROL, ROLE)
                     Add (Local2, 0x04, Local2)
                     CreateDWordField (Local0, Local2, WCMD)
-                    Store (WCMD, CMDV) /* \CMDV */
+                    Store (WCMD, CMDV)
                     Add (Local2, 0x04, Local2)
                     CreateDWordField (Local0, Local2, WKBD)
-                    Store (WKBD, KBDL) /* \KBDL */
+                    Store (WKBD, KBDL)
                     Add (Local2, 0x04, Local2)
                     Store (DerefOf (Index (Local0, Local2)), Local4)
                     Increment (Local2)
                     Increment (Local2)
                     Store (ZPBF (), Local3)
-                    Store (PCBF, OAPW) /* \OAPW */
-                    Store (PCBF, NAPW) /* \NAPW */
+                    Store (PCBF, OAPW)
+                    Store (PCBF, NAPW)
                     Store (0x00, Local5)
                     Store (0x00, Local6)
                     Store (0x00, Local3)
@@ -25057,8 +23221,7 @@
                         Increment (Local5)
                         Increment (Local6)
                     }
-
-                    Store (PCBF, OAPW) /* \OAPW */
+                    Store (PCBF, OAPW)
                     Store (DerefOf (Index (Local0, Local2)), Local4)
                     Increment (Local2)
                     Increment (Local2)
@@ -25072,32 +23235,28 @@
                         Increment (Local5)
                         Increment (Local6)
                     }
-
-                    Store (PCBF, NAPW) /* \NAPW */
+                    Store (PCBF, NAPW)
                     \_SB.SSMI (0xEA7B, 0x03, CMDV, 0x00, 0x00)
                     If (LEqual (STAT, 0x00))
                     {
                         Store ("SUCCESS from SMI !", Debug)
                         Store (0x00, Index (ETYP, 0x00))
-                        Notify (\_SB.WMID, 0xA0) // Device-Specific
+                        Notify (\_SB.WMID, 0xA0)
                     }
-
                     If (LEqual (STAT, 0x06))
                     {
                         Store ("ACCESS_DENIED error from SMI ", Debug)
                         Store (0x01, Index (ETYP, 0x00))
-                        Notify (\_SB.WMID, 0xA0) // Device-Specific
+                        Notify (\_SB.WMID, 0xA0)
                     }
-
-                    Return (STAT) /* \STAT */
+                    Return (STAT)
                 }
                 Else
                 {
-                    Store (0x05, STAT) /* \STAT */
-                    Return (STAT) /* \STAT */
+                    Store (0x05, STAT)
+                    Return (STAT)
                 }
             }
-
             Method (STLN, 1, NotSerialized)
             {
                 Store (Arg0, Local0)
@@ -25114,10 +23273,8 @@
                         Increment (Local1)
                     }
                 }
-
                 Return (Local1)
             }
-
             Method (HDDL, 4, NotSerialized)
             {
                 Store (Arg0, Local0)
@@ -25133,8 +23290,7 @@
                     Increment (Local5)
                     Increment (Local6)
                 }
-
-                Store (PCBF, NAPW) /* \NAPW */
+                Store (PCBF, NAPW)
                 Store (DerefOf (Index (Local0, Local2)), Local4)
                 Increment (Local2)
                 Increment (Local2)
@@ -25148,8 +23304,7 @@
                     Increment (Local5)
                     Increment (Local6)
                 }
-
-                Store (PCBF, OAPW) /* \OAPW */
+                Store (PCBF, OAPW)
                 Store (OAPW, Debug)
                 Store (NAPW, Debug)
                 \_SB.SSMI (0xEA7B, 0x01, Local3, 0x0700, 0x00)
@@ -25157,62 +23312,54 @@
                 {
                     Store ("SUCCESS from SMI !", Debug)
                     Store (0x00, Index (ETYP, 0x00))
-                    Notify (\_SB.WMID, 0xA0) // Device-Specific
+                    Notify (\_SB.WMID, 0xA0)
                 }
                 Else
                 {
                     Store ("Error from SMI !", Debug)
                 }
-
                 If (LEqual (STAT, 0x06))
                 {
                     Store ("ACCESS_DENIED error from SMI ", Debug)
                     Store (0x01, Index (ETYP, 0x00))
-                    Notify (\_SB.WMID, 0xA0) // Device-Specific
+                    Notify (\_SB.WMID, 0xA0)
                 }
-
-                Return (STAT) /* \STAT */
+                Return (STAT)
             }
-
             Name (THCT, Buffer (0x06)
             {
-                 0x01, 0x01, 0x03, 0x01, 0x01, 0x02               /* ...... */
+                 0x01, 0x01, 0x03, 0x01, 0x01, 0x02
             })
             Name (PRFI, Buffer (0x06)
             {
-                 0x00, 0x08, 0x0C, 0x14, 0x18, 0x1C               /* ...... */
+                 0x00, 0x08, 0x0C, 0x14, 0x18, 0x1C
             })
             Name (TSTM, 0x00)
             Name (TSTV, Package (0x06)
             {
                 Buffer (0x01)
                 {
-                     0xFF                                             /* . */
+                     0xFF
                 }, 
-
                 Buffer (0x01)
                 {
-                     0xFF                                             /* . */
+                     0xFF
                 }, 
-
                 Buffer (0x03)
                 {
-                     0xFF, 0xFF, 0xFF                                 /* ... */
+                     0xFF, 0xFF, 0xFF
                 }, 
-
                 Buffer (0x01)
                 {
-                     0xFF                                             /* . */
+                     0xFF
                 }, 
-
                 Buffer (0x01)
                 {
-                     0xFF                                             /* . */
+                     0xFF
                 }, 
-
                 Buffer (0x02)
                 {
-                     0xFF, 0xFF                                       /* .. */
+                     0xFF, 0xFF
                 }
             })
             Method (WMAA, 3, Serialized)
@@ -25220,7 +23367,6 @@
                 Store ("WMAA Enter", Debug)
                 Return (WHCM (Arg1, Arg2))
             }
-
             Method (WGDD, 0, NotSerialized)
             {
                 Store ("GetDisplayDevices", Debug)
@@ -25240,7 +23386,6 @@
                     {
                         Or (Local2, 0x20, Local2)
                     }
-
                     Store (Package (0x03)
                         {
                             0x00, 
@@ -25253,7 +23398,6 @@
                     Return (Local0)
                 }
             }
-
             Method (WSDD, 1, NotSerialized)
             {
                 Store ("SETDisplayDevices", Debug)
@@ -25268,7 +23412,6 @@
                         Or (Local0, Local3, Local0)
                     }
                 }
-
                 Store (Local0, Debug)
                 Store (WDPE, Debug)
                 If (LEqual (VSDD (Local0), 0xFFFF))
@@ -25288,7 +23431,6 @@
                     })
                 }
             }
-
             Method (WGHP, 0, NotSerialized)
             {
                 Return (Package (0x02)
@@ -25297,7 +23439,6 @@
                     0x00
                 })
             }
-
             Method (WITH, 1, NotSerialized)
             {
                 Return (Package (0x02)
@@ -25306,7 +23447,6 @@
                     0x00
                 })
             }
-
             Method (WALS, 0, NotSerialized)
             {
                 Return (Package (0x02)
@@ -25315,7 +23455,6 @@
                     0x00
                 })
             }
-
             Method (WSAL, 1, NotSerialized)
             {
                 Return (Package (0x02)
@@ -25324,7 +23463,6 @@
                     0x00
                 })
             }
-
             Method (WGDS, 0, NotSerialized)
             {
                 Store (Package (0x03)
@@ -25333,7 +23471,7 @@
                         0x01, 
                         Buffer (0x01)
                         {
-                             0x00                                             /* . */
+                             0x00
                         }
                     }, Local0)
                 If (\_SB.DCKD ())
@@ -25344,14 +23482,12 @@
                             0x01, 
                             Buffer (0x01)
                             {
-                                 0x01                                             /* . */
+                                 0x01
                             }
                         }, Local0)
                 }
-
                 Return (Local0)
             }
-
             Method (WGWS, 0, NotSerialized)
             {
                 Store (Package (0x03) {}, Local2)
@@ -25360,13 +23496,11 @@
                 Store (WLDA, Index (Local2, 0x02))
                 Return (Local2)
             }
-
             Method (WSWS, 1, NotSerialized)
             {
                 \_SB.SSMI (0xEA75, 0x02, 0x1B, 0x574D4953, 0x00)
                 Return (WFDA ())
             }
-
             Method (SBBC, 1, NotSerialized)
             {
                 Return (Package (0x02)
@@ -25375,7 +23509,6 @@
                     0x00
                 })
             }
-
             Method (WGBI, 1, NotSerialized)
             {
                 If (LLess (Arg0, SizeOf (NBTI)))
@@ -25391,7 +23524,6 @@
                     })
                 }
             }
-
             Method (WGBN, 0, NotSerialized)
             {
                 Store ("Return Bezel function table", Debug)
@@ -25399,12 +23531,12 @@
                 Add (Local0, 0x02, Local0)
                 Store (Buffer (0x0A)
                     {
-                        /* 0000 */  0x31, 0x01, 0xAE, 0x01, 0x9E, 0x01, 0xB6, 0x01,  /* 1....... */
-                        /* 0008 */  0xB7, 0x01                                       /* .. */
+                        /* 0000 */   0x31, 0x01, 0xAE, 0x01, 0x9E, 0x01, 0xB6, 0x01,
+                        /* 0008 */   0xB7, 0x01
                     }, Local1)
                 Concatenate (Local1, Buffer (0x08)
                     {
-                         0xFF, 0xFF, 0x9B, 0x21, 0xA9, 0x21, 0x00, 0x00   /* ...!.!.. */
+                         0xFF, 0xFF, 0x9B, 0x21, 0xA9, 0x21, 0x00, 0x00
                     }, Local2)
                 Store (Package (0x03) {}, Local3)
                 Store (0x00, Index (Local3, 0x00))
@@ -25412,7 +23544,6 @@
                 Store (Local2, Index (Local3, 0x02))
                 Return (Local3)
             }
-
             Method (GHKS, 0, NotSerialized)
             {
                 Store (Package (0x03)
@@ -25424,7 +23555,6 @@
                 Store (\_SB.PCI0.LPCB.EC0.GSHK (), Index (DerefOf (Index (Local0, 0x02)), 0x00))
                 Return (Local0)
             }
-
             Method (SHKS, 1, NotSerialized)
             {
                 \_SB.PCI0.LPCB.EC0.SSHK (Arg0)
@@ -25436,7 +23566,6 @@
                     0x00
                 })
             }
-
             Method (FUF4, 1, NotSerialized)
             {
                 And (Arg0, 0x1F, Local0)
@@ -25452,10 +23581,8 @@
                         Or (Local0, 0x10, Local0)
                     }
                 }
-
                 Return (Local0)
             }
-
             Method (HKFR, 0, NotSerialized)
             {
                 Store ("HotkeyFunctionResponse", Debug)
@@ -25472,7 +23599,6 @@
                     Store (0x31, Index (DerefOf (Index (Local0, 0x02)), 0x00))
                     Store (0x01, Index (DerefOf (Index (Local0, 0x02)), 0x01))
                 }
-
                 If (LEqual (Local1, 0x04))
                 {
                     Store ("VideoGetDisplayDevices enter", Debug)
@@ -25489,19 +23615,16 @@
                     Store (WDSA, Debug)
                     Store ("VideoGetDisplayDevices exit", Debug)
                 }
-
                 If (LEqual (Local1, 0x05))
                 {
                     Store (0x9D, Index (DerefOf (Index (Local0, 0x02)), 0x00))
                     Store (0x01, Index (DerefOf (Index (Local0, 0x02)), 0x01))
                 }
-
                 If (LEqual (Local1, 0x06))
                 {
                     Store (0x9E, Index (DerefOf (Index (Local0, 0x02)), 0x00))
                     Store (0x01, Index (DerefOf (Index (Local0, 0x02)), 0x01))
                 }
-
                 If (LOr (LEqual (Local1, 0x02), LEqual (Local1, 0x03)))
                 {
                     If (LEqual (Local1, 0x02))
@@ -25515,7 +23638,6 @@
                             Store (0x0A, Local1)
                         }
                     }
-
                     \_GPE.VBRE (Local1)
                     Add (0xAD, Local1, Index (DerefOf (Index (Local0, 0x02)), 0x00
                         ))
@@ -25524,15 +23646,12 @@
                     {
                         Wait (\_SB.BEVT, 0x10)
                     }
-
                     Store (BRID, Index (DerefOf (Index (Local0, 0x02)), 0x02))
                     Store (DerefOf (Index (Local2, 0x03)), Index (DerefOf (Index (Local0, 
                         0x02)), 0x03))
                 }
-
                 Return (Local0)
             }
-
             Method (GHKF, 0, NotSerialized)
             {
                 Store (WDPE, Debug)
@@ -25548,7 +23667,6 @@
                 Store (WDGN, Debug)
                 Return (HKFR ())
             }
-
             Method (SHKF, 1, NotSerialized)
             {
                 Reset (\_SB.BEVT)
@@ -25556,7 +23674,6 @@
                 \_SB.SSMI (0xEA75, 0x02, 0x0A, 0x574D4953, 0x00)
                 Return (HKFR ())
             }
-
             Method (WGBV, 0, NotSerialized)
             {
                 Store (Package (0x03)
@@ -25566,19 +23683,17 @@
                         Buffer (0x04) {}
                     }, Local0)
                 Store (WLBN, Local1)
-                Store (0x00, WLBN) /* \WLBN */
+                Store (0x00, WLBN)
                 If (LEqual (Local1, 0x01))
                 {
                     Store (0x9B, Index (DerefOf (Index (Local0, 0x02)), 0x00))
                     Store (0x21, Index (DerefOf (Index (Local0, 0x02)), 0x01))
                 }
-
                 If (LEqual (Local1, 0x02))
                 {
                     Store (0x9A, Index (DerefOf (Index (Local0, 0x02)), 0x00))
                     Store (0x21, Index (DerefOf (Index (Local0, 0x02)), 0x01))
                 }
-
                 If (LEqual (Local1, 0x03))
                 {
                     Store (\_SB.PCI0.LPCB.EC0.TP, Local2)
@@ -25587,10 +23702,8 @@
                     Store (Local2, Index (DerefOf (Index (Local0, 0x02)), 0x02))
                     Store (0x00, Index (DerefOf (Index (Local0, 0x02)), 0x03))
                 }
-
                 Return (Local0)
             }
-
             Method (GSAS, 0, NotSerialized)
             {
                 Store (Package (0x03)
@@ -25604,37 +23717,31 @@
                 Store (Local1, Index (DerefOf (Index (Local0, 0x02)), 0x00))
                 Return (Local0)
             }
-
             Method (GSRV, 0, NotSerialized)
             {
                 \_SB.SSMI (0xEA75, 0x01, 0x10, 0x574D4953, 0x00)
                 Return (WFDA ())
             }
-
             Method (GVPR, 0, NotSerialized)
             {
                 \_SB.SSMI (0xEA75, 0x01, 0x11, 0x574D4953, 0x00)
                 Return (WFDA ())
             }
-
             Method (GBRS, 0, NotSerialized)
             {
                 \_SB.SSMI (0xEA75, 0x01, 0x12, 0x574D4953, 0x00)
                 Return (WFDA ())
             }
-
             Method (SSRV, 1, NotSerialized)
             {
                 \_SB.SSMI (0xEA75, 0x02, 0x10, 0x574D4953, 0x00)
                 Return (WFDA ())
             }
-
             Method (GWPT, 0, NotSerialized)
             {
                 \_SB.SSMI (0xEA75, 0x01, 0x14, 0x574D4953, 0x00)
                 Return (WFDA ())
             }
-
             Method (SWPT, 1, NotSerialized)
             {
                 \_SB.SSMI (0xEA75, 0x02, 0x14, 0x574D4953, 0x00)
@@ -25642,7 +23749,6 @@
                 HWWB ()
                 Return (Local1)
             }
-
             Method (HWWB, 0, NotSerialized)
             {
                 Store (BT0P, Local0)
@@ -25650,54 +23756,45 @@
                 {
                     Store (0x00, Local0)
                 }
-
                 \_SB.SSMI (0xEA3A, 0x00, Local0, 0x00, 0x00)
                 \_GPE.HWWP (0x01)
                 WGWE (0x05, 0x00)
             }
-
             Method (GDBT, 0, NotSerialized)
             {
                 \_SB.SSMI (0xEA75, 0x01, 0x18, 0x574D4953, 0x00)
                 Return (WFDA ())
             }
-
             Method (SDBT, 1, NotSerialized)
             {
                 \_SB.SSMI (0xEA75, 0x02, 0x18, 0x574D4953, 0x00)
                 Return (WFDA ())
             }
-
             Method (GFRT, 0, NotSerialized)
             {
                 \_SB.SSMI (0xEA75, 0x01, 0x0D, 0x574D4953, 0x00)
                 Return (WFDA ())
             }
-
             Method (SDMD, 1, NotSerialized)
             {
                 \_SB.SSMI (0xEA75, 0x02, 0x1D, 0x574D4953, 0x00)
                 Return (WFDA ())
             }
-
             Method (GDMD, 0, NotSerialized)
             {
                 \_SB.SSMI (0xEA75, 0x01, 0x1D, 0x574D4953, 0x00)
                 Return (WFDA ())
             }
-
             Method (SBUS, 1, NotSerialized)
             {
                 \_SB.SSMI (0xEA75, 0x02, 0x1E, 0x574D4953, 0x00)
                 Return (WFDA ())
             }
-
             Method (GBUS, 0, NotSerialized)
             {
                 \_SB.SSMI (0xEA75, 0x01, 0x1E, 0x574D4953, 0x00)
                 Return (WFDA ())
             }
-
             Method (STMM, 1, NotSerialized)
             {
                 Store ("SetThermalStatus", Debug)
@@ -25707,7 +23804,6 @@
                     \_SB.SSMI (0xEA75, 0x02, 0x28, 0x574D4953, 0x00)
                     Return (WFDA ())
                 }
-
                 Store (Package (0x02)
                     {
                         0x00, 
@@ -25726,12 +23822,10 @@
                             0x00
                         })
                     }
-
                     If (LEqual (Local1, 0x00))
                     {
                         Return (Local0)
                     }
-
                     If (\_SB.PCI0.LPCB.EC0.ECRG)
                     {
                         Acquire (\_SB.PCI0.LPCB.EC0.ECMX, 0xFFFF)
@@ -25742,7 +23836,6 @@
                             {
                                 Store (0x00, Local2)
                             }
-
                             Store (Local2, \_SB.PCI0.LPCB.EC0.TEMP)
                             If (LEqual (Local7, 0x02))
                             {
@@ -25752,7 +23845,6 @@
                                 {
                                     Store (0x00, Local2)
                                 }
-
                                 Store (Local2, \_SB.PCI0.LPCB.EC0.TEMP)
                             }
                         }
@@ -25762,13 +23854,10 @@
                             {
                                 Store (\_TZ.CTCT (Local2), Local2)
                             }
-
                             Store (Local2, \_SB.PCI0.LPCB.EC0.FTGC)
                         }
-
                         Release (\_SB.PCI0.LPCB.EC0.ECMX)
                     }
-
                     Store (0x00, Local6)
                     While (LLess (Local6, Local1))
                     {
@@ -25776,11 +23865,9 @@
                             DerefOf (Index (TSTV, Local7)), Local6))
                         Increment (Local6)
                     }
-
-                    Store (0x01, TSTM) /* \_SB_.WMID.TSTM */
+                    Store (0x01, TSTM)
                     Return (Local0)
                 }
-
                 If (LEqual (IDTA, 0xAA))
                 {
                     Store (0x00, Local1)
@@ -25793,10 +23880,8 @@
                             Store (0xFF, Index (DerefOf (Index (TSTV, Local1)), Local2))
                             Increment (Local2)
                         }
-
                         Increment (Local1)
                     }
-
                     If (\_SB.PCI0.LPCB.EC0.ECRG)
                     {
                         Acquire (\_SB.PCI0.LPCB.EC0.ECMX, 0xFFFF)
@@ -25807,22 +23892,18 @@
                             Store (0x00, \_SB.PCI0.LPCB.EC0.TEMP)
                             Increment (Local1)
                         }
-
                         Store (0xFF, \_SB.PCI0.LPCB.EC0.FTGC)
                         Release (\_SB.PCI0.LPCB.EC0.ECMX)
                     }
-
-                    Store (0x00, TSTM) /* \_SB_.WMID.TSTM */
+                    Store (0x00, TSTM)
                     Return (Local0)
                 }
-
                 Return (Package (0x02)
                 {
                     0x06, 
                     0x00
                 })
             }
-
             Method (GTMS, 1, NotSerialized)
             {
                 Store ("GetThermalStatus", Debug)
@@ -25842,7 +23923,6 @@
                     {
                         Return (Local0)
                     }
-
                     If (LOr (LLess (IDTA, 0x03), LEqual (IDTA, 0x04)))
                     {
                         If (\_SB.PCI0.LPCB.EC0.ECRG)
@@ -25855,25 +23935,20 @@
                                 Store (0x04, \_SB.PCI0.LPCB.EC0.CRZN)
                                 Store (\_SB.PCI0.LPCB.EC0.DTMP, Index (DerefOf (Index (Local0, 0x02)), 0x02))
                             }
-
                             Release (\_SB.PCI0.LPCB.EC0.ECMX)
                         }
-
                         If (LEqual (IDTA, 0x02))
                         {
                             Store (PCHT, Index (DerefOf (Index (Local0, 0x02)), 0x03))
                         }
                     }
-
                     If (LEqual (IDTA, 0x03))
                     {
                         Store (\_TZ.GFSD (), Local1)
                         Store (Local1, Index (DerefOf (Index (Local0, 0x02)), 0x01))
                     }
-
                     Return (Local0)
                 }
-
                 If (LEqual (IDTA, 0x06))
                 {
                     If (TRCN)
@@ -25884,13 +23959,11 @@
                     {
                         Store (0x00, Local1)
                     }
-
-                    Store (0x00, TRCN) /* \TRCN */
+                    Store (0x00, TRCN)
                     Store (0x01, Index (DerefOf (Index (Local0, 0x02)), 0x00))
                     Store (Local1, Index (DerefOf (Index (Local0, 0x02)), 0x01))
                     Return (Local0)
                 }
-
                 If (LAnd (LGreaterEqual (IDTA, 0x10), LLessEqual (IDTA, 0x15)))
                 {
                     \_SB.SSMI (0xEA75, 0x01, 0x28, 0x574D4953, 0x00)
@@ -25902,7 +23975,6 @@
                     {
                         Return (Local0)
                     }
-
                     Subtract (IDTA, 0x10, Local7)
                     Store (DerefOf (Index (THCT, Local7)), Local2)
                     Store (Local2, Index (DerefOf (Index (Local0, 0x02)), 0x00))
@@ -25914,10 +23986,8 @@
                             DerefOf (Index (Local0, 0x02)), Add (Local3, 0x01)))
                         Increment (Local3)
                     }
-
                     Return (Local0)
                 }
-
                 If (LAnd (LGreaterEqual (IDTA, 0x20), LLessEqual (IDTA, 0x25)))
                 {
                     Subtract (IDTA, 0x20, Local7)
@@ -25930,35 +24000,29 @@
                             Index (DerefOf (Index (Local0, 0x02)), Add (Local3, 0x01)))
                         Increment (Local3)
                     }
-
                     Return (Local0)
                 }
-
                 If (LEqual (IDTA, 0xAA))
                 {
                     Store (TSTM, Index (DerefOf (Index (Local0, 0x02)), 0x00))
                     Return (Local0)
                 }
-
                 Return (Package (0x02)
                 {
                     0x06, 
                     0x00
                 })
             }
-
             Method (SBTC, 1, NotSerialized)
             {
                 \_SB.SSMI (0xEA75, 0x02, 0x1F, 0x574D4953, 0x00)
                 Return (WFDA ())
             }
-
             Method (GBTC, 0, NotSerialized)
             {
                 \_SB.SSMI (0xEA75, 0x01, 0x1F, 0x574D4953, 0x00)
                 Return (WFDA ())
             }
-
             Method (GPMC, 1, NotSerialized)
             {
                 Store (Buffer (0x80) {}, Local0)
@@ -25983,24 +24047,23 @@
                         {
                             Or (Local2, 0x02, Local2)
                         }
-
-                        Store (Local2, SYS) /* \_SB_.WMID.GPMC.SYS_ */
+                        Store (Local2, SYS)
                         If (LEqual (Arg0, 0x01))
                         {
                             Store (0x00, \_SB.PCI0.LPCB.EC0.CIDX)
-                            Store (\_SB.PCI0.LPCB.EC0.CPWR, P1) /* \_SB_.WMID.GPMC.P1__ */
-                            Store (\_SB.PCI0.LPCB.EC0.CVLT, BV1) /* \_SB_.WMID.GPMC.BV1_ */
-                            Store (\_SB.PCI0.LPCB.EC0.CCUR, BI1) /* \_SB_.WMID.GPMC.BI1_ */
+                            Store (\_SB.PCI0.LPCB.EC0.CPWR, P1)
+                            Store (\_SB.PCI0.LPCB.EC0.CVLT, BV1)
+                            Store (\_SB.PCI0.LPCB.EC0.CCUR, BI1)
                             Store (0x01, \_SB.PCI0.LPCB.EC0.CIDX)
-                            Store (\_SB.PCI0.LPCB.EC0.CPWR, P2) /* \_SB_.WMID.GPMC.P2__ */
-                            Store (\_SB.PCI0.LPCB.EC0.CVLT, BV2) /* \_SB_.WMID.GPMC.BV2_ */
-                            Store (\_SB.PCI0.LPCB.EC0.CCUR, BI2) /* \_SB_.WMID.GPMC.BI2_ */
+                            Store (\_SB.PCI0.LPCB.EC0.CPWR, P2)
+                            Store (\_SB.PCI0.LPCB.EC0.CVLT, BV2)
+                            Store (\_SB.PCI0.LPCB.EC0.CCUR, BI2)
                         }
                         Else
                         {
                             Store (ASMB, Local2)
                             Store (0x00, Index (Local2, 0x10))
-                            Store (Local2, ASMB) /* \ASMB */
+                            Store (Local2, ASMB)
                             \_SB.SSMI (0xEA75, 0x01, 0x1C, 0x574D4953, 0x00)
                             If (LEqual (EBX, 0x00))
                             {
@@ -26012,58 +24075,52 @@
                                         0x04)))
                                     Increment (Local2)
                                 }
-
-                                And (SYS, Not (0x02), SYS) /* \_SB_.WMID.GPMC.SYS_ */
+                                And (SYS, Not (0x02), SYS)
                             }
                             Else
                             {
                                 If (And (SYS, 0x02))
                                 {
-                                    Store (0x011C, P1) /* \_SB_.WMID.GPMC.P1__ */
-                                    Store (0x2E18, BV1) /* \_SB_.WMID.GPMC.BV1_ */
-                                    Store (0x0F50, BI1) /* \_SB_.WMID.GPMC.BI1_ */
-                                    Store (0x55, P2) /* \_SB_.WMID.GPMC.P2__ */
-                                    Store (0x3264, BV2) /* \_SB_.WMID.GPMC.BV2_ */
-                                    Store (0x0432, BI2) /* \_SB_.WMID.GPMC.BI2_ */
+                                    Store (0x011C, P1)
+                                    Store (0x2E18, BV1)
+                                    Store (0x0F50, BI1)
+                                    Store (0x55, P2)
+                                    Store (0x3264, BV2)
+                                    Store (0x0432, BI2)
                                 }
                                 Else
                                 {
                                     Store (0x00, \_SB.PCI0.LPCB.EC0.CIDX)
-                                    Store (\_SB.PCI0.LPCB.EC0.CPWR, P1) /* \_SB_.WMID.GPMC.P1__ */
-                                    Store (\_SB.PCI0.LPCB.EC0.CVLT, BV1) /* \_SB_.WMID.GPMC.BV1_ */
-                                    Store (\_SB.PCI0.LPCB.EC0.CCUR, BI1) /* \_SB_.WMID.GPMC.BI1_ */
+                                    Store (\_SB.PCI0.LPCB.EC0.CPWR, P1)
+                                    Store (\_SB.PCI0.LPCB.EC0.CVLT, BV1)
+                                    Store (\_SB.PCI0.LPCB.EC0.CCUR, BI1)
                                     Store (0x01, \_SB.PCI0.LPCB.EC0.CIDX)
-                                    Store (\_SB.PCI0.LPCB.EC0.CPWR, P2) /* \_SB_.WMID.GPMC.P2__ */
-                                    Store (\_SB.PCI0.LPCB.EC0.CVLT, BV2) /* \_SB_.WMID.GPMC.BV2_ */
-                                    Store (\_SB.PCI0.LPCB.EC0.CCUR, BI2) /* \_SB_.WMID.GPMC.BI2_ */
+                                    Store (\_SB.PCI0.LPCB.EC0.CPWR, P2)
+                                    Store (\_SB.PCI0.LPCB.EC0.CVLT, BV2)
+                                    Store (\_SB.PCI0.LPCB.EC0.CCUR, BI2)
                                     Store (0x00, Local1)
                                     If (LOr (LGreater (P1, 0x0202), LLess (P1, 0x80)))
                                     {
                                         Store (0x01, Local1)
                                     }
-
                                     If (LOr (LGreater (P2, 0x8D), LLess (P2, 0x46)))
                                     {
                                         Store (0x01, Local1)
                                     }
-
                                     If (LLess (BV1, 0x36B0))
                                     {
                                         If (LOr (LGreater (BV1, 0x3390), LLess (BV1, 0x2CEC)))
                                         {
                                             Store (0x01, Local1)
                                         }
-
                                         If (LOr (LGreater (BV2, 0x3390), LLess (BV2, 0x2CEC)))
                                         {
                                             Store (0x01, Local1)
                                         }
-
                                         If (LOr (LGreater (BI1, 0x1068), LLess (BI1, 0x06A4)))
                                         {
                                             Store (0x01, Local1)
                                         }
-
                                         If (LOr (LGreater (BI2, 0x04B0), LLess (BI2, 0x0384)))
                                         {
                                             Store (0x01, Local1)
@@ -26075,57 +24132,52 @@
                                         {
                                             Store (0x01, Local1)
                                         }
-
                                         If (LOr (LGreater (BV2, 0x445C), LLess (BV2, 0x3C28)))
                                         {
                                             Store (0x01, Local1)
                                         }
-
                                         If (LOr (LGreater (BI1, 0x1068), LLess (BI1, 0x06A4)))
                                         {
                                             Store (0x01, Local1)
                                         }
-
                                         If (LOr (LGreater (BI2, 0x04B0), LLess (BI2, 0x0384)))
                                         {
                                             Store (0x01, Local1)
                                         }
                                     }
-
                                     If (LEqual (Local1, 0x01))
                                     {
                                         Store (0x00, \_SB.PCI0.LPCB.EC0.S0FL)
-                                        Store (0x011C, P1) /* \_SB_.WMID.GPMC.P1__ */
-                                        Store (0x2E18, BV1) /* \_SB_.WMID.GPMC.BV1_ */
-                                        Store (0x0F50, BI1) /* \_SB_.WMID.GPMC.BI1_ */
-                                        Store (0x55, P2) /* \_SB_.WMID.GPMC.P2__ */
-                                        Store (0x3264, BV2) /* \_SB_.WMID.GPMC.BV2_ */
-                                        Store (0x0432, BI2) /* \_SB_.WMID.GPMC.BI2_ */
-                                        Or (SYS, 0x02, SYS) /* \_SB_.WMID.GPMC.SYS_ */
+                                        Store (0x011C, P1)
+                                        Store (0x2E18, BV1)
+                                        Store (0x0F50, BI1)
+                                        Store (0x55, P2)
+                                        Store (0x3264, BV2)
+                                        Store (0x0432, BI2)
+                                        Or (SYS, 0x02, SYS)
                                     }
                                     Else
                                     {
                                         Store (ASMB, Local2)
                                         CreateField (Local0, 0x20, 0x60, CDAT)
                                         CreateField (Local2, 0xA0, 0x60, BDAT)
-                                        Store (CDAT, BDAT) /* \_SB_.WMID.GPMC.BDAT */
+                                        Store (CDAT, BDAT)
                                         Store (0x01, Index (Local2, 0x10))
-                                        Store (Local2, ASMB) /* \ASMB */
+                                        Store (Local2, ASMB)
                                         \_SB.SSMI (0xEA75, 0x01, 0x1C, 0x574D4953, 0x00)
                                     }
                                 }
                             }
                         }
-
                         If (LGreater (BV2, 0x3A98))
                         {
-                            Store (0x03B6, E1) /* \_SB_.WMID.GPMC.E1__ */
-                            Store (0x03B6, E2) /* \_SB_.WMID.GPMC.E2__ */
+                            Store (0x03B6, E1)
+                            Store (0x03B6, E2)
                         }
                         Else
                         {
-                            Store (0x0398, E1) /* \_SB_.WMID.GPMC.E1__ */
-                            Store (0x0398, E2) /* \_SB_.WMID.GPMC.E2__ */
+                            Store (0x0398, E1)
+                            Store (0x0398, E2)
                         }
                     }
                     Else
@@ -26137,7 +24189,6 @@
                         })
                     }
                 }
-
                 Store (Package (0x03)
                     {
                         0x00, 
@@ -26147,7 +24198,6 @@
                 Store (Local0, Index (Local1, 0x02))
                 Return (Local1)
             }
-
             Method (CPMC, 0, NotSerialized)
             {
                 If (LEqual (PMCS, 0x01))
@@ -26162,54 +24212,45 @@
                         })
                     }
                 }
-
                 Return (Package (0x02)
                 {
                     0x0D, 
                     0x00
                 })
             }
-
             Method (SQBP, 1, NotSerialized)
             {
                 \_SB.SSMI (0xEA75, 0x02, 0x22, 0x574D4953, 0x00)
                 Return (WFDA ())
             }
-
             Method (GQBP, 0, NotSerialized)
             {
                 \_SB.SSMI (0xEA75, 0x01, 0x22, 0x574D4953, 0x00)
                 Return (WFDA ())
             }
-
             Method (GPIN, 0, NotSerialized)
             {
                 \_SB.SSMI (0xEA75, 0x01, 0x23, 0x574D4953, 0x00)
                 Return (WFDA ())
             }
-
             Method (SPIN, 1, NotSerialized)
             {
                 \_SB.SSMI (0xEA75, 0x02, 0x23, 0x574D4953, 0x00)
                 Return (WFDA ())
             }
-
             Method (WGBC, 0, NotSerialized)
             {
                 Return (\_SB.PCI0.LPCB.EC0.GBTC ())
             }
-
             Method (WSBC, 3, NotSerialized)
             {
                 Return (\_SB.PCI0.LPCB.EC0.SBTC (Arg0, Arg1, Arg2))
             }
-
             Method (GFCC, 0, NotSerialized)
             {
                 \_SB.SSMI (0xEA75, 0x01, 0x29, 0x574D4953, 0x00)
                 Return (WFDA ())
             }
-
             Method (SFCC, 1, NotSerialized)
             {
                 \_SB.SSMI (0xEA75, 0x02, 0x29, 0x574D4953, 0x00)
@@ -26218,22 +24259,18 @@
                 {
                     HWWB ()
                 }
-
                 Return (Local1)
             }
-
             Method (GPES, 0, NotSerialized)
             {
                 \_SB.SSMI (0xEA75, 0x01, 0x2A, 0x574D4953, 0x00)
                 Return (WFDA ())
             }
-
             Method (SPES, 1, NotSerialized)
             {
                 \_SB.SSMI (0xEA75, 0x02, 0x2A, 0x574D4953, 0x00)
                 Return (WFDA ())
             }
-
             Method (GLID, 0, NotSerialized)
             {
                 Store (Package (0x03)
@@ -26246,63 +24283,53 @@
                     )), 0x00))
                 Return (Local0)
             }
-
             Method (GDES, 0, NotSerialized)
             {
                 \_SB.SSMI (0xEA75, 0x01, 0x33, 0x574D4953, 0x00)
                 Return (WFDA ())
             }
-
             Method (GBLC, 0, NotSerialized)
             {
                 \_SB.SSMI (0xEA75, 0x01, 0x34, 0x574D4953, 0x00)
                 Return (WFDA ())
             }
-
             Method (SBLC, 1, NotSerialized)
             {
                 \_SB.SSMI (0xEA75, 0x02, 0x34, 0x574D4953, 0x00)
                 Return (WFDA ())
             }
-
             Method (GPST, 0, NotSerialized)
             {
                 \_SB.SSMI (0xEA75, 0x01, 0x36, 0x574D4953, 0x00)
                 Return (WFDA ())
             }
-
             Method (SPST, 1, NotSerialized)
             {
                 \_SB.SSMI (0xEA75, 0x02, 0x36, 0x574D4953, 0x00)
                 Return (WFDA ())
             }
-
             Method (GBCT, 0, NotSerialized)
             {
                 \_SB.SSMI (0xEA75, 0x01, 0x37, 0x574D4953, 0x00)
                 Return (WFDA ())
             }
-
             Method (SBCP, 1, NotSerialized)
             {
                 \_SB.SSMI (0xEA75, 0x02, 0x37, 0x574D4953, 0x00)
                 Return (WFDA ())
             }
-
             Method (GPSH, 0, NotSerialized)
             {
                 \_SB.SSMI (0xEA75, 0x01, 0x38, 0x574D4953, 0x00)
                 Return (WFDA ())
             }
-
             Method (SPSH, 1, NotSerialized)
             {
                 \_SB.SSMI (0xEA75, 0x02, 0x38, 0x574D4953, 0x00)
                 Return (WFDA ())
             }
-
-            Name (_HID, EisaId ("PNP0C14") /* Windows Management Instrumentation Device */)  // _HID: Hardware ID
-            Name (_UID, 0x00)  // _UID: Unique ID
+            Name (_HID, EisaId ("PNP0C14"))
+            Name (_UID, 0x00)
             Name (WEI1, 0x00)
             Name (WED1, 0x00)
             Name (WEI2, 0x00)
@@ -26310,41 +24337,41 @@
             Name (WEVT, 0x00)
             Name (_WDG, Buffer (0x0118)
             {
-                /* 0000 */  0x34, 0xF0, 0xB7, 0x5F, 0x63, 0x2C, 0xE9, 0x45,  /* 4.._c,.E */
-                /* 0008 */  0xBE, 0x91, 0x3D, 0x44, 0xE2, 0xC7, 0x07, 0xE4,  /* ..=D.... */
-                /* 0010 */  0x41, 0x41, 0x01, 0x02, 0x79, 0x42, 0xF2, 0x95,  /* AA..yB.. */
-                /* 0018 */  0x7B, 0x4D, 0x34, 0x43, 0x93, 0x87, 0xAC, 0xCD,  /* {M4C.... */
-                /* 0020 */  0xC6, 0x7E, 0xF6, 0x1C, 0x80, 0x00, 0x01, 0x08,  /* .~...... */
-                /* 0028 */  0x18, 0x43, 0x81, 0x2B, 0xE8, 0x4B, 0x07, 0x47,  /* .C.+.K.G */
-                /* 0030 */  0x9D, 0x84, 0xA1, 0x90, 0xA8, 0x59, 0xB5, 0xD0,  /* .....Y.. */
-                /* 0038 */  0xA0, 0x00, 0x01, 0x08, 0x21, 0x12, 0x90, 0x05,  /* ....!... */
-                /* 0040 */  0x66, 0xD5, 0xD1, 0x11, 0xB2, 0xF0, 0x00, 0xA0,  /* f....... */
-                /* 0048 */  0xC9, 0x06, 0x29, 0x10, 0x41, 0x42, 0x01, 0x00,  /* ..).AB.. */
-                /* 0050 */  0xEB, 0x91, 0x4C, 0x1F, 0x5C, 0xDC, 0x0B, 0x46,  /* ..L.\..F */
-                /* 0058 */  0x95, 0x1D, 0xC7, 0xCB, 0x9B, 0x4B, 0x8D, 0x5E,  /* .....K.^ */
-                /* 0060 */  0x42, 0x41, 0x01, 0x02, 0x49, 0x4B, 0x11, 0x2D,  /* BA..IK.- */
-                /* 0068 */  0xFB, 0x2D, 0x30, 0x41, 0xB8, 0xFE, 0x4A, 0x3C,  /* .-0A..J< */
-                /* 0070 */  0x09, 0xE7, 0x51, 0x33, 0x42, 0x43, 0xCE, 0x00,  /* ..Q3BC.. */
-                /* 0078 */  0xE3, 0x08, 0x8D, 0x98, 0xF4, 0x68, 0x35, 0x4C,  /* .....h5L */
-                /* 0080 */  0xAF, 0x3E, 0x6A, 0x1B, 0x81, 0x06, 0xF8, 0x3C,  /* .>j....< */
-                /* 0088 */  0x42, 0x44, 0x29, 0x00, 0x46, 0x97, 0xEA, 0x14,  /* BD).F... */
-                /* 0090 */  0x1F, 0xCE, 0x98, 0x40, 0xA0, 0xE0, 0x70, 0x45,  /* ...@..pE */
-                /* 0098 */  0xCB, 0x4D, 0xA7, 0x45, 0x42, 0x45, 0x02, 0x00,  /* .M.EBE.. */
-                /* 00A0 */  0x28, 0x20, 0x2F, 0x32, 0x84, 0x0F, 0x01, 0x49,  /* ( /2...I */
-                /* 00A8 */  0x98, 0x8E, 0x01, 0x51, 0x76, 0x04, 0x9E, 0x2D,  /* ...Qv..- */
-                /* 00B0 */  0x42, 0x46, 0x05, 0x00, 0x3D, 0xDE, 0x32, 0x82,  /* BF..=.2. */
-                /* 00B8 */  0x3D, 0x66, 0x27, 0x43, 0xA8, 0xF4, 0xE2, 0x93,  /* =f'C.... */
-                /* 00C0 */  0xAD, 0xB9, 0xBF, 0x05, 0x42, 0x47, 0x02, 0x00,  /* ....BG.. */
-                /* 00C8 */  0x36, 0x64, 0x1F, 0x8F, 0x42, 0x9F, 0xC8, 0x42,  /* 6d..B..B */
-                /* 00D0 */  0xBA, 0xDC, 0x0E, 0x94, 0x24, 0xF2, 0x0C, 0x9A,  /* ....$... */
-                /* 00D8 */  0x42, 0x48, 0x00, 0x00, 0x35, 0x64, 0x1F, 0x8F,  /* BH..5d.. */
-                /* 00E0 */  0x42, 0x9F, 0xC8, 0x42, 0xBA, 0xDC, 0x0E, 0x94,  /* B..B.... */
-                /* 00E8 */  0x24, 0xF2, 0x0C, 0x9A, 0x42, 0x49, 0x00, 0x00,  /* $...BI.. */
-                /* 00F0 */  0x61, 0xA6, 0x91, 0x73, 0x3A, 0x22, 0xDB, 0x47,  /* a..s:".G */
-                /* 00F8 */  0xA7, 0x7A, 0x7B, 0xE8, 0x4C, 0x60, 0x82, 0x2D,  /* .z{.L`.- */
-                /* 0100 */  0x41, 0x43, 0x01, 0x02, 0xB6, 0x63, 0x4E, 0xDF,  /* AC...cN. */
-                /* 0108 */  0xBC, 0x3B, 0x58, 0x48, 0x97, 0x37, 0xC7, 0x4F,  /* .;XH.7.O */
-                /* 0110 */  0x82, 0xF8, 0x21, 0xF3, 0x42, 0x4A, 0x03, 0x00   /* ..!.BJ.. */
+                /* 0000 */   0x34, 0xF0, 0xB7, 0x5F, 0x63, 0x2C, 0xE9, 0x45,
+                /* 0008 */   0xBE, 0x91, 0x3D, 0x44, 0xE2, 0xC7, 0x07, 0xE4,
+                /* 0010 */   0x41, 0x41, 0x01, 0x02, 0x79, 0x42, 0xF2, 0x95,
+                /* 0018 */   0x7B, 0x4D, 0x34, 0x43, 0x93, 0x87, 0xAC, 0xCD,
+                /* 0020 */   0xC6, 0x7E, 0xF6, 0x1C, 0x80, 0x00, 0x01, 0x08,
+                /* 0028 */   0x18, 0x43, 0x81, 0x2B, 0xE8, 0x4B, 0x07, 0x47,
+                /* 0030 */   0x9D, 0x84, 0xA1, 0x90, 0xA8, 0x59, 0xB5, 0xD0,
+                /* 0038 */   0xA0, 0x00, 0x01, 0x08, 0x21, 0x12, 0x90, 0x05,
+                /* 0040 */   0x66, 0xD5, 0xD1, 0x11, 0xB2, 0xF0, 0x00, 0xA0,
+                /* 0048 */   0xC9, 0x06, 0x29, 0x10, 0x41, 0x42, 0x01, 0x00,
+                /* 0050 */   0xEB, 0x91, 0x4C, 0x1F, 0x5C, 0xDC, 0x0B, 0x46,
+                /* 0058 */   0x95, 0x1D, 0xC7, 0xCB, 0x9B, 0x4B, 0x8D, 0x5E,
+                /* 0060 */   0x42, 0x41, 0x01, 0x02, 0x49, 0x4B, 0x11, 0x2D,
+                /* 0068 */   0xFB, 0x2D, 0x30, 0x41, 0xB8, 0xFE, 0x4A, 0x3C,
+                /* 0070 */   0x09, 0xE7, 0x51, 0x33, 0x42, 0x43, 0xCE, 0x00,
+                /* 0078 */   0xE3, 0x08, 0x8D, 0x98, 0xF4, 0x68, 0x35, 0x4C,
+                /* 0080 */   0xAF, 0x3E, 0x6A, 0x1B, 0x81, 0x06, 0xF8, 0x3C,
+                /* 0088 */   0x42, 0x44, 0x29, 0x00, 0x46, 0x97, 0xEA, 0x14,
+                /* 0090 */   0x1F, 0xCE, 0x98, 0x40, 0xA0, 0xE0, 0x70, 0x45,
+                /* 0098 */   0xCB, 0x4D, 0xA7, 0x45, 0x42, 0x45, 0x02, 0x00,
+                /* 00A0 */   0x28, 0x20, 0x2F, 0x32, 0x84, 0x0F, 0x01, 0x49,
+                /* 00A8 */   0x98, 0x8E, 0x01, 0x51, 0x76, 0x04, 0x9E, 0x2D,
+                /* 00B0 */   0x42, 0x46, 0x05, 0x00, 0x3D, 0xDE, 0x32, 0x82,
+                /* 00B8 */   0x3D, 0x66, 0x27, 0x43, 0xA8, 0xF4, 0xE2, 0x93,
+                /* 00C0 */   0xAD, 0xB9, 0xBF, 0x05, 0x42, 0x47, 0x02, 0x00,
+                /* 00C8 */   0x36, 0x64, 0x1F, 0x8F, 0x42, 0x9F, 0xC8, 0x42,
+                /* 00D0 */   0xBA, 0xDC, 0x0E, 0x94, 0x24, 0xF2, 0x0C, 0x9A,
+                /* 00D8 */   0x42, 0x48, 0x00, 0x00, 0x35, 0x64, 0x1F, 0x8F,
+                /* 00E0 */   0x42, 0x9F, 0xC8, 0x42, 0xBA, 0xDC, 0x0E, 0x94,
+                /* 00E8 */   0x24, 0xF2, 0x0C, 0x9A, 0x42, 0x49, 0x00, 0x00,
+                /* 00F0 */   0x61, 0xA6, 0x91, 0x73, 0x3A, 0x22, 0xDB, 0x47,
+                /* 00F8 */   0xA7, 0x7A, 0x7B, 0xE8, 0x4C, 0x60, 0x82, 0x2D,
+                /* 0100 */   0x41, 0x43, 0x01, 0x02, 0xB6, 0x63, 0x4E, 0xDF,
+                /* 0108 */   0xBC, 0x3B, 0x58, 0x48, 0x97, 0x37, 0xC7, 0x4F,
+                /* 0110 */   0x82, 0xF8, 0x21, 0xF3, 0x42, 0x4A, 0x03, 0x00
             })
             Name (EVNT, Package (0x03)
             {
@@ -26356,7 +24383,6 @@
                     0x05, 
                     0x02
                 }, 
-
                 Package (0x05)
                 {
                     "BIOS Configuration Security", 
@@ -26365,7 +24391,6 @@
                     0x0A, 
                     0x06
                 }, 
-
                 Package (0x05)
                 {
                     "Unknown Event", 
@@ -26388,22 +24413,18 @@
                     {
                         Store (0x01, Local1)
                     }
-
                     If (TXTC)
                     {
                         Store (0x01, Local2)
                     }
-
                     If (AMTC)
                     {
                         Store (0x01, Local3)
                     }
-
                     If (LNot (BKPR))
                     {
                         Store (0x01, Local7)
                     }
-
                     Or (Local1, Local2, Local4)
                     Or (Local4, Local3, Local4)
                     Or (Local4, Local7, Local4)
@@ -26418,134 +24439,111 @@
                             {
                                 Store (SWRD, Index (BISE, Local5))
                             }
-
                             If (\SRCM (Local6, "Ctrl I Prompt", 0x0D))
                             {
                                 Store (CTIP, Index (BISE, Local5))
                                 Store (0x00, Local1)
                             }
                         }
-
                         If (Local2)
                         {
                             If (\SRCM (Local6, "TXT Technology", 0x0E))
                             {
                                 Store (TXTS, Index (BISE, Local5))
                             }
-
                             If (\SRCM (Local6, "TXT Technology Security Level", 0x1D))
                             {
                                 Store (TXTP, Index (BISE, Local5))
                                 Store (0x00, Local2)
                             }
                         }
-
                         If (Local3)
                         {
                             If (\SRCM (Local6, "Terminal Emulation Mode", 0x17))
                             {
                                 Store (ATEM, Index (BISE, Local5))
                             }
-
                             If (\SRCM (Local6, "Firmware Verbosity", 0x12))
                             {
                                 Store (AFWV, Index (BISE, Local5))
                             }
-
                             If (\SRCM (Local6, "Firmware Progress Event Support", 0x1F))
                             {
                                 Store (APES, Index (BISE, Local5))
                             }
-
                             If (\SRCM (Local6, "Unconfigure AMT on next boot", 0x1C))
                             {
                                 Store (AUNB, Index (BISE, Local5))
                             }
-
                             If (\SRCM (Local6, "USB Key Provisioning Support", 0x1C))
                             {
                                 Store (AUKP, Index (BISE, Local5))
                             }
-
                             If (\SRCM (Local6, "AMT Setup Prompt(Ctrl-P)", 0x18))
                             {
                                 Store (ASUP, Index (BISE, Local5))
                             }
-
                             If (\SRCM (Local6, "Initiate Intel CIRA", 0x13))
                             {
                                 Store (AIIC, Index (BISE, Local5))
                             }
-
                             If (\SRCM (Local6, "Terminal Emulation Mode Security Level", 0x26))
                             {
                                 Store (ATEP, Index (BISE, Local5))
                             }
-
                             If (\SRCM (Local6, "Firmware Verbosity Security Level", 0x21))
                             {
                                 Store (AFWP, Index (BISE, Local5))
                             }
-
                             If (\SRCM (Local6, "Firmware Progress Event Support Security Level", 0x2E))
                             {
                                 Store (APEP, Index (BISE, Local5))
                             }
-
                             If (\SRCM (Local6, "Unconfigure AMT on next boot Security Level", 0x2B))
                             {
                                 Store (AUNP, Index (BISE, Local5))
                             }
-
                             If (\SRCM (Local6, "USB Key Provisioning Support Security Level", 0x2B))
                             {
                                 Store (AUPP, Index (BISE, Local5))
                             }
-
                             If (\SRCM (Local6, "AMT Setup Prompt(Ctrl-P) Security Level", 0x27))
                             {
                                 Store (ASPP, Index (BISE, Local5))
                             }
-
                             If (\SRCM (Local6, "Initiate Intel CIRA Security Level", 0x22))
                             {
                                 Store (AIIP, Index (BISE, Local5))
                                 Store (0x00, Local3)
                             }
                         }
-
                         If (Local7)
                         {
                             If (\SRCM (Local6, "Backlit Keyboard Timeout", 0x18))
                             {
                                 Store (BKTO, Index (BISE, Local5))
                             }
-
                             If (\SRCM (Local6, "Backlit Keyboard Timeout Security Level", 0x27))
                             {
                                 Store (BKTP, Index (BISE, Local5))
                                 Store (0x00, Local7)
                             }
                         }
-
                         Increment (Local5)
                     }
-
-                    Store (0x00, IWPN) /* \_SB_.WMID.IWPN */
+                    Store (0x00, IWPN)
                 }
             }
-
-            Method (_WED, 1, NotSerialized)  // _Wxx: Wake Event
+            Method (_WED, 1, NotSerialized)
             {
                 If (LEqual (Arg0, 0xA0))
                 {
                     If (LEqual (DerefOf (Index (ETYP, 0x00)), 0x00))
                     {
-                        Store (ST01, BF2S) /* \_SB_.BF2S */
+                        Store (ST01, BF2S)
                         Store (BF2S, Index (DerefOf (Index (EVNT, 0x00)), 0x01))
                         Return (DerefOf (Index (EVNT, 0x00)))
                     }
-
                     If (LEqual (DerefOf (Index (ETYP, 0x00)), 0x01))
                     {
                         Return (DerefOf (Index (EVNT, 0x01)))
@@ -26559,1110 +24557,1106 @@
                 {
                     Store (Buffer (0x08)
                         {
-                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00   /* ........ */
+                             0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
                         }, Local0)
                     CreateDWordField (Local0, 0x00, EVID)
                     CreateDWordField (Local0, 0x04, EVDA)
-                    Store (WEI1, EVID) /* \_SB_.WMID._WED.EVID */
-                    Store (WED1, EVDA) /* \_SB_.WMID._WED.EVDA */
+                    Store (WEI1, EVID)
+                    Store (WED1, EVDA)
                     If (LNotEqual (WEI2, 0x00))
                     {
-                        Store (WEI2, WEI1) /* \_SB_.WMID.WEI1 */
-                        Store (WED2, WED1) /* \_SB_.WMID.WED1 */
-                        Store (WEI1, EVID) /* \_SB_.WMID._WED.EVID */
-                        Store (WED1, EVDA) /* \_SB_.WMID._WED.EVDA */
-                        Store (0x00, WEI2) /* \_SB_.WMID.WEI2 */
-                        Store (0x00, WED2) /* \_SB_.WMID.WED2 */
+                        Store (WEI2, WEI1)
+                        Store (WED2, WED1)
+                        Store (WEI1, EVID)
+                        Store (WED1, EVDA)
+                        Store (0x00, WEI2)
+                        Store (0x00, WED2)
                         If (LEqual (WEVT, 0x00))
                         {
-                            Store (0x01, WEVT) /* \_SB_.WMID.WEVT */
-                            Notify (\_SB.WMID, 0x80) // Status Change
+                            Store (0x01, WEVT)
+                            Notify (\_SB.WMID, 0x80)
                         }
                     }
                     Else
                     {
-                        Store (0x00, WEI1) /* \_SB_.WMID.WEI1 */
-                        Store (0x00, WED1) /* \_SB_.WMID.WED1 */
+                        Store (0x00, WEI1)
+                        Store (0x00, WED1)
                     }
-
                     Return (Local0)
                 }
             }
-
             Name (WQAB, Buffer (0x2135)
             {
-                /* 0000 */  0x46, 0x4F, 0x4D, 0x42, 0x01, 0x00, 0x00, 0x00,  /* FOMB.... */
-                /* 0008 */  0x25, 0x21, 0x00, 0x00, 0xB0, 0xCB, 0x00, 0x00,  /* %!...... */
-                /* 0010 */  0x44, 0x53, 0x00, 0x01, 0x1A, 0x7D, 0xDA, 0x54,  /* DS...}.T */
-                /* 0018 */  0x28, 0x27, 0xA1, 0x00, 0x01, 0x06, 0x18, 0x42,  /* ('.....B */
-                /* 0020 */  0x10, 0x4D, 0x10, 0x92, 0x46, 0x62, 0x02, 0x89,  /* .M..Fb.. */
-                /* 0028 */  0x80, 0x90, 0x18, 0x18, 0x14, 0x81, 0x85, 0x00,  /* ........ */
-                /* 0030 */  0x49, 0x02, 0x88, 0xC4, 0x41, 0xE1, 0x20, 0xD4,  /* I...A. . */
-                /* 0038 */  0x9F, 0x40, 0x7E, 0x05, 0x20, 0x74, 0x28, 0x40,  /* .@~. t(@ */
-                /* 0040 */  0xA6, 0x00, 0x83, 0x02, 0x9C, 0x22, 0x88, 0xA0,  /* .....".. */
-                /* 0048 */  0x57, 0x01, 0x36, 0x05, 0x98, 0x14, 0x60, 0x51,  /* W.6...`Q */
-                /* 0050 */  0x80, 0x76, 0x01, 0x96, 0x05, 0xE8, 0x16, 0x20,  /* .v.....  */
-                /* 0058 */  0x1D, 0x96, 0x88, 0x04, 0x47, 0x89, 0x01, 0x47,  /* ....G..G */
-                /* 0060 */  0xE9, 0xC4, 0x16, 0x6E, 0xD8, 0xE0, 0x85, 0xA2,  /* ...n.... */
-                /* 0068 */  0x68, 0x06, 0x51, 0x12, 0x94, 0x8B, 0x20, 0x5D,  /* h.Q... ] */
-                /* 0070 */  0x10, 0x52, 0x2E, 0xC0, 0x37, 0x82, 0x06, 0x10,  /* .R..7... */
-                /* 0078 */  0xA5, 0x77, 0x01, 0xB6, 0x05, 0x98, 0x86, 0x27,  /* .w.....' */
-                /* 0080 */  0xD2, 0x20, 0xE4, 0x60, 0x08, 0x54, 0xCE, 0x80,  /* . .`.T.. */
-                /* 0088 */  0x20, 0x69, 0x44, 0x21, 0x1E, 0xA7, 0x44, 0x08,  /*  iD!..D. */
-                /* 0090 */  0x0A, 0x84, 0x90, 0xD4, 0xF1, 0xA0, 0xA0, 0x71,  /* .......q */
-                /* 0098 */  0x88, 0xAD, 0xCE, 0x46, 0x93, 0xA9, 0x74, 0x7E,  /* ...F..t~ */
-                /* 00A0 */  0x48, 0x82, 0x70, 0xC6, 0x2A, 0x7E, 0x3A, 0x9A,  /* H.p.*~:. */
-                /* 00A8 */  0xD0, 0xD9, 0x9C, 0x60, 0xE7, 0x18, 0x72, 0x3C,  /* ...`..r< */
-                /* 00B0 */  0x48, 0xF4, 0x20, 0xB8, 0x00, 0x0F, 0x1C, 0x2C,  /* H. ...., */
-                /* 00B8 */  0x34, 0x84, 0x22, 0x6B, 0x80, 0xC1, 0x8C, 0xDD,  /* 4."k.... */
-                /* 00C0 */  0x63, 0xB1, 0x0B, 0x4E, 0x0A, 0xEC, 0x61, 0xB3,  /* c..N..a. */
-                /* 00C8 */  0x01, 0x19, 0xA2, 0x24, 0x38, 0xD4, 0x11, 0xC0,  /* ...$8... */
-                /* 00D0 */  0x12, 0x05, 0x98, 0x1F, 0x87, 0x0C, 0x0F, 0x95,  /* ........ */
-                /* 00D8 */  0x8C, 0x25, 0x24, 0x1B, 0xAB, 0x87, 0xC2, 0xA5,  /* .%$..... */
-                /* 00E0 */  0x40, 0x68, 0x6C, 0x27, 0xED, 0x19, 0x45, 0x2C,  /* @hl'..E, */
-                /* 00E8 */  0x79, 0x4A, 0x82, 0x49, 0xE0, 0x51, 0x44, 0x36,  /* yJ.I.QD6 */
-                /* 00F0 */  0x1A, 0x27, 0x28, 0x1B, 0x1A, 0x25, 0x03, 0x42,  /* .'(..%.B */
-                /* 00F8 */  0x9E, 0x05, 0x58, 0x07, 0x26, 0x04, 0x76, 0x2F,  /* ..X.&.v/ */
-                /* 0100 */  0xC0, 0x9A, 0x00, 0x73, 0xB3, 0x90, 0xB1, 0xB9,  /* ...s.... */
-                /* 0108 */  0xE8, 0xFF, 0x0F, 0x71, 0xB0, 0x31, 0xDA, 0x9A,  /* ...q.1.. */
-                /* 0110 */  0xAE, 0x90, 0xC2, 0xC4, 0x88, 0x12, 0x2C, 0x5E,  /* ......,^ */
-                /* 0118 */  0xC5, 0xC3, 0x10, 0xCA, 0x93, 0x42, 0xA8, 0x48,  /* .....B.H */
-                /* 0120 */  0x95, 0xA1, 0x68, 0xB4, 0x51, 0x2A, 0x14, 0xE0,  /* ..h.Q*.. */
-                /* 0128 */  0x4C, 0x80, 0x30, 0x5C, 0x1D, 0x03, 0x82, 0x46,  /* L.0\...F */
-                /* 0130 */  0x88, 0x15, 0x29, 0x56, 0xFB, 0x83, 0x20, 0xF1,  /* ..)V.. . */
-                /* 0138 */  0x2D, 0x40, 0x54, 0x01, 0xA2, 0x48, 0xA3, 0x41,  /* -@T..H.A */
-                /* 0140 */  0x9D, 0x03, 0x3C, 0x5C, 0x0F, 0xF5, 0xF0, 0x3D,  /* ..<\...= */
-                /* 0148 */  0xF6, 0x93, 0x0C, 0x72, 0x90, 0x67, 0xF1, 0xA8,  /* ...r.g.. */
-                /* 0150 */  0x70, 0x9C, 0x06, 0x49, 0xE0, 0x0B, 0x80, 0x4F,  /* p..I...O */
-                /* 0158 */  0x08, 0x1E, 0x38, 0xDE, 0x35, 0xA0, 0x66, 0x7C,  /* ..8.5.f| */
-                /* 0160 */  0xBC, 0x4C, 0x10, 0x1C, 0x6A, 0x88, 0x1E, 0x68,  /* .L..j..h */
-                /* 0168 */  0xB8, 0x13, 0x38, 0x44, 0x06, 0xE8, 0x49, 0x3D,  /* ..8D..I= */
-                /* 0170 */  0x52, 0x60, 0x07, 0x77, 0x32, 0xEF, 0x01, 0xAF,  /* R`.w2... */
-                /* 0178 */  0x0A, 0xCD, 0x5E, 0x12, 0x08, 0xC1, 0xF1, 0xF8,  /* ..^..... */
-                /* 0180 */  0x7E, 0xC0, 0x26, 0x9C, 0xC0, 0xF2, 0x07, 0x81,  /* ~.&..... */
-                /* 0188 */  0x1A, 0x99, 0xA1, 0x3D, 0xCA, 0xD3, 0x8A, 0x19,  /* ...=.... */
-                /* 0190 */  0xF2, 0x31, 0xC1, 0x04, 0x16, 0x0B, 0x21, 0x05,  /* .1....!. */
-                /* 0198 */  0x10, 0x1A, 0x0F, 0xF8, 0x6F, 0x00, 0x8F, 0x17,  /* ....o... */
-                /* 01A0 */  0xBE, 0x12, 0xC4, 0xF6, 0x80, 0x12, 0x0C, 0x0B,  /* ........ */
-                /* 01A8 */  0x21, 0x23, 0xAB, 0xF0, 0x78, 0xE8, 0x28, 0x7C,  /* !#..x.(| */
-                /* 01B0 */  0x95, 0x38, 0x9C, 0xD3, 0x8A, 0x67, 0x82, 0xE1,  /* .8...g.. */
-                /* 01B8 */  0x20, 0xF4, 0x05, 0x90, 0x00, 0x51, 0xE7, 0x0C,  /*  ....Q.. */
-                /* 01C0 */  0xD4, 0x61, 0xC1, 0xE7, 0x04, 0x76, 0x33, 0x38,  /* .a...v38 */
-                /* 01C8 */  0x83, 0x47, 0x00, 0x8F, 0xE4, 0x84, 0xFC, 0x2B,  /* .G.....+ */
-                /* 01D0 */  0xF1, 0xC0, 0xE0, 0x03, 0xE2, 0xEF, 0x1F, 0xA7,  /* ........ */
-                /* 01D8 */  0xEC, 0x11, 0x9C, 0xA9, 0x01, 0x7D, 0x1C, 0xF0,  /* .....}.. */
-                /* 01E0 */  0xFF, 0x7F, 0x28, 0x7C, 0x88, 0x1E, 0xDF, 0x29,  /* ..(|...) */
-                /* 01E8 */  0x1F, 0xAF, 0x4F, 0x17, 0x96, 0x35, 0x4E, 0xE8,  /* ..O..5N. */
-                /* 01F0 */  0x77, 0x08, 0x9F, 0x38, 0x7C, 0x64, 0x71, 0x44,  /* w..8|dqD */
-                /* 01F8 */  0x08, 0x39, 0x39, 0x05, 0xA0, 0x81, 0x4F, 0xF7,  /* .99...O. */
-                /* 0200 */  0xEC, 0x22, 0x9C, 0xAE, 0x27, 0xE5, 0x40, 0xC3,  /* ."..'.@. */
-                /* 0208 */  0xA0, 0xE3, 0x04, 0xC7, 0x79, 0x00, 0x1C, 0xE3,  /* ....y... */
-                /* 0210 */  0x84, 0x7F, 0x2E, 0x80, 0x3F, 0x40, 0x7E, 0xCA,  /* ....?@~. */
-                /* 0218 */  0x78, 0xC5, 0x48, 0xE0, 0x98, 0x23, 0x44, 0x9F,  /* x.H..#D. */
-                /* 0220 */  0x6B, 0x3C, 0x42, 0x2C, 0xFC, 0x53, 0x45, 0xE1,  /* k<B,.SE. */
-                /* 0228 */  0x03, 0x21, 0x63, 0x04, 0x17, 0xA0, 0xC7, 0x08,  /* .!c..... */
-                /* 0230 */  0x7C, 0x03, 0x8E, 0x11, 0x7D, 0x94, 0xE0, 0xEA,  /* |...}... */
-                /* 0238 */  0x0F, 0x1A, 0x74, 0x80, 0xB8, 0xFF, 0xFF, 0x00,  /* ..t..... */
-                /* 0240 */  0xE1, 0x83, 0x7A, 0x80, 0xC0, 0x37, 0xFA, 0xD1,  /* ..z..7.. */
-                /* 0248 */  0x03, 0x3D, 0x2E, 0x8B, 0x3E, 0x0F, 0xC8, 0xF8,  /* .=..>... */
-                /* 0250 */  0x89, 0x46, 0xF3, 0xE2, 0xA7, 0x03, 0x7E, 0xF8,  /* .F....~. */
-                /* 0258 */  0x00, 0x0F, 0xA8, 0x87, 0x84, 0x03, 0xC5, 0x4C,  /* .......L */
-                /* 0260 */  0x9B, 0x83, 0x3E, 0xBB, 0x1C, 0x3A, 0x76, 0xB8,  /* ..>..:v. */
-                /* 0268 */  0xE0, 0x3F, 0x81, 0x80, 0x4B, 0xDE, 0x21, 0x0C,  /* .?..K.!. */
-                /* 0270 */  0x14, 0x23, 0xC6, 0x9F, 0x83, 0x7C, 0x0A, 0x03,  /* .#...|.. */
-                /* 0278 */  0xFF, 0xFF, 0xFF, 0x14, 0x06, 0xFE, 0xE1, 0xF0,  /* ........ */
-                /* 0280 */  0x20, 0x4F, 0x07, 0x9F, 0xB6, 0xA8, 0x74, 0x18,  /*  O....t. */
-                /* 0288 */  0xD4, 0x81, 0x0B, 0xB0, 0x32, 0x89, 0x08, 0xCF,  /* ....2... */
-                /* 0290 */  0x12, 0xB5, 0x41, 0xE8, 0xD4, 0xF0, 0x36, 0xF1,  /* ..A...6. */
-                /* 0298 */  0xB6, 0xE5, 0x5B, 0x40, 0x9C, 0xD3, 0xEC, 0xED,  /* ..[@.... */
-                /* 02A0 */  0xC0, 0x45, 0x30, 0x22, 0xD4, 0x0C, 0x45, 0x4E,  /* .E0"..EN */
-                /* 02A8 */  0x5A, 0x11, 0x63, 0x44, 0x79, 0xDC, 0x32, 0xCA,  /* Z.cDy.2. */
-                /* 02B0 */  0xDB, 0xD6, 0x0B, 0x40, 0xBC, 0x13, 0x7B, 0xDE,  /* ...@..{. */
-                /* 02B8 */  0x32, 0x46, 0xF0, 0xC8, 0x0F, 0x5C, 0x2C, 0xC6,  /* 2F...\,. */
-                /* 02C0 */  0xEA, 0xF5, 0x5F, 0xF3, 0x81, 0x0B, 0x70, 0xF6,  /* .._...p. */
-                /* 02C8 */  0xFF, 0x3F, 0x70, 0x01, 0x1C, 0x0A, 0x7A, 0x18,  /* .?p...z. */
-                /* 02D0 */  0x42, 0x0F, 0xC3, 0x53, 0x39, 0x97, 0x87, 0xC8,  /* B..S9... */
-                /* 02D8 */  0x53, 0x89, 0x18, 0x35, 0x4C, 0xD4, 0x67, 0x28,  /* S..5L.g( */
-                /* 02E0 */  0xDF, 0x2D, 0x7C, 0x20, 0x02, 0xDF, 0x99, 0x0B,  /* .-| .... */
-                /* 02E8 */  0xF8, 0xFD, 0xFF, 0x0F, 0x44, 0x70, 0x8E, 0x29,  /* ....Dp.) */
-                /* 02F0 */  0xB8, 0x33, 0x0D, 0x78, 0x7C, 0xCE, 0x40, 0x20,  /* .3.x|.@  */
-                /* 02F8 */  0xA7, 0xE2, 0x43, 0x0D, 0x60, 0x41, 0xF4, 0x13,  /* ..C.`A.. */
-                /* 0300 */  0xC2, 0x27, 0x1A, 0x2A, 0x13, 0x06, 0x75, 0xA8,  /* .'.*..u. */
-                /* 0308 */  0x01, 0xAC, 0x5C, 0x61, 0x9E, 0x46, 0xCF, 0xF9,  /* ..\a.F.. */
-                /* 0310 */  0x59, 0xC6, 0xA7, 0x1A, 0x1F, 0x4A, 0x8D, 0x63,  /* Y....J.c */
-                /* 0318 */  0x88, 0x97, 0x99, 0x87, 0x1A, 0x1F, 0x0B, 0x5E,  /* .......^ */
-                /* 0320 */  0x49, 0x7D, 0xA8, 0x31, 0x54, 0x9C, 0x87, 0x1A,  /* I}.1T... */
-                /* 0328 */  0x0F, 0x37, 0x50, 0xD4, 0x37, 0x9B, 0x67, 0x1B,  /* .7P.7.g. */
-                /* 0330 */  0xA3, 0xC7, 0xF7, 0x0D, 0xD5, 0x10, 0x0F, 0x35,  /* .......5 */
-                /* 0338 */  0x4C, 0xF2, 0x4A, 0x35, 0x16, 0x1F, 0x6A, 0xC0,  /* L.J5..j. */
-                /* 0340 */  0xF1, 0xFF, 0x3F, 0xD4, 0x00, 0xFC, 0xFF, 0xFF,  /* ..?..... */
-                /* 0348 */  0x1F, 0x6A, 0x00, 0x47, 0x47, 0x03, 0x38, 0x47,  /* .j.GG.8G */
-                /* 0350 */  0x46, 0xDC, 0xD1, 0x00, 0x5C, 0x87, 0x52, 0xE0,  /* F...\.R. */
-                /* 0358 */  0x70, 0x34, 0x00, 0x1E, 0x47, 0x21, 0x30, 0x5F,  /* p4..G!0_ */
-                /* 0360 */  0x68, 0x7C, 0x14, 0x02, 0x16, 0xFF, 0xFF, 0xA3,  /* h|...... */
-                /* 0368 */  0x10, 0xF8, 0x65, 0x9F, 0x83, 0x50, 0x42, 0x8F,  /* ..e..PB. */
-                /* 0370 */  0x42, 0x80, 0xA0, 0xDB, 0xCF, 0x53, 0xC4, 0xB3,  /* B....S.. */
-                /* 0378 */  0x8F, 0x2F, 0x3F, 0x0F, 0x04, 0x11, 0x5E, 0xF3,  /* ./?...^. */
-                /* 0380 */  0x7D, 0x0A, 0xF2, 0x21, 0xDF, 0x47, 0x21, 0x06,  /* }..!.G!. */
-                /* 0388 */  0x63, 0x28, 0x5F, 0x83, 0x7C, 0x14, 0x62, 0x50,  /* c(_.|.bP */
-                /* 0390 */  0xAF, 0x41, 0xBE, 0xEF, 0x1B, 0xE4, 0xF1, 0x22,  /* .A....." */
-                /* 0398 */  0x48, 0xEC, 0x67, 0x02, 0x1F, 0x85, 0x98, 0xE8,  /* H.g..... */
-                /* 03A0 */  0xA3, 0x10, 0xA0, 0xF0, 0xFF, 0x7F, 0x14, 0x02,  /* ........ */
-                /* 03A8 */  0xF8, 0xFF, 0xFF, 0x3F, 0x0A, 0x01, 0xCE, 0x02,  /* ...?.... */
-                /* 03B0 */  0x1C, 0x0D, 0x40, 0x37, 0xAD, 0x47, 0x21, 0xF0,  /* ..@7.G!. */
-                /* 03B8 */  0xDE, 0x59, 0x4E, 0xFB, 0x04, 0x7C, 0x16, 0x02,  /* .YN..|.. */
-                /* 03C0 */  0xCC, 0xFE, 0xFF, 0xCF, 0x42, 0xC0, 0xEC, 0x28,  /* ....B..( */
-                /* 03C8 */  0x74, 0x14, 0x67, 0xF9, 0x2A, 0xF4, 0x04, 0xF0,  /* t.g.*... */
-                /* 03D0 */  0x02, 0x10, 0x23, 0xCC, 0x3B, 0xD0, 0x4B, 0x26,  /* ..#.;.K& */
-                /* 03D8 */  0xBB, 0x8B, 0x1B, 0xE7, 0xC9, 0xE5, 0x2C, 0x9E,  /* ......,. */
-                /* 03E0 */  0xC4, 0x7D, 0x09, 0xF2, 0x81, 0xE2, 0x59, 0xC8,  /* .}....Y. */
-                /* 03E8 */  0x50, 0xA7, 0x1B, 0xF4, 0x8D, 0xDC, 0x03, 0x8B,  /* P....... */
-                /* 03F0 */  0x19, 0x3F, 0xC4, 0xF3, 0x90, 0x21, 0x9E, 0x85,  /* .?...!.. */
-                /* 03F8 */  0x00, 0x76, 0xFD, 0xFF, 0xCF, 0x42, 0x00, 0xFF,  /* .v...B.. */
-                /* 0400 */  0xFF, 0xFF, 0x47, 0x03, 0xF8, 0x2F, 0x00, 0x9F,  /* ..G../.. */
-                /* 0408 */  0x85, 0x80, 0xE7, 0x09, 0xE0, 0x41, 0xDB, 0x67,  /* .....A.g */
-                /* 0410 */  0x21, 0x80, 0x33, 0x87, 0xCB, 0xF3, 0x7F, 0x05,  /* !.3..... */
-                /* 0418 */  0x3A, 0x96, 0xF7, 0x08, 0xCF, 0xFA, 0x24, 0x5F,  /* :.....$_ */
-                /* 0420 */  0x2F, 0x3D, 0xD3, 0x87, 0x82, 0x67, 0x21, 0x86,  /* /=...g!. */
-                /* 0428 */  0x75, 0x18, 0x3E, 0x0B, 0x31, 0x88, 0x17, 0x4D,  /* u.>.1..M */
-                /* 0430 */  0x43, 0xBC, 0x70, 0xFA, 0x30, 0xE0, 0xFF, 0x3F,  /* C.p.0..? */
-                /* 0438 */  0x5E, 0xE0, 0x57, 0x4E, 0x03, 0x05, 0x09, 0xF4,  /* ^.WN.... */
-                /* 0440 */  0x2C, 0x04, 0x30, 0xFE, 0xFF, 0x7F, 0x16, 0x02,  /* ,.0..... */
-                /* 0448 */  0xC8, 0xB8, 0x46, 0x9D, 0x85, 0x80, 0xE5, 0x6D,  /* ..F....m */
-                /* 0450 */  0xE5, 0x19, 0xDB, 0xA7, 0x95, 0x04, 0xFF, 0xFF,  /* ........ */
-                /* 0458 */  0x67, 0x21, 0xC0, 0x41, 0x2E, 0x23, 0x07, 0x21,  /* g!.A.#.! */
-                /* 0460 */  0x4C, 0xC4, 0x87, 0x83, 0x8F, 0x99, 0x80, 0x9E,  /* L....... */
-                /* 0468 */  0x29, 0xBE, 0xB8, 0x1B, 0xE3, 0x09, 0xE0, 0x45,  /* )......E */
-                /* 0470 */  0xE2, 0x31, 0x93, 0x1D, 0x35, 0x0D, 0xF3, 0x2C,  /* .1..5.., */
-                /* 0478 */  0x64, 0xBC, 0xB3, 0x78, 0x0D, 0x78, 0x82, 0xF7,  /* d..x.x.. */
-                /* 0480 */  0xE4, 0x9F, 0x85, 0x18, 0xD8, 0x61, 0x05, 0x7B,  /* .....a.{ */
-                /* 0488 */  0x14, 0x32, 0xA8, 0xC1, 0x63, 0x87, 0x08, 0x13,  /* .2..c... */
-                /* 0490 */  0xE8, 0x59, 0x88, 0xC5, 0x7D, 0xAE, 0xE8, 0x3C,  /* .Y..}..< */
-                /* 0498 */  0xE1, 0xB3, 0x10, 0xF0, 0xFE, 0xFF, 0x9F, 0x25,  /* .......% */
-                /* 04A0 */  0xE0, 0x5E, 0x0D, 0x9E, 0x85, 0x00, 0x13, 0x87,  /* .^...... */
-                /* 04A8 */  0x0D, 0x9F, 0x35, 0xC0, 0x33, 0x7C, 0x8F, 0xEA,  /* ..5.3|.. */
-                /* 04B0 */  0x1C, 0x1E, 0x8F, 0x81, 0x7F, 0x56, 0x1D, 0xE7,  /* .....V.. */
-                /* 04B8 */  0x04, 0x96, 0x7B, 0xD1, 0xB2, 0x71, 0xA0, 0xA1,  /* ..{..q.. */
-                /* 04C0 */  0x23, 0xB2, 0x3A, 0x20, 0x8D, 0x0D, 0x73, 0x29,  /* #.: ..s) */
-                /* 04C8 */  0x89, 0x7C, 0x72, 0x6C, 0xD4, 0x56, 0x04, 0xA7,  /* .|rl.V.. */
-                /* 04D0 */  0x33, 0x93, 0x4F, 0x00, 0xD6, 0x42, 0x21, 0x05,  /* 3.O..B!. */
-                /* 04D8 */  0x34, 0x1A, 0x8B, 0xE1, 0x9D, 0xF9, 0xE8, 0x44,  /* 4......D */
-                /* 04E0 */  0x41, 0x0C, 0xE8, 0xE3, 0x90, 0x6D, 0x1C, 0x0A,  /* A....m.. */
-                /* 04E8 */  0x50, 0x7B, 0xD1, 0x14, 0xC8, 0x39, 0x07, 0xA3,  /* P{...9.. */
-                /* 04F0 */  0x7F, 0x76, 0x74, 0x36, 0xBE, 0x13, 0x70, 0x0D,  /* .vt6..p. */
-                /* 04F8 */  0x10, 0x3A, 0x25, 0x18, 0xDA, 0x6A, 0x04, 0xFC,  /* .:%..j.. */
-                /* 0500 */  0xFF, 0x67, 0x89, 0x01, 0x33, 0xFE, 0x53, 0x8C,  /* .g..3.S. */
-                /* 0508 */  0x09, 0x7C, 0x8E, 0xC1, 0x1F, 0x0C, 0xF0, 0x03,  /* .|...... */
-                /* 0510 */  0x7F, 0x31, 0xA8, 0xFA, 0x5E, 0xA0, 0xFB, 0x82,  /* .1..^... */
-                /* 0518 */  0xD5, 0xDD, 0x64, 0x20, 0xCC, 0xC8, 0x04, 0xF5,  /* ..d .... */
-                /* 0520 */  0x9D, 0x0E, 0x40, 0x01, 0xE4, 0x0B, 0x81, 0xCF,  /* ..@..... */
-                /* 0528 */  0x51, 0x0F, 0x05, 0x6C, 0x22, 0x21, 0xC2, 0x44,  /* Q..l"!.D */
-                /* 0530 */  0x33, 0x3A, 0x62, 0xC2, 0xA8, 0xE8, 0x13, 0xA6,  /* 3:b..... */
-                /* 0538 */  0x20, 0x9E, 0xB0, 0x63, 0x4D, 0x18, 0x3D, 0x13,  /*  ..cM.=. */
-                /* 0540 */  0x5F, 0x74, 0xD8, 0x88, 0x31, 0x21, 0xAE, 0x1E,  /* _t..1!.. */
-                /* 0548 */  0xD0, 0x26, 0x18, 0xD4, 0x97, 0x22, 0x58, 0x43,  /* .&..."XC */
-                /* 0550 */  0xE6, 0x63, 0xF1, 0x05, 0x02, 0x37, 0x65, 0x30,  /* .c...7e0 */
-                /* 0558 */  0xCE, 0x89, 0x5D, 0x13, 0x7C, 0xD9, 0xC1, 0xCD,  /* ..].|... */
-                /* 0560 */  0x19, 0x8C, 0xF0, 0x98, 0xBB, 0x18, 0xBF, 0x3A,  /* .......: */
-                /* 0568 */  0x79, 0x74, 0xFC, 0xA0, 0xE0, 0x1B, 0x0E, 0xC3,  /* yt...... */
-                /* 0570 */  0x7E, 0x32, 0xF3, 0x8C, 0xDE, 0xCB, 0x7C, 0x8D,  /* ~2....|. */
-                /* 0578 */  0xC3, 0xC0, 0x7A, 0xBC, 0x1C, 0xD6, 0x68, 0x61,  /* ..z...ha */
-                /* 0580 */  0x0F, 0xED, 0x3D, 0xC4, 0xFF, 0xFF, 0x43, 0x8C,  /* ..=...C. */
-                /* 0588 */  0xCF, 0x13, 0xC6, 0x08, 0xEB, 0xDB, 0x0B, 0x38,  /* .......8 */
-                /* 0590 */  0xEE, 0x59, 0xF0, 0xEF, 0x1A, 0xE0, 0xB9, 0x84,  /* .Y...... */
-                /* 0598 */  0xF8, 0xAE, 0x01, 0x30, 0xF0, 0xFF, 0x7F, 0xD7,  /* ...0.... */
-                /* 05A0 */  0x00, 0x4E, 0xD7, 0x04, 0xDF, 0x35, 0x80, 0xF7,  /* .N...5.. */
-                /* 05A8 */  0xD0, 0x7D, 0xD7, 0x00, 0xAE, 0xD9, 0xEF, 0x1A,  /* .}...... */
-                /* 05B0 */  0xA8, 0x63, 0x80, 0x15, 0xDE, 0x35, 0xA0, 0x5D,  /* .c...5.] */
-                /* 05B8 */  0xD9, 0xDE, 0xD7, 0x9E, 0xB0, 0xAC, 0xE9, 0xB2,  /* ........ */
-                /* 05C0 */  0x81, 0x52, 0x73, 0xD9, 0x00, 0x14, 0xFC, 0xFF,  /* .Rs..... */
-                /* 05C8 */  0x2F, 0x1B, 0x80, 0x01, 0x29, 0x13, 0x46, 0x85,  /* /...).F. */
-                /* 05D0 */  0x9F, 0x30, 0x05, 0xF1, 0x84, 0x1D, 0xEC, 0xB2,  /* .0...... */
-                /* 05D8 */  0x01, 0x8A, 0x18, 0x97, 0x0D, 0xD0, 0x8F, 0xED,  /* ........ */
-                /* 05E0 */  0x65, 0x03, 0x18, 0xDC, 0x13, 0xF8, 0x6D, 0x03,  /* e.....m. */
-                /* 05E8 */  0x78, 0x43, 0xFA, 0xB6, 0x01, 0xD6, 0xFF, 0xFF,  /* xC...... */
-                /* 05F0 */  0x6D, 0x03, 0xAC, 0xF9, 0x6F, 0x1B, 0x28, 0x0E,  /* m...o.(. */
-                /* 05F8 */  0xAB, 0xBC, 0x6D, 0x40, 0x3C, 0xC9, 0x33, 0x02,  /* ..m@<.3. */
-                /* 0600 */  0xAB, 0xBA, 0x6E, 0xA0, 0xF4, 0x5C, 0x37, 0x00,  /* ..n..\7. */
-                /* 0608 */  0x12, 0x88, 0x99, 0x30, 0x2A, 0xFE, 0x84, 0x29,  /* ...0*..) */
-                /* 0610 */  0x88, 0x27, 0xEC, 0x68, 0xD7, 0x0D, 0x50, 0x04,  /* .'.h..P. */
-                /* 0618 */  0xB9, 0x6E, 0x80, 0x7E, 0x5E, 0x09, 0xFE, 0xFF,  /* .n.~^... */
-                /* 0620 */  0xAF, 0x1B, 0xC0, 0xE0, 0xA2, 0x80, 0xB9, 0x6F,  /* .......o */
-                /* 0628 */  0x00, 0x6F, 0x58, 0x7E, 0xDF, 0x00, 0x7C, 0xDC,  /* .oX~..|. */
-                /* 0630 */  0xC4, 0x31, 0xF7, 0x0D, 0xC0, 0xCC, 0xFF, 0xFF,  /* .1...... */
-                /* 0638 */  0xBE, 0x01, 0xB0, 0xE7, 0xA2, 0x80, 0xBB, 0x6F,  /* .......o */
-                /* 0640 */  0x00, 0xEF, 0x8B, 0xB4, 0xEF, 0x1B, 0x60, 0xFE,  /* ......`. */
-                /* 0648 */  0xFF, 0xDF, 0x37, 0xC0, 0x28, 0x6D, 0xFD, 0x1E,  /* ..7.(m.. */
-                /* 0650 */  0x1C, 0x3D, 0x21, 0x78, 0x7C, 0xB8, 0xFB, 0xA5,  /* .=!x|... */
-                /* 0658 */  0xC7, 0xE7, 0xBB, 0x39, 0x38, 0x06, 0x79, 0x8C,  /* ...98.y. */
-                /* 0660 */  0x87, 0x76, 0xC0, 0xAF, 0xEF, 0x9E, 0x98, 0xEF,  /* .v...... */
-                /* 0668 */  0xE6, 0xC0, 0xFF, 0x4C, 0x70, 0x3C, 0x18, 0x68,  /* ...Lp<.h */
-                /* 0670 */  0x1C, 0x62, 0xAB, 0x97, 0x06, 0x72, 0x34, 0x38,  /* .b...r48 */
-                /* 0678 */  0x3F, 0xDC, 0x19, 0x81, 0x61, 0x15, 0x7F, 0xF2,  /* ?...a... */
-                /* 0680 */  0x47, 0x38, 0xC7, 0xD0, 0xD9, 0xE1, 0x20, 0xB1,  /* G8.... . */
-                /* 0688 */  0x83, 0xE0, 0xC1, 0x56, 0x6D, 0x02, 0x85, 0x86,  /* ...Vm... */
-                /* 0690 */  0x50, 0x14, 0x18, 0x14, 0x8B, 0x0F, 0x18, 0xF8,  /* P....... */
-                /* 0698 */  0x61, 0xB3, 0xB3, 0x00, 0x93, 0x04, 0x87, 0x3A,  /* a......: */
-                /* 06A0 */  0x02, 0xF8, 0x3E, 0xD1, 0xFC, 0x38, 0x74, 0x37,  /* ..>..8t7 */
-                /* 06A8 */  0x38, 0x54, 0x8F, 0xE5, 0xA1, 0x80, 0x9E, 0x01,  /* 8T...... */
-                /* 06B0 */  0x71, 0xC7, 0x0C, 0x32, 0x69, 0xCF, 0x28, 0xE2,  /* q..2i.(. */
-                /* 06B8 */  0x53, 0xC2, 0x29, 0x85, 0x49, 0xE0, 0xF3, 0x03,  /* S.).I... */
-                /* 06C0 */  0x43, 0xE3, 0x04, 0xAF, 0x0D, 0xA1, 0xF9, 0xFF,  /* C....... */
-                /* 06C8 */  0xFF, 0xA4, 0xC0, 0x3C, 0xDF, 0x31, 0x04, 0x6C,  /* ...<.1.l */
-                /* 06D0 */  0x02, 0xBB, 0xBF, 0x64, 0xC8, 0xDA, 0xC0, 0x75,  /* ...d...u */
-                /* 06D8 */  0x4B, 0x32, 0x44, 0x6F, 0x38, 0xB2, 0x85, 0xA2,  /* K2Do8... */
-                /* 06E0 */  0xE9, 0x44, 0x79, 0xDF, 0x88, 0x62, 0x67, 0x08,  /* .Dy..bg. */
-                /* 06E8 */  0xC2, 0x88, 0x12, 0x2C, 0xC8, 0xA3, 0x42, 0xAC,  /* ...,..B. */
-                /* 06F0 */  0x28, 0x2F, 0x05, 0x46, 0x88, 0x18, 0xE2, 0x95,  /* (/.F.... */
-                /* 06F8 */  0x23, 0xD0, 0x09, 0x87, 0x0F, 0xF2, 0xD8, 0x14,  /* #....... */
-                /* 0700 */  0xA7, 0xFD, 0x41, 0x90, 0x58, 0x4F, 0x02, 0x8D,  /* ..A.XO.. */
-                /* 0708 */  0xC5, 0x91, 0x46, 0x83, 0x3A, 0x07, 0x78, 0xB8,  /* ..F.:.x. */
-                /* 0710 */  0x3E, 0xC4, 0x78, 0xF8, 0x0F, 0x21, 0x06, 0x39,  /* >.x..!.9 */
-                /* 0718 */  0xC8, 0x73, 0x7B, 0x54, 0x38, 0x4E, 0x5F, 0x25,  /* .s{T8N_% */
-                /* 0720 */  0x4C, 0xF0, 0x02, 0xE0, 0x83, 0x0A, 0x1C, 0xD7,  /* L....... */
-                /* 0728 */  0x80, 0x9A, 0xF1, 0x33, 0x06, 0x58, 0x8E, 0xE3,  /* ...3.X.. */
-                /* 0730 */  0x3E, 0xA9, 0xC0, 0x1D, 0x8F, 0xEF, 0x07, 0x6C,  /* >......l */
-                /* 0738 */  0xC2, 0x09, 0x2C, 0x7F, 0x10, 0xA8, 0xE3, 0x0C,  /* ..,..... */
-                /* 0740 */  0x9F, 0xE7, 0x0B, 0x8B, 0x21, 0x1F, 0x13, 0x4C,  /* ....!..L */
-                /* 0748 */  0x60, 0xB1, 0x27, 0x1B, 0x3A, 0x1E, 0xF0, 0xDF,  /* `.'.:... */
-                /* 0750 */  0x63, 0x1E, 0x2F, 0x7C, 0x32, 0xF1, 0x7C, 0x4D,  /* c./|2.|M */
-                /* 0758 */  0x30, 0x22, 0x84, 0x9C, 0x8C, 0x07, 0x7D, 0x87,  /* 0"....}. */
-                /* 0760 */  0xC0, 0x5C, 0x6F, 0xD8, 0xB9, 0x85, 0x8B, 0x3A,  /* .\o....: */
-                /* 0768 */  0x68, 0xA0, 0x4E, 0x0B, 0x3E, 0x28, 0xB0, 0x9B,  /* h.N.>(.. */
-                /* 0770 */  0x11, 0xE6, 0xB8, 0xCE, 0xCF, 0x2A, 0x60, 0xF8,  /* .....*`. */
-                /* 0778 */  0xFF, 0x9F, 0x55, 0x60, 0x8F, 0x10, 0xFE, 0xED,  /* ..U`.... */
-                /* 0780 */  0xC1, 0xF3, 0xF2, 0x95, 0xE1, 0xD5, 0x21, 0x81,  /* ......!. */
-                /* 0788 */  0x43, 0x8E, 0x10, 0x3D, 0x2E, 0x8F, 0x10, 0x73,  /* C..=...s */
-                /* 0790 */  0x3E, 0xC2, 0x0C, 0x11, 0x5C, 0x67, 0x01, 0x70,  /* >...\g.p */
-                /* 0798 */  0x0C, 0x11, 0xF8, 0x1C, 0x70, 0xC0, 0x71, 0x69,  /* ....p.qi */
-                /* 07A0 */  0xE2, 0x03, 0xF5, 0x01, 0x07, 0x70, 0x70, 0x4D,  /* .....ppM */
-                /* 07A8 */  0xC3, 0x1D, 0x70, 0xC0, 0x71, 0x16, 0x60, 0xFF,  /* ..p.q.`. */
-                /* 07B0 */  0xFF, 0xC3, 0x0D, 0x2C, 0x49, 0x26, 0x0E, 0x23,  /* ...,I&.# */
-                /* 07B8 */  0x18, 0x11, 0x30, 0x28, 0x02, 0x02, 0xA4, 0xB3,  /* ..0(.... */
-                /* 07C0 */  0x80, 0x0F, 0x29, 0x00, 0x1F, 0xAE, 0x0C, 0x0F,  /* ..)..... */
-                /* 07C8 */  0x29, 0xD8, 0x93, 0x86, 0x07, 0x8E, 0x1B, 0x85,  /* )....... */
-                /* 07D0 */  0x07, 0x8D, 0x0B, 0x30, 0x68, 0x7A, 0xE2, 0x80,  /* ...0hz.. */
-                /* 07D8 */  0x7F, 0x4C, 0xF0, 0x19, 0x05, 0x1C, 0xE3, 0x06,  /* .L...... */
-                /* 07E0 */  0xDF, 0x2A, 0x0C, 0xFC, 0xFF, 0x3F, 0x30, 0xCC,  /* .*...?0. */
-                /* 07E8 */  0xE1, 0xC2, 0x63, 0x39, 0x8A, 0xA0, 0x07, 0x1E,  /* ..c9.... */
-                /* 07F0 */  0xD4, 0xF7, 0x8C, 0x33, 0xF7, 0x24, 0x8F, 0xD1,  /* ...3.$.. */
-                /* 07F8 */  0x51, 0x0F, 0x27, 0xF4, 0xE4, 0x85, 0x3B, 0x57,  /* Q.'...;W */
-                /* 0800 */  0xF9, 0x0A, 0x71, 0x14, 0x18, 0xB8, 0x77, 0x29,  /* ..q...w) */
-                /* 0808 */  0x8F, 0xCF, 0x17, 0x2B, 0xC3, 0x63, 0x46, 0xFB,  /* ...+.cF. */
-                /* 0810 */  0x1E, 0x72, 0xD6, 0x11, 0x02, 0xE2, 0x2F, 0x75,  /* .r..../u */
-                /* 0818 */  0x6C, 0xC0, 0x60, 0x39, 0x18, 0x00, 0x87, 0x01,  /* l.`9.... */
-                /* 0820 */  0xE3, 0x13, 0x0D, 0x58, 0x67, 0x1B, 0x3C, 0xF4,  /* ...Xg.<. */
-                /* 0828 */  0x69, 0x31, 0xC4, 0xE3, 0x0B, 0xFB, 0x56, 0x61,  /* i1....Va */
-                /* 0830 */  0x82, 0xEA, 0x41, 0x75, 0x12, 0xF4, 0xD0, 0xC0,  /* ..Au.... */
-                /* 0838 */  0x01, 0xE8, 0xA1, 0xC1, 0x3F, 0xB9, 0x90, 0xFB,  /* ....?... */
-                /* 0840 */  0x2B, 0x1D, 0x82, 0xB5, 0xE2, 0x69, 0xDE, 0x47,  /* +....i.G */
-                /* 0848 */  0x1E, 0xF3, 0xDC, 0xA2, 0xBC, 0x0D, 0x3C, 0x07,  /* ......<. */
-                /* 0850 */  0xF0, 0xD3, 0x82, 0x87, 0xE3, 0x63, 0x81, 0xC7,  /* .....c.. */
-                /* 0858 */  0xE9, 0x4B, 0x58, 0x82, 0xF7, 0x1A, 0x9F, 0x6C,  /* .KX....l */
-                /* 0860 */  0x1E, 0x5C, 0x58, 0xB2, 0x21, 0xA0, 0x06, 0xEB,  /* .\X.!... */
-                /* 0868 */  0x21, 0x60, 0xA6, 0x9A, 0xC0, 0x49, 0x46, 0x80,  /* !`...IF. */
-                /* 0870 */  0xCA, 0x00, 0xA1, 0x1B, 0xCB, 0xE9, 0x3E, 0x8B,  /* ......>. */
-                /* 0878 */  0x84, 0x38, 0xCD, 0x47, 0x99, 0xC7, 0x02, 0x8F,  /* .8.G.... */
-                /* 0880 */  0xF5, 0xC1, 0xC0, 0xFF, 0x7F, 0xCD, 0x23, 0xD4,  /* ......#. */
-                /* 0888 */  0x7D, 0xCD, 0x33, 0x7B, 0x3A, 0xC0, 0xAC, 0x22,  /* }.3{:.." */
-                /* 0890 */  0xDC, 0x7B, 0xCE, 0x1B, 0x86, 0xD1, 0x9E, 0x2D,  /* .{.....- */
-                /* 0898 */  0x7C, 0xCD, 0x78, 0xD6, 0x34, 0x42, 0x38, 0x76,  /* |.x.4B8v */
-                /* 08A0 */  0x83, 0xF3, 0x48, 0x8C, 0xF0, 0x82, 0xC0, 0x4E,  /* ..H....N */
-                /* 08A8 */  0x0C, 0x0F, 0x30, 0xC6, 0x39, 0x79, 0xC3, 0xFA,  /* ..0.9y.. */
-                /* 08B0 */  0xC2, 0xCB, 0x40, 0x83, 0x19, 0xDB, 0x97, 0x01,  /* ..@..... */
-                /* 08B8 */  0x36, 0x2A, 0xDF, 0x88, 0xC0, 0x97, 0xFC, 0x62,  /* 6*.....b */
-                /* 08C0 */  0x00, 0x65, 0x16, 0xBE, 0x9E, 0xF8, 0xA0, 0xC4,  /* .e...... */
-                /* 08C8 */  0x2E, 0x06, 0x2C, 0xE5, 0xC5, 0x00, 0x54, 0x37,  /* ..,...T7 */
-                /* 08D0 */  0x0C, 0x5F, 0x0C, 0xE0, 0x5F, 0x89, 0x5E, 0x0C,  /* ._.._.^. */
-                /* 08D8 */  0xC0, 0x70, 0x71, 0xF2, 0x3D, 0xC0, 0x1E, 0xEE,  /* .pq.=... */
-                /* 08E0 */  0xA3, 0x74, 0x9C, 0xBE, 0xFD, 0xBD, 0x19, 0xF8,  /* .t...... */
-                /* 08E8 */  0x6C, 0xC0, 0x60, 0x3C, 0xC3, 0x30, 0xC6, 0x08,  /* l.`<.0.. */
-                /* 08F0 */  0xE3, 0x51, 0x86, 0x31, 0xC1, 0xDC, 0xB7, 0x03,  /* .Q.1.... */
-                /* 08F8 */  0xE8, 0x39, 0x87, 0x81, 0x4A, 0x78, 0x3B, 0x80,  /* .9..Jx;. */
-                /* 0900 */  0x72, 0x0E, 0xE8, 0xF2, 0x68, 0x42, 0x4F, 0x01,  /* r...hBO. */
-                /* 0908 */  0x4F, 0x07, 0x3E, 0x29, 0x1A, 0xA2, 0xAF, 0xB1,  /* O.>).... */
-                /* 0910 */  0x0A, 0x26, 0x50, 0xC4, 0x07, 0x0D, 0x3E, 0xB5,  /* .&P...>. */
-                /* 0918 */  0x28, 0x3E, 0x15, 0x78, 0x2D, 0xCF, 0x4E, 0xE1,  /* (>.x-.N. */
-                /* 0920 */  0xE2, 0x9C, 0x89, 0xA7, 0x6A, 0x38, 0x03, 0xBD,  /* ....j8.. */
-                /* 0928 */  0xE6, 0x86, 0x63, 0xFF, 0x7F, 0x38, 0xFC, 0xA9,  /* ..c..8.. */
-                /* 0930 */  0xE0, 0x35, 0x80, 0x1D, 0x24, 0x3D, 0x2D, 0x23,  /* .5..$=-# */
-                /* 0938 */  0xC2, 0x38, 0xA4, 0x3C, 0x32, 0xF8, 0xB6, 0x18,  /* .8.<2... */
-                /* 0940 */  0xC7, 0x90, 0x0F, 0x91, 0xBE, 0x13, 0x18, 0xF2,  /* ........ */
-                /* 0948 */  0x21, 0xEF, 0x79, 0xC7, 0xC0, 0xAF, 0x08, 0x71,  /* !.y....q */
-                /* 0950 */  0x9E, 0xB2, 0x7C, 0x67, 0xF0, 0x65, 0x01, 0x7C,  /* ..|g.e.| */
-                /* 0958 */  0x91, 0x2E, 0x0B, 0x68, 0x68, 0x9F, 0x64, 0x7C,  /* ...hh.d| */
-                /* 0960 */  0x41, 0x30, 0xEC, 0x89, 0xB3, 0x00, 0x77, 0x05,  /* A0....w. */
-                /* 0968 */  0x50, 0x81, 0xFA, 0xAE, 0x00, 0xFF, 0x42, 0xF0,  /* P.....B. */
-                /* 0970 */  0xAE, 0x00, 0x86, 0x79, 0xF9, 0x56, 0xC0, 0x35,  /* ...y.V.5 */
-                /* 0978 */  0x1D, 0x4A, 0xD0, 0x67, 0x12, 0x5F, 0x17, 0x70,  /* .J.g._.p */
-                /* 0980 */  0x53, 0x64, 0xA9, 0x8E, 0x0A, 0xD0, 0x53, 0x4C,  /* Sd....SL */
-                /* 0988 */  0x02, 0x75, 0x47, 0xF7, 0x51, 0x01, 0xC6, 0x4D,  /* .uG.Q..M */
-                /* 0990 */  0xD9, 0x07, 0x54, 0x76, 0x5A, 0x60, 0x67, 0x21,  /* ..TvZ`g! */
-                /* 0998 */  0x76, 0x1D, 0xC1, 0x5D, 0x49, 0x18, 0xCA, 0xB3,  /* v..]I... */
-                /* 09A0 */  0x81, 0x2F, 0x59, 0xFC, 0x70, 0x00, 0x03, 0xDC,  /* ./Y.p... */
-                /* 09A8 */  0xB3, 0x38, 0xC4, 0x08, 0xB1, 0xD9, 0x81, 0xEB,  /* .8...... */
-                /* 09B0 */  0x75, 0xD2, 0x70, 0x2F, 0x44, 0xEC, 0xFF, 0x7F,  /* u.p/D... */
-                /* 09B8 */  0x32, 0x00, 0xE3, 0x51, 0x1B, 0x1C, 0x27, 0x9D,  /* 2..Q..'. */
-                /* 09C0 */  0xF0, 0x91, 0x9E, 0x59, 0xF8, 0x49, 0x19, 0x30,  /* ...Y.I.0 */
-                /* 09C8 */  0x71, 0xF2, 0x03, 0xE3, 0xC9, 0x1A, 0xC6, 0x00,  /* q....... */
-                /* 09D0 */  0xB8, 0xBC, 0x57, 0x95, 0x81, 0xFC, 0x43, 0x90,  /* ..W...C. */
-                /* 09D8 */  0x20, 0x18, 0xD4, 0x29, 0x19, 0x38, 0x1C, 0xC5,  /*  ..).8.. */
-                /* 09E0 */  0x70, 0xA7, 0x64, 0x78, 0x50, 0xF8, 0xC3, 0x00,  /* p.dxP... */
-                /* 09E8 */  0xE6, 0x46, 0xE8, 0x7B, 0x82, 0xA1, 0xDE, 0x93,  /* .F.{.... */
-                /* 09F0 */  0x0E, 0xE3, 0x91, 0xD0, 0x04, 0x3E, 0x2D, 0xC3,  /* .....>-. */
-                /* 09F8 */  0xFA, 0xFF, 0x9F, 0x96, 0xF9, 0x39, 0x21, 0xFE,  /* .....9!. */
-                /* 0A00 */  0x53, 0xCE, 0xFB, 0xC5, 0x83, 0xB2, 0x31, 0xA2,  /* S.....1. */
-                /* 0A08 */  0xBC, 0x2A, 0xFB, 0x9C, 0x69, 0x14, 0x76, 0x4B,  /* .*..i.vK */
-                /* 0A10 */  0x7E, 0x73, 0x78, 0x55, 0xF6, 0x69, 0xF9, 0xDC,  /* ~sxU.i.. */
-                /* 0A18 */  0x22, 0xBD, 0x2F, 0x7B, 0xE4, 0x31, 0xE3, 0xC4,  /* "./{.1.. */
-                /* 0A20 */  0x0A, 0x12, 0xE8, 0x7D, 0x23, 0x4A, 0xD8, 0x18,  /* ...}#J.. */
-                /* 0A28 */  0xE1, 0x02, 0x3D, 0x2D, 0xB3, 0x63, 0xBB, 0x87,  /* ..=-.c.. */
-                /* 0A30 */  0xEC, 0xB3, 0x02, 0xEE, 0xEC, 0x00, 0x77, 0x7A,  /* ......wz */
-                /* 0A38 */  0xFC, 0xF4, 0x00, 0x38, 0x01, 0x7A, 0x7A, 0x00,  /* ...8.zz. */
-                /* 0A40 */  0xDB, 0x79, 0x03, 0xEE, 0x81, 0x00, 0x71, 0xFC,  /* .y....q. */
-                /* 0A48 */  0x47, 0x05, 0xBF, 0xB2, 0x50, 0x38, 0x7E, 0x6C,  /* G...P8~l */
-                /* 0A50 */  0xE7, 0xC7, 0x12, 0xDC, 0xE1, 0xC0, 0x47, 0x06,  /* ......G. */
-                /* 0A58 */  0x1F, 0x20, 0x71, 0x43, 0xF1, 0xA1, 0x02, 0x79,  /* . qC...y */
-                /* 0A60 */  0x16, 0x00, 0xC5, 0xE8, 0xD9, 0x08, 0xD8, 0x0D,  /* ........ */
-                /* 0A68 */  0xE6, 0xA5, 0x25, 0xCA, 0xFF, 0xFF, 0xBD, 0x81,  /* ..%..... */
-                /* 0A70 */  0x9D, 0x52, 0x70, 0x07, 0x01, 0xF0, 0x1D, 0x03,  /* .Rp..... */
-                /* 0A78 */  0xC0, 0x3B, 0x18, 0x2E, 0x6B, 0xCC, 0x28, 0x21,  /* .;..k.(! */
-                /* 0A80 */  0x30, 0x1A, 0x33, 0xEE, 0x10, 0xC2, 0x4F, 0x04,  /* 0.3...O. */
-                /* 0A88 */  0xB8, 0x31, 0x7B, 0xDC, 0x1E, 0x33, 0xEE, 0x38,  /* .1{..3.8 */
-                /* 0A90 */  0xCB, 0x47, 0xF5, 0x94, 0x11, 0xCA, 0x07, 0x0E,  /* .G...... */
-                /* 0A98 */  0x76, 0xCE, 0x78, 0x23, 0xE0, 0x43, 0x07, 0x1E,  /* v.x#.C.. */
-                /* 0AA0 */  0x07, 0x18, 0xDC, 0x91, 0x02, 0x8C, 0x97, 0x03,  /* ........ */
-                /* 0AA8 */  0x36, 0x76, 0x70, 0x07, 0x21, 0xA7, 0x40, 0x96,  /* 6vp.!.@. */
-                /* 0AB0 */  0x0E, 0xA3, 0xB1, 0xE3, 0x64, 0x03, 0xE9, 0x18,  /* ....d... */
-                /* 0AB8 */  0xE3, 0x43, 0xAE, 0xC7, 0x8E, 0x1B, 0xAC, 0xC7,  /* .C...... */
-                /* 0AC0 */  0x8E, 0x3B, 0xBE, 0x60, 0xFF, 0xFF, 0xC7, 0x17,  /* .;.`.... */
-                /* 0AC8 */  0x30, 0x8C, 0x81, 0x8B, 0x1F, 0x06, 0xFA, 0xE6,  /* 0....... */
-                /* 0AD0 */  0xE7, 0xD1, 0x19, 0xDC, 0xC3, 0xF6, 0x09, 0x26,  /* .......& */
-                /* 0AD8 */  0xC6, 0x1B, 0x4C, 0x88, 0x47, 0x96, 0x97, 0x96,  /* ..L.G... */
-                /* 0AE0 */  0x08, 0x0F, 0x2D, 0xBE, 0xB9, 0xBC, 0xB4, 0xF8,  /* ..-..... */
-                /* 0AE8 */  0x16, 0x63, 0x94, 0x10, 0x11, 0x0E, 0x26, 0xCE,  /* .c....&. */
-                /* 0AF0 */  0x13, 0x8C, 0x11, 0x0E, 0x3C, 0x8A, 0x21, 0x22,  /* ....<.!" */
-                /* 0AF8 */  0x9C, 0x40, 0x88, 0x93, 0x3E, 0xD9, 0x20, 0xE1,  /* .@..>. . */
-                /* 0B00 */  0x63, 0x84, 0x8D, 0x16, 0xE5, 0x09, 0x86, 0x8D,  /* c....... */
-                /* 0B08 */  0x85, 0x9F, 0x57, 0x3C, 0x78, 0x7E, 0x5A, 0xF3,  /* ..W<x~Z. */
-                /* 0B10 */  0x5D, 0xD0, 0x93, 0x39, 0xC7, 0x87, 0x2C, 0x4F,  /* ]..9..,O */
-                /* 0B18 */  0xED, 0x71, 0xD2, 0x87, 0x59, 0xDC, 0xA0, 0x1E,  /* .q..Y... */
-                /* 0B20 */  0x1C, 0xD9, 0x5D, 0xC7, 0xC7, 0x6B, 0xEC, 0x29,  /* ..]..k.) */
-                /* 0B28 */  0xC8, 0x43, 0xE0, 0x27, 0x02, 0x5F, 0x10, 0x3D,  /* .C.'._.= */
-                /* 0B30 */  0x59, 0xDF, 0xF5, 0xD8, 0xBD, 0xCC, 0x18, 0xD5,  /* Y....... */
-                /* 0B38 */  0x4F, 0x01, 0x75, 0x4C, 0x39, 0x83, 0x57, 0x08,  /* O.uL9.W. */
-                /* 0B40 */  0x76, 0xCF, 0xF3, 0x21, 0xDB, 0x77, 0x49, 0x36,  /* v..!.wI6 */
-                /* 0B48 */  0x0A, 0xDC, 0x21, 0xC1, 0x67, 0x24, 0x7E, 0xAA,  /* ..!.g$~. */
-                /* 0B50 */  0xF0, 0x30, 0x3C, 0x0A, 0x18, 0x33, 0x78, 0x47,  /* .0<..3xG */
-                /* 0B58 */  0x38, 0xB4, 0x10, 0x07, 0xFC, 0xBE, 0xCB, 0x86,  /* 8....... */
-                /* 0B60 */  0x1A, 0xE3, 0xF4, 0x7C, 0xFE, 0x60, 0x83, 0x80,  /* ...|.`.. */
-                /* 0B68 */  0x0F, 0x75, 0xA8, 0x1E, 0xE6, 0x51, 0xBD, 0x14,  /* .u...Q.. */
-                /* 0B70 */  0x32, 0x9C, 0xB3, 0x83, 0x3B, 0x08, 0xEC, 0xF1,  /* 2...;... */
-                /* 0B78 */  0xC3, 0x83, 0xE0, 0x37, 0x4B, 0x3E, 0x08, 0x76,  /* ...7K>.v */
-                /* 0B80 */  0xBE, 0x79, 0x83, 0x33, 0xC8, 0xFF, 0xFF, 0x18,  /* .y.3.... */
-                /* 0B88 */  0x60, 0x9F, 0xA9, 0x7C, 0x34, 0x41, 0x1C, 0x01,  /* `..|4A.. */
-                /* 0B90 */  0xD1, 0xE7, 0x0F, 0x8F, 0xE1, 0x4D, 0x8E, 0x0F,  /* .....M.. */
-                /* 0B98 */  0x07, 0x7B, 0xF4, 0xC0, 0x9D, 0x44, 0xE0, 0x1E,  /* .{...D.. */
-                /* 0BA0 */  0xBB, 0x0E, 0xDA, 0xD7, 0x38, 0x5F, 0xB4, 0x60,  /* ....8_.` */
-                /* 0BA8 */  0xDC, 0xF7, 0x9E, 0x45, 0xC0, 0x8F, 0xF1, 0xD8,  /* ...E.... */
-                /* 0BB0 */  0x02, 0x8E, 0x43, 0x09, 0xB8, 0x83, 0x1D, 0xD7,  /* ..C..... */
-                /* 0BB8 */  0x38, 0x84, 0xA2, 0xC0, 0xE8, 0x50, 0x82, 0x8B,  /* 8....P.. */
-                /* 0BC0 */  0x01, 0x24, 0x18, 0xC7, 0x38, 0xA3, 0xA1, 0x2F,  /* .$..8../ */
-                /* 0BC8 */  0x91, 0x3E, 0xA4, 0xC1, 0x19, 0x34, 0xEC, 0x79,  /* .>...4.y */
-                /* 0BD0 */  0x3E, 0xA1, 0x70, 0x7B, 0x02, 0x14, 0x9D, 0x50,  /* >.p{...P */
-                /* 0BD8 */  0x40, 0x86, 0xFB, 0x0C, 0x82, 0x3D, 0x21, 0xF0,  /* @....=!. */
-                /* 0BE0 */  0x33, 0x08, 0xFB, 0xFF, 0x1F, 0x1C, 0x3D, 0xEE,  /* 3.....=. */
-                /* 0BE8 */  0xF7, 0x46, 0x9F, 0x1A, 0xD9, 0xDC, 0x1F, 0x02,  /* .F...... */
-                /* 0BF0 */  0x4E, 0xE0, 0xDC, 0xD9, 0xA9, 0x19, 0x77, 0x66,  /* N.....wf */
-                /* 0BF8 */  0xC0, 0x9E, 0x3F, 0x3C, 0x04, 0x7E, 0x2E, 0xF0,  /* ..?<.~.. */
-                /* 0C00 */  0xF0, 0x3D, 0x04, 0xFC, 0xE0, 0x1F, 0x98, 0x0D,  /* .=...... */
-                /* 0C08 */  0x0E, 0xC6, 0x53, 0x84, 0xAF, 0x1D, 0x1C, 0x9C,  /* ..S..... */
-                /* 0C10 */  0x9F, 0x06, 0x0C, 0xCE, 0x5F, 0xA1, 0x3E, 0xCF,  /* ...._.>. */
-                /* 0C18 */  0x33, 0x70, 0xEC, 0xA9, 0xD7, 0xF7, 0x0E, 0xCF,  /* 3p...... */
-                /* 0C20 */  0xD7, 0x87, 0x0A, 0xFC, 0x4D, 0xCF, 0x87, 0x0A,  /* ....M... */
-                /* 0C28 */  0x70, 0x1C, 0x1E, 0xF8, 0x61, 0x85, 0x0D, 0xE1,  /* p...a... */
-                /* 0C30 */  0x51, 0x00, 0x7F, 0x6A, 0xF1, 0xF1, 0x2F, 0xCE,  /* Q..j../. */
-                /* 0C38 */  0x53, 0x04, 0xBB, 0x8D, 0x60, 0x0F, 0x17, 0x80,  /* S...`... */
-                /* 0C40 */  0xA3, 0x68, 0x67, 0x31, 0x54, 0x98, 0xB3, 0x18,  /* .hg1T... */
-                /* 0C48 */  0xF9, 0xFF, 0x9F, 0xA3, 0x50, 0x67, 0x31, 0x7A,  /* ....Pg1z */
-                /* 0C50 */  0xB8, 0x00, 0x5C, 0x08, 0x3E, 0x1E, 0x80, 0xE6,  /* ..\.>... */
-                /* 0C58 */  0x20, 0xF0, 0xB8, 0xE0, 0x0B, 0xC1, 0x91, 0x1C,  /*  ....... */
-                /* 0C60 */  0xC8, 0xD3, 0x01, 0xE0, 0x53, 0x1E, 0x09, 0x3D,  /* ....S..= */
-                /* 0C68 */  0x1F, 0x59, 0x10, 0x0C, 0xEA, 0x7C, 0xE0, 0x13,  /* .Y...|.. */
-                /* 0C70 */  0x8A, 0x8F, 0x1D, 0xFC, 0x6C, 0xE0, 0x1B, 0xB9,  /* ....l... */
-                /* 0C78 */  0x87, 0xCA, 0x4F, 0xCD, 0x3E, 0x69, 0xF3, 0xE0,  /* ..O.>i.. */
-                /* 0C80 */  0x3F, 0x69, 0xD9, 0x80, 0x51, 0xA0, 0x61, 0xA0,  /* ?i..Q.a. */
-                /* 0C88 */  0x46, 0xE4, 0x23, 0xD2, 0xFF, 0xFF, 0xB9, 0x0D,  /* F.#..... */
-                /* 0C90 */  0x1B, 0x60, 0x68, 0xF4, 0x1C, 0x0E, 0xE3, 0x80,  /* .`h..... */
-                /* 0C98 */  0xEB, 0x73, 0x38, 0x76, 0x40, 0x3E, 0x87, 0xC3,  /* .s8v@>.. */
-                /* 0CA0 */  0x3F, 0x47, 0xC3, 0x1F, 0x1B, 0x3B, 0xDD, 0xF3,  /* ?G...;.. */
-                /* 0CA8 */  0x81, 0xC1, 0xBA, 0x7E, 0x63, 0x06, 0x06, 0xB6,  /* ...~c... */
-                /* 0CB0 */  0x6F, 0x91, 0x07, 0x06, 0x1C, 0x51, 0xCF, 0xC6,  /* o....Q.. */
-                /* 0CB8 */  0x57, 0x08, 0x0F, 0x0C, 0x6C, 0x80, 0x1E, 0x18,  /* W...l... */
-                /* 0CC0 */  0xF0, 0x89, 0x05, 0x21, 0x27, 0x03, 0x43, 0x9D,  /* ...!'.C. */
-                /* 0CC8 */  0x32, 0x8C, 0x1C, 0xF3, 0x89, 0xC3, 0xC3, 0xF0,  /* 2....... */
-                /* 0CD0 */  0xA1, 0x22, 0xEA, 0x33, 0xC0, 0x23, 0x1E, 0x1B,  /* .".3.#.. */
-                /* 0CD8 */  0x1B, 0xFB, 0xFF, 0x8F, 0x0D, 0x2C, 0xC7, 0x16,  /* .....,.. */
-                /* 0CE0 */  0x8F, 0x0D, 0xFC, 0x47, 0x78, 0xFC, 0xD8, 0xE0,  /* ...Gx... */
-                /* 0CE8 */  0x8C, 0xE5, 0xD1, 0xC4, 0x97, 0x99, 0x23, 0x3B,  /* ......#; */
-                /* 0CF0 */  0x8D, 0x33, 0x7B, 0x0D, 0xF1, 0xD1, 0xEE, 0xF1,  /* .3{..... */
-                /* 0CF8 */  0xDB, 0x63, 0x03, 0x97, 0x85, 0xB1, 0x01, 0xA5,  /* .c...... */
-                /* 0D00 */  0x90, 0x63, 0x43, 0x1F, 0x52, 0x7C, 0x0A, 0xB0,  /* .cC.R|.. */
-                /* 0D08 */  0x71, 0x54, 0x32, 0x0F, 0x1F, 0xAF, 0x7C, 0x62,  /* qT2...|b */
-                /* 0D10 */  0x38, 0xBA, 0x20, 0x6F, 0xE8, 0xBE, 0x5C, 0xF8,  /* 8. o..\. */
-                /* 0D18 */  0x48, 0x63, 0x30, 0x5F, 0x5A, 0x7C, 0x06, 0xE5,  /* Hc0_Z|.. */
-                /* 0D20 */  0x43, 0x04, 0x97, 0x86, 0x21, 0x02, 0xA5, 0x50,  /* C...!..P */
-                /* 0D28 */  0x43, 0x44, 0x8F, 0xE7, 0xFF, 0xFF, 0x08, 0xE6,  /* CD...... */
-                /* 0D30 */  0x21, 0xB2, 0xA1, 0x81, 0xF7, 0x1B, 0xA3, 0xA1,  /* !....... */
-                /* 0D38 */  0x01, 0xA1, 0x70, 0x43, 0x43, 0x1F, 0xD6, 0x7C,  /* ..pCC..| */
-                /* 0D40 */  0x08, 0x60, 0x10, 0xBE, 0x0D, 0xB0, 0xAB, 0x80,  /* .`...... */
-                /* 0D48 */  0xAF, 0x42, 0x1E, 0xE0, 0x93, 0x28, 0x1B, 0x1E,  /* .B...(.. */
-                /* 0D50 */  0xF8, 0x06, 0xE5, 0xE1, 0x01, 0x9F, 0xF0, 0xC0,  /* ........ */
-                /* 0D58 */  0x5E, 0x85, 0x87, 0x47, 0xCF, 0x4A, 0x1E, 0x1E,  /* ^..G.J.. */
-                /* 0D60 */  0x3C, 0x90, 0xC7, 0x08, 0x76, 0x0E, 0xF1, 0xE0,  /* <...v... */
-                /* 0D68 */  0xC0, 0x61, 0x62, 0x70, 0xA0, 0x38, 0xFA, 0xE3,  /* .abp.8.. */
-                /* 0D70 */  0x86, 0xC0, 0x2E, 0xB3, 0x9E, 0x38, 0xBF, 0xB2,  /* .....8.. */
-                /* 0D78 */  0x78, 0x50, 0xF8, 0xFF, 0xFF, 0x11, 0x00, 0xD6,  /* xP...... */
-                /* 0D80 */  0x71, 0x06, 0x7C, 0xC1, 0x0E, 0x07, 0xE8, 0x63,  /* q.|....c */
-                /* 0D88 */  0x22, 0x1B, 0xC3, 0x43, 0xC4, 0x83, 0xAB, 0x07,  /* "..C.... */
-                /* 0D90 */  0xE2, 0x6B, 0xC7, 0x6B, 0x31, 0xEE, 0x68, 0x00,  /* .k.k1.h. */
-                /* 0D98 */  0x2E, 0x15, 0x47, 0x03, 0xA0, 0x74, 0xB0, 0x05,  /* ..G..t.. */
-                /* 0DA0 */  0xC7, 0x3D, 0xCD, 0x47, 0x3B, 0xCC, 0x1C, 0x3D,  /* .=.G;..= */
-                /* 0DA8 */  0x80, 0xE7, 0x37, 0x8F, 0x96, 0x9F, 0xDF, 0x00,  /* ..7..... */
-                /* 0DB0 */  0x47, 0x41, 0x0F, 0xB6, 0x74, 0xE0, 0x8E, 0x06,  /* GA..t... */
-                /* 0DB8 */  0x83, 0x3A, 0xBF, 0x61, 0xFE, 0xFF, 0xE7, 0x37,  /* .:.a...7 */
-                /* 0DC0 */  0x30, 0x44, 0x00, 0xD7, 0x99, 0xC6, 0xE7, 0x17,  /* 0D...... */
-                /* 0DC8 */  0x38, 0x43, 0x3D, 0x68, 0x5F, 0x13, 0x3C, 0x6B,  /* 8C=h_.<k */
-                /* 0DD0 */  0xDF, 0xB8, 0xD8, 0x39, 0x01, 0x5C, 0x03, 0xF2,  /* ...9.\.. */
-                /* 0DD8 */  0x49, 0x07, 0x38, 0x02, 0x9F, 0xC4, 0x03, 0xFE,  /* I.8..... */
-                /* 0DE0 */  0xA1, 0x81, 0x79, 0x58, 0x1E, 0x1A, 0xF0, 0x39,  /* ..yX...9 */
-                /* 0DE8 */  0x1A, 0xE0, 0x4E, 0x14, 0xE0, 0xB9, 0x8D, 0xE0,  /* ..N..... */
-                /* 0DF0 */  0x0E, 0x14, 0xC0, 0xE2, 0xFF, 0x7F, 0xA0, 0x00,  /* ........ */
-                /* 0DF8 */  0x56, 0x47, 0x7C, 0x8F, 0x8B, 0x43, 0xE3, 0x10,  /* VG|..C.. */
-                /* 0E00 */  0x1F, 0xD2, 0xCE, 0xD9, 0xE7, 0xAF, 0x33, 0xC5,  /* ......3. */
-                /* 0E08 */  0x9D, 0x45, 0xC0, 0x70, 0xA2, 0x47, 0xBC, 0xD3,  /* .E.p.G.. */
-                /* 0E10 */  0x0C, 0xE4, 0x07, 0x86, 0x84, 0xC0, 0xA0, 0x4E,  /* .......N */
-                /* 0E18 */  0x40, 0x1E, 0x8A, 0x0F, 0x06, 0x1C, 0xD8, 0x47,  /* @......G */
-                /* 0E20 */  0x04, 0x76, 0x2E, 0x60, 0x07, 0x28, 0xC3, 0xF1,  /* .v.`.(.. */
-                /* 0E28 */  0xB3, 0x80, 0x4F, 0x09, 0x0F, 0x35, 0xC7, 0xF1,  /* ..O..5.. */
-                /* 0E30 */  0xB8, 0xE9, 0xBB, 0x99, 0x21, 0xD9, 0xD5, 0xE0,  /* ....!... */
-                /* 0E38 */  0xF9, 0x07, 0x7B, 0xDA, 0x85, 0x73, 0xC4, 0x05,  /* ..{..s.. */
-                /* 0E40 */  0x17, 0x81, 0xCF, 0x3A, 0x1E, 0x05, 0x3F, 0x3D,  /* ...:..?= */
-                /* 0E48 */  0x78, 0x8E, 0x6F, 0x0C, 0x3E, 0x3D, 0x30, 0xF7,  /* x.o.>=0. */
-                /* 0E50 */  0x02, 0xCC, 0x1D, 0xBA, 0x85, 0x70, 0x4C, 0xAF,  /* .....pL. */
-                /* 0E58 */  0x0F, 0x31, 0x8E, 0xFA, 0xB1, 0xA1, 0x2D, 0x01,  /* .1....-. */
-                /* 0E60 */  0xDA, 0x50, 0x74, 0x07, 0x78, 0x19, 0x88, 0x12,  /* .Pt.x... */
-                /* 0E68 */  0xE2, 0x08, 0x22, 0xB5, 0x86, 0xA2, 0x99, 0x47,  /* .."....G */
-                /* 0E70 */  0x8A, 0x12, 0x30, 0x9E, 0x61, 0x1A, 0x9B, 0x8C,  /* ..0.a... */
-                /* 0E78 */  0x20, 0x63, 0x84, 0x8E, 0x13, 0x2C, 0x4A, 0xB4,  /*  c...,J. */
-                /* 0E80 */  0x57, 0x80, 0xF6, 0x47, 0xCB, 0x56, 0xAC, 0xB1,  /* W..G.V.. */
-                /* 0E88 */  0x38, 0xD2, 0xC9, 0x12, 0x3D, 0x6C, 0x1F, 0xB3,  /* 8...=l.. */
-                /* 0E90 */  0xF1, 0xA7, 0x55, 0xCC, 0xFF, 0x9F, 0xE0, 0x55,  /* ..U....U */
-                /* 0E98 */  0xC5, 0x07, 0x05, 0x1F, 0x00, 0xF0, 0x2E, 0x01,  /* ........ */
-                /* 0EA0 */  0x75, 0x75, 0xF4, 0xB8, 0x7D, 0xDE, 0x00, 0xFF,  /* uu..}... */
-                /* 0EA8 */  0xF5, 0x02, 0x4B, 0x50, 0xFE, 0x20, 0x50, 0x23,  /* ..KP. P# */
-                /* 0EB0 */  0x33, 0xB4, 0xC7, 0xF9, 0x36, 0x63, 0xC8, 0x27,  /* 3...6c.' */
-                /* 0EB8 */  0x27, 0x13, 0x58, 0xEC, 0x09, 0x15, 0x68, 0x0C,  /* '.X...h. */
-                /* 0EC0 */  0xFE, 0x69, 0xC3, 0xD7, 0x76, 0xCF, 0xD7, 0xE7,  /* .i..v... */
-                /* 0EC8 */  0x38, 0x80, 0x0F, 0xFF, 0xFF, 0x73, 0x1C, 0x60,  /* 8....s.` */
-                /* 0ED0 */  0x68, 0x38, 0xB8, 0xA3, 0x0F, 0xDC, 0x2B, 0x09,  /* h8....+. */
-                /* 0ED8 */  0x3F, 0xFC, 0x00, 0xCE, 0x80, 0x1E, 0x7E, 0xC0,  /* ?.....~. */
-                /* 0EE0 */  0x3E, 0x54, 0xDC, 0x10, 0x78, 0x84, 0x15, 0xD1,  /* >T..x... */
-                /* 0EE8 */  0xC3, 0x80, 0x45, 0xC3, 0xA0, 0xCE, 0x6B, 0xD8,  /* ..E...k. */
-                /* 0EF0 */  0xFF, 0xFF, 0x79, 0x0D, 0xB6, 0x38, 0x70, 0x1D,  /* ..y..8p. */
-                /* 0EF8 */  0x54, 0x7D, 0x36, 0x86, 0x33, 0xA8, 0xD3, 0xEE,  /* T}6.3... */
-                /* 0F00 */  0xFD, 0xAE, 0x40, 0x2E, 0x22, 0x1E, 0xF4, 0xF9,  /* ..@."... */
-                /* 0F08 */  0x3C, 0x3B, 0xB0, 0x03, 0x1B, 0xF0, 0x1F, 0x1B,  /* <;...... */
-                /* 0F10 */  0x9C, 0x1B, 0xC0, 0x53, 0x74, 0x84, 0x63, 0x03,  /* ...St.c. */
-                /* 0F18 */  0xFB, 0x89, 0x0D, 0x38, 0x9D, 0xED, 0xE0, 0x5C,  /* ...8...\ */
-                /* 0F20 */  0xA1, 0xD8, 0x6D, 0x1F, 0x37, 0x34, 0xB0, 0xD9,  /* ..m.74.. */
-                /* 0F28 */  0x18, 0x1A, 0xC8, 0xFE, 0xFF, 0x87, 0x4F, 0xE0,  /* ......O. */
-                /* 0F30 */  0x75, 0xE8, 0xE2, 0x97, 0x8A, 0xE7, 0x2F, 0x7E,  /* u...../~ */
-                /* 0F38 */  0xB8, 0x03, 0x9C, 0x4B, 0x3B, 0xD9, 0xA1, 0xC4,  /* ...K;... */
-                /* 0F40 */  0x1C, 0xEE, 0x00, 0x29, 0xFF, 0xFF, 0xC3, 0x1D,  /* ...).... */
-                /* 0F48 */  0xB8, 0xEE, 0x72, 0xEF, 0x0C, 0x2F, 0x0D, 0x9E,  /* ..r../.. */
-                /* 0F50 */  0xD3, 0xBB, 0x9D, 0x31, 0x5E, 0xEA, 0x8C, 0x10,  /* ...1^... */
-                /* 0F58 */  0x85, 0xDD, 0x06, 0xA2, 0xD9, 0xDB, 0xE1, 0x8E,  /* ........ */
-                /* 0F60 */  0x9C, 0xF0, 0x38, 0x66, 0xA4, 0x27, 0xBD, 0x60,  /* ..8f.'.` */
-                /* 0F68 */  0x91, 0x22, 0x1E, 0x4E, 0x94, 0x10, 0xC1, 0x5E,  /* .".N...^ */
-                /* 0F70 */  0x27, 0x9E, 0xF2, 0x1E, 0xEE, 0x98, 0x90, 0xC3,  /* '....... */
-                /* 0F78 */  0x1D, 0xD0, 0x71, 0x7D, 0xB8, 0x03, 0x2A, 0x27,  /* ..q}..*' */
-                /* 0F80 */  0x2A, 0xFC, 0xE1, 0x0E, 0x30, 0xFB, 0xFF, 0x3F,  /* *...0..? */
-                /* 0F88 */  0xDC, 0x01, 0x8C, 0x3A, 0xA3, 0xE1, 0x0E, 0x77,  /* ...:...w */
-                /* 0F90 */  0x60, 0x3B, 0xFD, 0x00, 0xE7, 0xFF, 0xFF, 0xE9,  /* `;...... */
-                /* 0F98 */  0x07, 0x78, 0x8F, 0x15, 0xC6, 0x18, 0x78, 0xB4,  /* .x....x. */
-                /* 0FA0 */  0x25, 0x51, 0x20, 0x87, 0x81, 0x41, 0x11, 0x38,  /* %Q ..A.8 */
-                /* 0FA8 */  0xC8, 0xA1, 0x8E, 0x06, 0x3B, 0xBD, 0x40, 0x99,  /* ....;.@. */
-                /* 0FB0 */  0xCB, 0x81, 0x9E, 0xC2, 0x33, 0x82, 0x0F, 0x60,  /* ....3..` */
-                /* 0FB8 */  0x60, 0x3F, 0xD5, 0x01, 0x87, 0x53, 0x03, 0x3E,  /* `?...S.> */
-                /* 0FC0 */  0xD0, 0x09, 0x05, 0x3D, 0x0A, 0x9F, 0x4D, 0xC0,  /* ...=..M. */
-                /* 0FC8 */  0x7B, 0xA4, 0x03, 0x36, 0xFF, 0xFF, 0xB3, 0x09,  /* {..6.... */
-                /* 0FD0 */  0x7B, 0x35, 0xFA, 0x6C, 0x82, 0x63, 0x31, 0xEA,  /* {5.l.c1. */
-                /* 0FD8 */  0x1B, 0xC4, 0x21, 0xBE, 0x74, 0xF8, 0xDC, 0xF8,  /* ..!.t... */
-                /* 0FE0 */  0x4E, 0xE3, 0x4B, 0x00, 0xE6, 0xFA, 0x61, 0x82,  /* N.K...a. */
-                /* 0FE8 */  0x31, 0x21, 0xF4, 0xC9, 0xF2, 0xA9, 0x0E, 0x38,  /* 1!.....8 */
-                /* 0FF0 */  0x1D, 0x4E, 0xE0, 0x8D, 0x1E, 0x77, 0x5A, 0xF0,  /* .N...wZ. */
-                /* 0FF8 */  0x70, 0x38, 0xB8, 0x67, 0xF3, 0x2C, 0xF1, 0x44,  /* p8.g.,.D */
-                /* 1000 */  0xE4, 0x71, 0xF8, 0x74, 0x02, 0xBC, 0x0E, 0x18,  /* .q.t.... */
-                /* 1008 */  0x98, 0x19, 0x84, 0x7F, 0x08, 0x61, 0xA7, 0x4F,  /* .....a.O */
-                /* 1010 */  0x1F, 0x99, 0x3C, 0xF7, 0x77, 0x23, 0x9F, 0x4E,  /* ..<.w#.N */
-                /* 1018 */  0x00, 0x5F, 0xFF, 0xFF, 0xA3, 0x1E, 0xB0, 0x90,  /* ._...... */
-                /* 1020 */  0xA8, 0xE1, 0x9C, 0x87, 0x11, 0x05, 0x83, 0x3A,  /* .......: */
-                /* 1028 */  0xEA, 0x01, 0xD6, 0x2E, 0x7A, 0x36, 0x86, 0xA0,  /* ....z6.. */
-                /* 1030 */  0x8B, 0xC0, 0x19, 0x84, 0x78, 0xBC, 0x7B, 0xC5,  /* ....x.{. */
-                /* 1038 */  0x8B, 0xE4, 0x3B, 0x40, 0x9C, 0x47, 0x3D, 0x83,  /* ..;@.G=. */
-                /* 1040 */  0xBD, 0x7D, 0x3C, 0x48, 0x44, 0x89, 0xF3, 0xA8,  /* .}<HD... */
-                /* 1048 */  0xE7, 0xD1, 0x87, 0xF2, 0xE4, 0x43, 0x9D, 0x7E,  /* .....C.~ */
-                /* 1050 */  0xAC, 0xB0, 0x81, 0x9E, 0xF8, 0x5E, 0xF4, 0x42,  /* .....^.B */
-                /* 1058 */  0x1A, 0xE1, 0x51, 0x8F, 0x09, 0x7A, 0x79, 0xE8,  /* ..Q..zy. */
-                /* 1060 */  0x70, 0xE5, 0xA3, 0x1E, 0x60, 0xE5, 0xFF, 0x7F,  /* p...`... */
-                /* 1068 */  0xD4, 0x03, 0xF8, 0xFF, 0xFF, 0x3F, 0xEA, 0x81,  /* .....?.. */
-                /* 1070 */  0xF9, 0xF4, 0x04, 0xF8, 0x3F, 0xD6, 0xE0, 0x8E,  /* ....?... */
-                /* 1078 */  0x8A, 0x60, 0x3B, 0x3F, 0x01, 0x2E, 0xFE, 0xFF,  /* .`;?.... */
-                /* 1080 */  0xE7, 0x27, 0x30, 0x0D, 0xDD, 0xE7, 0x27, 0x30,  /* .'0...'0 */
-                /* 1088 */  0x8F, 0x16, 0xE6, 0x01, 0x01, 0x71, 0x56, 0x44,  /* .....qVD */
-                /* 1090 */  0x85, 0x7F, 0xC8, 0x18, 0x0E, 0x15, 0x1C, 0x48,  /* .......H */
-                /* 1098 */  0xBF, 0x28, 0x1F, 0x01, 0x81, 0xCB, 0x51, 0x11,  /* .(....Q. */
-                /* 10A0 */  0x38, 0x9C, 0x59, 0xF0, 0x42, 0x4E, 0x1D, 0xE8,  /* 8.Y.BN.. */
-                /* 10A8 */  0xF1, 0x18, 0xF4, 0x95, 0xC3, 0x57, 0x02, 0x7E,  /* .....W.~ */
-                /* 10B0 */  0xE4, 0x60, 0xA1, 0x8F, 0x1C, 0xA0, 0x3A, 0x2C,  /* .`....:, */
-                /* 10B8 */  0x82, 0xEF, 0xC8, 0x01, 0x8E, 0xEB, 0x55, 0x60,  /* ......U` */
-                /* 10C0 */  0xFE, 0xFF, 0x07, 0x66, 0xB7, 0x83, 0xD7, 0x4F,  /* ...f...O */
-                /* 10C8 */  0x4F, 0xE2, 0x31, 0xEA, 0x38, 0x43, 0x14, 0x8E,  /* O.1.8C.. */
-                /* 10D0 */  0x49, 0x0E, 0x06, 0x91, 0xDE, 0xC1, 0xD8, 0x00,  /* I....... */
-                /* 10D8 */  0x5F, 0x5E, 0x7C, 0xA8, 0xF2, 0x31, 0x10, 0x18,  /* _^|..1.. */
-                /* 10E0 */  0x42, 0x9C, 0x0D, 0x3F, 0x5D, 0x18, 0xF3, 0x74,  /* B..?]..t */
-                /* 10E8 */  0xF8, 0x31, 0x10, 0xB0, 0x2E, 0xF5, 0x0C, 0x88,  /* .1...... */
-                /* 10F0 */  0x12, 0x77, 0x0C, 0x04, 0x52, 0xFF, 0xFF, 0x63,  /* .w..R..c */
-                /* 10F8 */  0x20, 0x70, 0xBD, 0x04, 0x7A, 0xCC, 0x67, 0xFC,  /*  p..z.g. */
-                /* 1100 */  0xE6, 0xF7, 0xE4, 0x17, 0xA5, 0xB6, 0xEB, 0x9F,  /* ........ */
-                /* 1108 */  0xEE, 0x06, 0xC6, 0x7A, 0x08, 0x78, 0x02, 0xF4,  /* ...z.x.. */
-                /* 1110 */  0xFD, 0xCF, 0xC7, 0x8A, 0x28, 0x01, 0xA3, 0xC4,  /* ....(... */
-                /* 1118 */  0x7A, 0x11, 0x34, 0x66, 0x8C, 0x60, 0xEF, 0x80,  /* z.4f.`.. */
-                /* 1120 */  0x31, 0x1F, 0x09, 0x3D, 0xC2, 0x68, 0xC1, 0x0D,  /* 1..=.h.. */
-                /* 1128 */  0xF4, 0x18, 0xC8, 0x84, 0x1D, 0x03, 0x01, 0x12,  /* ........ */
-                /* 1130 */  0xFD, 0xFF, 0x8F, 0x81, 0x00, 0x23, 0x4F, 0x50,  /* .....#OP */
-                /* 1138 */  0xC0, 0xF6, 0xFF, 0x7F, 0x82, 0x02, 0x0C, 0x1D,  /* ........ */
-                /* 1140 */  0x05, 0xC1, 0x7C, 0x86, 0x02, 0xAC, 0x1D, 0x05,  /* ..|..... */
-                /* 1148 */  0xC1, 0x3E, 0x5A, 0x98, 0xA3, 0xE0, 0x31, 0x5F,  /* .>Z...1_ */
-                /* 1150 */  0x1E, 0x06, 0xA2, 0xC1, 0x24, 0xFC, 0xFF, 0x8F,  /* ....$... */
-                /* 1158 */  0x82, 0xD8, 0x50, 0x40, 0x3A, 0x77, 0x38, 0xD4,  /* ..P@:w8. */
-                /* 1160 */  0xE9, 0x05, 0x7D, 0x50, 0xF0, 0xB0, 0x9F, 0x0A,  /* ..}P.... */
-                /* 1168 */  0x3C, 0x89, 0x53, 0xF5, 0xB5, 0xE0, 0x28, 0x9E,  /* <.S...(. */
-                /* 1170 */  0x00, 0x7C, 0x18, 0x04, 0xFE, 0x43, 0x83, 0x35,  /* .|...C.5 */
-                /* 1178 */  0x89, 0xE2, 0x87, 0x06, 0xEA, 0xB3, 0x07, 0xF8,  /* ........ */
-                /* 1180 */  0x86, 0x06, 0x8E, 0xA8, 0x67, 0x1C, 0xF4, 0x89,  /* ....g... */
-                /* 1188 */  0xC8, 0x67, 0x83, 0x98, 0x6F, 0x1E, 0x11, 0x9E,  /* .g..o... */
-                /* 1190 */  0x3C, 0x7C, 0x7D, 0x60, 0x27, 0x4F, 0x9F, 0x9A,  /* <|}`'O.. */
-                /* 1198 */  0x02, 0x45, 0x79, 0xDF, 0xE0, 0x71, 0x4E, 0x39,  /* .Ey..qN9 */
-                /* 11A0 */  0xA0, 0x3A, 0xFC, 0x82, 0xE3, 0xC0, 0x0B, 0xE3,  /* .:...... */
-                /* 11A8 */  0xFF, 0x7F, 0xE0, 0x65, 0xC7, 0x29, 0x1F, 0x4B,  /* ...e.).K */
-                /* 11B0 */  0xC0, 0x77, 0x26, 0x85, 0x73, 0x73, 0xF1, 0x1D,  /* .w&.ss.. */
-                /* 11B8 */  0x8F, 0x9D, 0x06, 0xC0, 0xA6, 0xE3, 0x34, 0x00,  /* ......4. */
-                /* 11C0 */  0x94, 0x62, 0x0D, 0x0C, 0x7D, 0x54, 0x31, 0x6A,  /* .b..}T1j */
-                /* 11C8 */  0xEF, 0x93, 0xD0, 0xC4, 0xD8, 0x75, 0xE4, 0x25,  /* .....u.% */
-                /* 11D0 */  0xC5, 0xD7, 0x93, 0x67, 0x2D, 0xF0, 0xF9, 0x18,  /* ...g-... */
-                /* 11D8 */  0x1B, 0x50, 0x3A, 0x81, 0xF1, 0xA3, 0x27, 0x98,  /* .P:...'. */
-                /* 11E0 */  0x60, 0x0E, 0xE6, 0x55, 0xDC, 0x83, 0x7C, 0x12,  /* `..U..|. */
-                /* 11E8 */  0x62, 0xA7, 0x1C, 0xF0, 0xFE, 0xFF, 0x0F, 0x9E,  /* b....... */
-                /* 11F0 */  0x80, 0x3D, 0x11, 0xA7, 0x4E, 0x54, 0xEC, 0x37,  /* .=..NT.7 */
-                /* 11F8 */  0x97, 0x0F, 0x9E, 0x80, 0xBC, 0x3B, 0x83, 0x11,  /* .....;.. */
-                /* 1200 */  0xCE, 0x3F, 0xC4, 0x03, 0x44, 0x88, 0x67, 0x4E,  /* .?..D.gN */
-                /* 1208 */  0x83, 0xC4, 0x09, 0xF2, 0x32, 0xF0, 0xE0, 0xE9,  /* ....2... */
-                /* 1210 */  0x7B, 0x67, 0x9C, 0x67, 0xCF, 0x28, 0x6F, 0x9E,  /* {g.g.(o. */
-                /* 1218 */  0x46, 0x38, 0xFA, 0x78, 0x06, 0x7A, 0xE7, 0x0C,  /* F8.x.z.. */
-                /* 1220 */  0xF1, 0xD6, 0xF9, 0x0C, 0xFA, 0xEA, 0x69, 0xB4,  /* ......i. */
-                /* 1228 */  0x58, 0xC1, 0x8F, 0xF1, 0xC1, 0x93, 0x45, 0x3E,  /* X.....E> */
-                /* 1230 */  0x23, 0xD1, 0x83, 0x27, 0xEC, 0xFF, 0xFF, 0xC1,  /* #..'.... */
-                /* 1238 */  0x13, 0xE0, 0xFF, 0xFF, 0xFF, 0xE0, 0x09, 0x18,  /* ........ */
-                /* 1240 */  0x3B, 0x83, 0x01, 0xC7, 0x13, 0x1B, 0x38, 0xCE,  /* ;.....8. */
-                /* 1248 */  0x60, 0xC0, 0xE5, 0xE8, 0x0F, 0x9E, 0x93, 0x26,  /* `......& */
-                /* 1250 */  0x8C, 0x23, 0x13, 0xF8, 0xFF, 0xFF, 0x47, 0x26,  /* .#....G& */
-                /* 1258 */  0xC0, 0xD5, 0x58, 0x61, 0x8C, 0x81, 0x27, 0x7B,  /* ..Xa..'{ */
-                /* 1260 */  0x1A, 0xD0, 0xE3, 0x80, 0x45, 0x1D, 0x98, 0x04,  /* ....E... */
-                /* 1268 */  0xC3, 0x59, 0x7C, 0x58, 0xF0, 0x11, 0x81, 0x1F,  /* .Y|X.... */
-                /* 1270 */  0x16, 0x3C, 0x82, 0x8A, 0xC7, 0x49, 0x8F, 0x45,  /* .<...I.E */
-                /* 1278 */  0x3E, 0x77, 0xB2, 0x43, 0x82, 0x0F, 0x21, 0x1E,  /* >w.C..!. */
-                /* 1280 */  0xA4, 0x0F, 0xB3, 0xE0, 0x39, 0x58, 0xC1, 0xBB,  /* ....9X.. */
-                /* 1288 */  0x2E, 0xC1, 0x39, 0x15, 0x00, 0x66, 0xFE, 0xFF,  /* ..9..f.. */
-                /* 1290 */  0x04, 0xB5, 0xAB, 0x38, 0x5D, 0xB0, 0x00, 0x07,  /* ...8]... */
-                /* 1298 */  0x30, 0xD9, 0x38, 0x86, 0x50, 0x0E, 0x1F, 0x5D,  /* 0.8.P..] */
-                /* 12A0 */  0x3D, 0x4D, 0x76, 0x24, 0x83, 0x19, 0x0B, 0x52,  /* =Mv$...R */
-                /* 12A8 */  0x27, 0x01, 0x0F, 0xC0, 0x81, 0x60, 0xA4, 0x9D,  /* '....`.. */
-                /* 12B0 */  0x44, 0xA3, 0x31, 0x9C, 0xD5, 0xC2, 0x08, 0xCE,  /* D.1..... */
-                /* 12B8 */  0x20, 0x3E, 0x8E, 0x38, 0xD7, 0x91, 0x0A, 0xBD,  /*  >.8.... */
-                /* 12C0 */  0x1B, 0x1D, 0xA7, 0x50, 0x41, 0xEE, 0x25, 0x74,  /* ...PA.%t */
-                /* 12C8 */  0xDE, 0xBE, 0x1B, 0xF0, 0x77, 0x9A, 0xC7, 0x62,  /* ....w..b */
-                /* 12D0 */  0x60, 0xDF, 0x4E, 0xC0, 0x31, 0x17, 0xAB, 0x01,  /* `.N.1... */
-                /* 12D8 */  0x45, 0x0D, 0xC0, 0x68, 0x98, 0x53, 0xC0, 0x53,  /* E..h.S.S */
-                /* 12E0 */  0x09, 0xB8, 0x82, 0xCD, 0x0D, 0x7D, 0x61, 0xB1,  /* .....}a. */
-                /* 12E8 */  0xD6, 0xA9, 0xE8, 0xF8, 0xF4, 0x3E, 0x70, 0x70,  /* .....>pp */
-                /* 12F0 */  0xC0, 0x63, 0xF6, 0x1E, 0x1C, 0x2C, 0x34, 0x0F,  /* .c...,4. */
-                /* 12F8 */  0x0E, 0x6C, 0xD9, 0x06, 0x87, 0x56, 0x72, 0x17,  /* .l...Vr. */
-                /* 1300 */  0x21, 0x87, 0x0F, 0xFC, 0xEC, 0x60, 0xFC, 0xFF,  /* !....`.. */
-                /* 1308 */  0x67, 0x07, 0x46, 0x40, 0xCF, 0x0E, 0x16, 0x92,  /* g.F@.... */
-                /* 1310 */  0x67, 0x07, 0x36, 0x7D, 0x67, 0x11, 0x50, 0x00,  /* g.6}g.P. */
-                /* 1318 */  0xF9, 0xDE, 0xE1, 0x73, 0xCB, 0xB3, 0x07, 0x1B,  /* ...s.... */
-                /* 1320 */  0xC3, 0xA3, 0x8B, 0xD1, 0x8C, 0xCE, 0x35, 0xDD,  /* ......5. */
-                /* 1328 */  0x26, 0x50, 0x2A, 0x6E, 0x13, 0x14, 0xC4, 0x37,  /* &P*n...7 */
-                /* 1330 */  0x00, 0x27, 0xA4, 0xD1, 0x3D, 0x0D, 0x37, 0x13,  /* .'..=.7. */
-                /* 1338 */  0xE3, 0x3F, 0x62, 0xF8, 0x88, 0x70, 0x48, 0x67,  /* .?b..pHg */
-                /* 1340 */  0x6B, 0x82, 0x79, 0x20, 0xF5, 0x7E, 0xF4, 0x65,  /* k.y .~.e */
-                /* 1348 */  0x0F, 0x3F, 0xFB, 0x90, 0x0F, 0x2E, 0x9E, 0x86,  /* .?...... */
-                /* 1350 */  0xAF, 0x37, 0xE4, 0xDE, 0x41, 0xA7, 0xED, 0x33,  /* .7..A..3 */
-                /* 1358 */  0x03, 0xE6, 0x30, 0xED, 0xEB, 0x54, 0x02, 0xCB,  /* ..0..T.. */
-                /* 1360 */  0xBA, 0x4A, 0x50, 0x0F, 0x17, 0x10, 0x7A, 0xA1,  /* .JP...z. */
-                /* 1368 */  0xF1, 0xBD, 0x30, 0xC1, 0xC3, 0x99, 0x6F, 0x67,  /* ..0...og */
-                /* 1370 */  0xEF, 0x25, 0xEC, 0x70, 0x98, 0xE0, 0xDD, 0x30,  /* .%.p...0 */
-                /* 1378 */  0xC1, 0xBC, 0x83, 0x40, 0x8D, 0xCA, 0x83, 0xC0,  /* ...@.... */
-                /* 1380 */  0x1C, 0xBF, 0x4C, 0x30, 0xDF, 0x18, 0x50, 0xC9,  /* ..L0..P. */
-                /* 1388 */  0x2E, 0x5A, 0xF4, 0x0C, 0xF3, 0x0E, 0xE3, 0x4B,  /* .Z.....K */
-                /* 1390 */  0x82, 0xAF, 0x1F, 0x3E, 0xB7, 0x78, 0x01, 0xAF,  /* ...>.x.. */
-                /* 1398 */  0x5B, 0x30, 0x08, 0x9E, 0x81, 0x5E, 0x5D, 0x0C,  /* [0...^]. */
-                /* 13A0 */  0x15, 0x27, 0xF0, 0xAB, 0xC0, 0x1B, 0x4D, 0x88,  /* .'....M. */
-                /* 13A8 */  0x60, 0x86, 0x3D, 0xFC, 0x90, 0x6F, 0x31, 0x3E,  /* `.=..o1> */
-                /* 13B0 */  0x5F, 0xFA, 0x06, 0x10, 0xEB, 0x75, 0xC4, 0xFF,  /* _....u.. */
-                /* 13B8 */  0xFF, 0x91, 0xF2, 0x63, 0xCB, 0x01, 0x45, 0x7A,  /* ...c..Ez */
-                /* 13C0 */  0xEB, 0xF3, 0x04, 0x7C, 0x96, 0xF1, 0x71, 0xF0,  /* ...|..q. */
-                /* 13C8 */  0xA4, 0x7C, 0xAF, 0x34, 0xFA, 0x2B, 0x84, 0x0F,  /* .|.4.+.. */
-                /* 13D0 */  0x3F, 0x46, 0xF6, 0x39, 0x87, 0x1D, 0x0C, 0xD9,  /* ?F.9.... */
-                /* 13D8 */  0xA0, 0x38, 0xE2, 0x03, 0xC3, 0x4B, 0x8D, 0xA7,  /* .8...K.. */
-                /* 13E0 */  0xC2, 0xCE, 0x5D, 0x30, 0x0E, 0x0E, 0xEC, 0x58,  /* ..]0...X */
-                /* 13E8 */  0x84, 0x39, 0xEA, 0x81, 0xEB, 0x64, 0xE3, 0x93,  /* .9...d.. */
-                /* 13F0 */  0x03, 0x98, 0xE1, 0x31, 0x87, 0x6B, 0x9F, 0x37,  /* ...1.k.7 */
-                /* 13F8 */  0x7C, 0x33, 0xF0, 0xB8, 0xF8, 0x91, 0xC3, 0xC7,  /* |3...... */
-                /* 1400 */  0x3B, 0x86, 0x7D, 0x9A, 0x3E, 0x1A, 0xBD, 0xBC,  /* ;.}.>... */
-                /* 1408 */  0xF9, 0xF4, 0x82, 0x81, 0xF5, 0xA5, 0x81, 0xC3,  /* ........ */
-                /* 1410 */  0x1A, 0x2D, 0xEC, 0x63, 0xC0, 0x99, 0xFB, 0x42,  /* .-.c...B */
-                /* 1418 */  0x84, 0x3B, 0x75, 0x82, 0x05, 0x10, 0x7F, 0x2B,  /* .;u....+ */
-                /* 1420 */  0x79, 0xE4, 0xF0, 0x04, 0x0C, 0xC8, 0x72, 0xAF,  /* y.....r. */
-                /* 1428 */  0x4B, 0x07, 0x22, 0x7E, 0xCA, 0xB3, 0xBA, 0x03,  /* K."~.... */
-                /* 1430 */  0x11, 0x02, 0xE3, 0x71, 0xF4, 0xF1, 0xC3, 0xB3,  /* ...q.... */
-                /* 1438 */  0xF1, 0x51, 0xC0, 0xC7, 0x28, 0xCF, 0xFC, 0x8C,  /* .Q..(... */
-                /* 1440 */  0x22, 0xBD, 0x32, 0x58, 0xCB, 0x89, 0x08, 0xA5,  /* ".2X.... */
-                /* 1448 */  0x02, 0x46, 0x81, 0x69, 0x74, 0xE7, 0xE0, 0x11,  /* .F.it... */
-                /* 1450 */  0x61, 0x04, 0x67, 0x10, 0x8F, 0xD6, 0x37, 0x17,  /* a.g...7. */
-                /* 1458 */  0x18, 0xFF, 0xFF, 0x9B, 0x0B, 0xF0, 0x3A, 0x13,  /* ......:. */
-                /* 1460 */  0x01, 0x97, 0xEB, 0xA5, 0x67, 0x87, 0xBB, 0x2C,  /* ....g.., */
-                /* 1468 */  0xB2, 0x69, 0x1B, 0xF7, 0x15, 0xD5, 0xA7, 0x63,  /* .i.....c */
-                /* 1470 */  0x4F, 0xFC, 0xB4, 0x61, 0x9C, 0x8C, 0x00, 0x1F,  /* O..a.... */
-                /* 1478 */  0x77, 0x1D, 0xC0, 0xC9, 0xFF, 0xFF, 0xAE, 0x03,  /* w....... */
-                /* 1480 */  0xF0, 0xFF, 0xFF, 0x7F, 0xD7, 0xE1, 0xF7, 0x07,  /* ........ */
-                /* 1488 */  0xDF, 0x75, 0x80, 0x6B, 0xA4, 0x55, 0x51, 0x11,  /* .u.k.UQ. */
-                /* 1490 */  0xBF, 0x05, 0x85, 0x80, 0x41, 0x8D, 0xCE, 0xD7,  /* ....A... */
-                /* 1498 */  0x0A, 0xFC, 0xB1, 0x84, 0x81, 0xB3, 0xF3, 0x8A,  /* ........ */
-                /* 14A0 */  0xE1, 0xF8, 0xC0, 0x3D, 0xBE, 0xD7, 0x95, 0xD3,  /* ...=.... */
-                /* 14A8 */  0x7A, 0x36, 0xF0, 0x8D, 0xC5, 0x90, 0xEC, 0x82,  /* z6...... */
-                /* 14B0 */  0x8A, 0xBB, 0x5F, 0xF8, 0x46, 0xED, 0xA9, 0xBE,  /* .._.F... */
-                /* 14B8 */  0x28, 0xBC, 0x27, 0xF8, 0x8E, 0xC0, 0xA0, 0x60,  /* (.'....` */
-                /* 14C0 */  0xDC, 0x51, 0x31, 0x07, 0x54, 0x38, 0x04, 0x67,  /* .Q1.T8.g */
-                /* 14C8 */  0x7C, 0x14, 0x98, 0x41, 0xFA, 0x90, 0xF2, 0x7A,  /* |..A...z */
-                /* 14D0 */  0xE0, 0xC1, 0x32, 0xF7, 0xC7, 0x0D, 0x5D, 0x22,  /* ..2...]" */
-                /* 14D8 */  0x1E, 0x36, 0x9E, 0x0C, 0x9A, 0x43, 0xD1, 0x99,  /* .6...C.. */
-                /* 14E0 */  0xE0, 0x14, 0xDA, 0x1A, 0x96, 0x70, 0xDE, 0x37,  /* .....p.7 */
-                /* 14E8 */  0x42, 0x44, 0x09, 0xF6, 0xC2, 0xF1, 0xC6, 0xF0,  /* BD...... */
-                /* 14F0 */  0x34, 0x1B, 0x25, 0x5E, 0xA4, 0x80, 0xD1, 0xA2,  /* 4.%^.... */
-                /* 14F8 */  0x04, 0xEB, 0x0D, 0x42, 0xA0, 0x91, 0x42, 0x04,  /* ...B..B. */
-                /* 1500 */  0x0C, 0x51, 0x1C, 0x96, 0xE0, 0xA2, 0xB7, 0x7F,  /* .Q...... */
-                /* 1508 */  0x8D, 0x67, 0x6F, 0x02, 0x1D, 0x65, 0x1C, 0xE9,  /* .go..e.. */
-                /* 1510 */  0xB8, 0x83, 0x1E, 0xB6, 0x6F, 0xAC, 0xFC, 0x7C,  /* ....o..| */
-                /* 1518 */  0xEF, 0x71, 0xF9, 0x02, 0x8A, 0x21, 0x78, 0xCD,  /* .q...!x. */
-                /* 1520 */  0xF0, 0x17, 0xC0, 0x07, 0x00, 0xBC, 0x6B, 0x40,  /* ......k@ */
-                /* 1528 */  0xCD, 0xFC, 0xB1, 0x00, 0xD6, 0xFF, 0xFF, 0x46,  /* .......F */
-                /* 1530 */  0x0F, 0xBE, 0xEB, 0x35, 0x5E, 0xFE, 0x20, 0x50,  /* ...5^. P */
-                /* 1538 */  0x97, 0x19, 0x7E, 0xF6, 0xF0, 0xCD, 0xD5, 0xF7,  /* ..~..... */
-                /* 1540 */  0x80, 0xC3, 0x62, 0xB7, 0x6E, 0x3E, 0x1E, 0xF0,  /* ..b.n>.. */
-                /* 1548 */  0x0F, 0xFD, 0xA5, 0xD7, 0x87, 0x0A, 0xCF, 0xD7,  /* ........ */
-                /* 1550 */  0x57, 0x5F, 0xDF, 0xBE, 0xC1, 0x7B, 0x39, 0x06,  /* W_...{9. */
-                /* 1558 */  0xEC, 0x09, 0xBE, 0x81, 0x83, 0x7C, 0xBC, 0xD8,  /* .....|.. */
-                /* 1560 */  0xFF, 0xFF, 0x78, 0xE1, 0x8C, 0x83, 0x2B, 0x27,  /* ..x...+' */
-                /* 1568 */  0xA1, 0xC7, 0x02, 0x6B, 0x85, 0x41, 0xDD, 0xC2,  /* ...k.A.. */
-                /* 1570 */  0xC1, 0xA5, 0x09, 0x5C, 0x57, 0x65, 0x1F, 0x6A,  /* ...\We.j */
-                /* 1578 */  0x7C, 0x08, 0xC6, 0x9F, 0x2F, 0x70, 0x01, 0x86,  /* |.../p.. */
-                /* 1580 */  0x4C, 0x4F, 0x65, 0x30, 0xAE, 0x29, 0x3E, 0x95,  /* LOe0.)>. */
-                /* 1588 */  0x61, 0xEE, 0x0E, 0x1E, 0x90, 0x8F, 0x18, 0xC0,  /* a....... */
-                /* 1590 */  0x67, 0x15, 0x1E, 0x18, 0xEE, 0xB4, 0xE0, 0x9B,  /* g....... */
-                /* 1598 */  0x92, 0x41, 0xCF, 0x31, 0xA8, 0x8F, 0x3C, 0x27,  /* .A.1..<' */
-                /* 15A0 */  0xEF, 0x7B, 0xC2, 0xE3, 0x84, 0xA3, 0x9E, 0x83,  /* .{...... */
-                /* 15A8 */  0xE8, 0xD8, 0xC0, 0x71, 0xDC, 0x00, 0xC7, 0xE1,  /* ...q.... */
-                /* 15B0 */  0x06, 0x77, 0xCE, 0x63, 0xE3, 0xC2, 0xC0, 0x3D,  /* .w.c...= */
-                /* 15B8 */  0x17, 0x78, 0x18, 0xBE, 0xE9, 0x78, 0x44, 0x98,  /* .x...xD. */
-                /* 15C0 */  0xF1, 0x3F, 0xEA, 0x19, 0x21, 0x20, 0xFE, 0x62,  /* .?..! .b */
-                /* 15C8 */  0xC4, 0x06, 0x0C, 0xA6, 0xFF, 0xFF, 0x80, 0xF9,  /* ........ */
-                /* 15D0 */  0xAD, 0xCD, 0xD7, 0x37, 0xDC, 0x80, 0x7D, 0x75,  /* ...7..}u */
-                /* 15D8 */  0xF0, 0x05, 0xC3, 0x27, 0x30, 0xA3, 0xBF, 0xC0,  /* ...'0... */
-                /* 15E0 */  0x3C, 0x89, 0xF9, 0xD8, 0x40, 0x2E, 0x70, 0x74,  /* <...@.pt */
-                /* 15E8 */  0xC0, 0xE0, 0x00, 0xF4, 0x80, 0xE1, 0x1F, 0x2E,  /* ........ */
-                /* 15F0 */  0xDE, 0xE5, 0xC0, 0x70, 0x15, 0xF4, 0x71, 0xC1,  /* ...p..q. */
-                /* 15F8 */  0xC7, 0x1E, 0x2B, 0xBA, 0xCB, 0xA1, 0x6F, 0x72,  /* ..+...or */
-                /* 1600 */  0x86, 0x89, 0x63, 0x88, 0x37, 0x30, 0x76, 0x97,  /* ..c.70v. */
-                /* 1608 */  0x20, 0x87, 0x39, 0xA8, 0x77, 0x09, 0xCF, 0x81,  /*  .9.w... */
-                /* 1610 */  0x9F, 0x2D, 0x7C, 0x82, 0xF3, 0xCD, 0x27, 0xC4,  /* .-|...'. */
-                /* 1618 */  0xA9, 0x3E, 0x5A, 0xBD, 0x07, 0xF8, 0xE8, 0xF1,  /* .>Z..... */
-                /* 1620 */  0xDE, 0xE5, 0xB3, 0x13, 0xBB, 0x08, 0xF8, 0xC8,  /* ........ */
-                /* 1628 */  0x65, 0x1C, 0x4F, 0xD3, 0x57, 0x40, 0x0F, 0xD9,  /* e.O.W@.. */
-                /* 1630 */  0x60, 0xAF, 0x1A, 0x3E, 0x81, 0xF9, 0xE8, 0x86,  /* `..>.... */
-                /* 1638 */  0x3B, 0x46, 0x79, 0x26, 0x9E, 0xBE, 0xEF, 0x20,  /* ;Fy&...  */
-                /* 1640 */  0xEC, 0x48, 0x72, 0xD4, 0xA1, 0xAE, 0xE9, 0x11,  /* .Hr..... */
-                /* 1648 */  0xE5, 0x84, 0x0E, 0xC4, 0xB7, 0x36, 0x70, 0x46,  /* .....6pF */
-                /* 1650 */  0xBB, 0x7F, 0xA0, 0xB7, 0xE9, 0x91, 0x61, 0x8E,  /* ......a. */
-                /* 1658 */  0x06, 0xB0, 0x2E, 0x21, 0x60, 0xF9, 0xFF, 0xDF,  /* ...!`... */
-                /* 1660 */  0x0C, 0xD8, 0x1D, 0xC3, 0x97, 0x10, 0xE0, 0x13,  /* ........ */
-                /* 1668 */  0xF4, 0x12, 0x81, 0xBE, 0x66, 0x78, 0x74, 0x8F,  /* ....fxt. */
-                /* 1670 */  0x00, 0x98, 0x2B, 0x06, 0x3B, 0x16, 0xF8, 0xB0,  /* ..+.;... */
-                /* 1678 */  0xE1, 0x6B, 0x00, 0xBB, 0x17, 0x38, 0xCC, 0x3D,  /* .k...8.= */
-                /* 1680 */  0x02, 0x54, 0xA0, 0x1E, 0x1E, 0x7C, 0xB5, 0xF7,  /* .T...|.. */
-                /* 1688 */  0x08, 0x50, 0x9C, 0x2C, 0x7D, 0x68, 0xF0, 0x40,  /* .P.,}h.@ */
-                /* 1690 */  0xAD, 0xEA, 0x8C, 0x09, 0xE5, 0x88, 0xC9, 0xA1,  /* ........ */
-                /* 1698 */  0xA2, 0xB1, 0x5B, 0x01, 0xBB, 0x5D, 0xFA, 0x26,  /* ..[..].& */
-                /* 16A0 */  0x01, 0x37, 0xCF, 0x2C, 0x50, 0x49, 0x6E, 0x12,  /* .7.,PIn. */
-                /* 16A8 */  0xD0, 0x61, 0xBA, 0xBC, 0xCC, 0xD0, 0xF9, 0x1F,  /* .a...... */
-                /* 16B0 */  0xB8, 0x6F, 0x75, 0x1E, 0xA1, 0x0F, 0x11, 0x0C,  /* .ou..... */
-                /* 16B8 */  0xE5, 0x3D, 0xCF, 0xA7, 0x30, 0x7E, 0x86, 0xF0,  /* .=..0~.. */
-                /* 16C0 */  0x01, 0x93, 0x9D, 0x29, 0xF8, 0x59, 0x13, 0x77,  /* ...).Y.w */
-                /* 16C8 */  0x07, 0x30, 0xCA, 0x9B, 0xA7, 0x27, 0xC0, 0xCE,  /* .0...'.. */
-                /* 16D0 */  0x9F, 0x46, 0x7E, 0x37, 0x78, 0x17, 0xF0, 0xF4,  /* .F~7x... */
-                /* 16D8 */  0x7D, 0x2F, 0xE2, 0x87, 0x04, 0xF6, 0xFF, 0x3F,  /* }/.....? */
-                /* 16E0 */  0x51, 0x80, 0x29, 0xD8, 0x9D, 0x0E, 0x0A, 0xF4,  /* Q.)..... */
-                /* 16E8 */  0x09, 0x79, 0x44, 0x46, 0xF5, 0x11, 0x81, 0x5F,  /* .yDF..._ */
-                /* 16F0 */  0x92, 0xC0, 0x78, 0x24, 0xF1, 0x81, 0x02, 0x08,  /* ..x$.... */
-                /* 16F8 */  0xDD, 0x0B, 0x50, 0xA7, 0x0F, 0x7E, 0x78, 0xF6,  /* ..P..~x. */
-                /* 1700 */  0x05, 0xD5, 0x98, 0xEF, 0x56, 0x8F, 0x70, 0x9E,  /* ....V.p. */
-                /* 1708 */  0x1C, 0xE6, 0x72, 0xC0, 0xE2, 0x5C, 0x93, 0x40,  /* ..r..\.@ */
-                /* 1710 */  0x75, 0xDC, 0xE5, 0xA3, 0x83, 0x7B, 0x6D, 0xC5,  /* u....{m. */
-                /* 1718 */  0x0F, 0xEE, 0x9D, 0xE5, 0x9D, 0xCF, 0x50, 0x1E,  /* ......P. */
-                /* 1720 */  0x24, 0xF8, 0xAE, 0xAD, 0xE0, 0xB8, 0xAA, 0xC1,  /* $....... */
-                /* 1728 */  0x38, 0xB6, 0xF0, 0x4B, 0x1E, 0xBC, 0xFF, 0xFF,  /* 8..K.... */
-                /* 1730 */  0x25, 0x0F, 0xB0, 0x30, 0x2C, 0x2E, 0xF8, 0xEF,  /* %..0,... */
-                /* 1738 */  0x61, 0x20, 0x2A, 0x11, 0x06, 0x45, 0x60, 0x79,  /* a *..E`y */
-                /* 1740 */  0xF7, 0x56, 0x0A, 0x7F, 0xC8, 0x60, 0xBC, 0x29,  /* .V...`.) */
-                /* 1748 */  0xF0, 0x49, 0x63, 0x47, 0x0D, 0xD8, 0x19, 0x2A,  /* .IcG...* */
-                /* 1750 */  0xEE, 0xA6, 0x08, 0xD6, 0xA9, 0x62, 0x86, 0xC0,  /* .....b.. */
-                /* 1758 */  0x83, 0x3D, 0x00, 0x7C, 0xBE, 0xF2, 0x19, 0x40,  /* .=.|...@ */
-                /* 1760 */  0x51, 0x60, 0xC8, 0xFF, 0x1F, 0x86, 0x1D, 0xDA,  /* Q`...... */
-                /* 1768 */  0xE1, 0xDC, 0x86, 0x01, 0x07, 0x23, 0xC6, 0x5D,  /* .....#.] */
-                /* 1770 */  0x0A, 0xE1, 0x4E, 0xF9, 0x1D, 0x25, 0xF6, 0x73,  /* ..N..%.s */
-                /* 1778 */  0x39, 0x9B, 0x2E, 0xEE, 0x6A, 0xEE, 0xD3, 0x09,  /* 9...j... */
-                /* 1780 */  0xBB, 0x20, 0xC3, 0x38, 0x0B, 0x3C, 0x02, 0xBC,  /* . .8.<.. */
-                /* 1788 */  0x9A, 0xF3, 0x0B, 0xF2, 0x0B, 0xF1, 0x0B, 0xC1,  /* ........ */
-                /* 1790 */  0x1B, 0xB2, 0x6F, 0x4A, 0xCF, 0x06, 0x2F, 0x3B,  /* ..oJ../; */
-                /* 1798 */  0x31, 0xDE, 0x8D, 0x7D, 0x4A, 0xF6, 0x79, 0xE7,  /* 1..}J.y. */
-                /* 17A0 */  0x05, 0xD9, 0x18, 0x47, 0x13, 0x31, 0xCA, 0xB9,  /* ...G.1.. */
-                /* 17A8 */  0x3D, 0x0C, 0xBC, 0x26, 0x1B, 0xE5, 0xFD, 0xE4,  /* =..&.... */
-                /* 17B0 */  0x85, 0x20, 0x62, 0x34, 0x43, 0x04, 0x8D, 0x11,  /* . b4C... */
-                /* 17B8 */  0xE8, 0x7D, 0xD9, 0x78, 0x2F, 0xC8, 0x4C, 0xE0,  /* .}.x/.L. */
-                /* 17C0 */  0x5B, 0x41, 0x07, 0x17, 0x5F, 0x90, 0x01, 0x43,  /* [A.._..C */
-                /* 17C8 */  0xFF, 0xFF, 0x0B, 0x32, 0xB0, 0x3F, 0x19, 0x01,  /* ...2.?.. */
-                /* 17D0 */  0x3E, 0x4F, 0x1C, 0xB8, 0x4B, 0x35, 0xF8, 0x4E,  /* >O..K5.N */
-                /* 17D8 */  0x36, 0xC0, 0xFA, 0xFF, 0x7F, 0xB2, 0x01, 0xFB,  /* 6....... */
-                /* 17E0 */  0xD0, 0x7D, 0xB2, 0x01, 0xF7, 0x68, 0xE1, 0x1D,  /* .}...h.. */
-                /* 17E8 */  0x4D, 0x10, 0x27, 0x1B, 0x0A, 0xE4, 0xE0, 0xEB,  /* M.'..... */
-                /* 17F0 */  0xA2, 0x70, 0x3C, 0xF4, 0x49, 0x84, 0x1E, 0x9D,  /* .p<.I... */
-                /* 17F8 */  0x7C, 0x94, 0xC4, 0x9D, 0x19, 0x3C, 0x91, 0x77,  /* |....<.w */
-                /* 1800 */  0x16, 0x8F, 0xE2, 0x65, 0xD0, 0xF7, 0x82, 0x13,  /* ...e.... */
-                /* 1808 */  0x79, 0x7D, 0xB0, 0x9C, 0x63, 0x24, 0xA8, 0x46,  /* y}..c$.F */
-                /* 1810 */  0xE2, 0xE3, 0x03, 0xFC, 0xEB, 0x8B, 0x8F, 0x91,  /* ........ */
-                /* 1818 */  0xF0, 0xF9, 0xFC, 0xC3, 0xF2, 0x60, 0x0C, 0xE9,  /* .....`.. */
-                /* 1820 */  0x53, 0x24, 0x07, 0x79, 0x76, 0x79, 0x0C, 0xE1,  /* S$.yvy.. */
-                /* 1828 */  0x17, 0x48, 0xB8, 0xA7, 0x99, 0x03, 0xC0, 0xC8,  /* .H...... */
-                /* 1830 */  0xBA, 0x3C, 0xA2, 0xCF, 0x8E, 0x1C, 0x23, 0xAE,  /* .<....#. */
-                /* 1838 */  0x2F, 0x8A, 0xBE, 0x02, 0xFB, 0x20, 0x70, 0x3E,  /* /.... p> */
-                /* 1840 */  0xCF, 0x89, 0xE0, 0xFA, 0xFF, 0x9F, 0x13, 0x31,  /* .......1 */
-                /* 1848 */  0xA3, 0xE6, 0x47, 0x1B, 0x3E, 0x7E, 0x0E, 0xFE,  /* ..G.>~.. */
-                /* 1850 */  0x56, 0xF0, 0x40, 0xE9, 0x63, 0x51, 0x88, 0x47,  /* V.@.cQ.G */
-                /* 1858 */  0x24, 0x7E, 0x4E, 0x04, 0x97, 0x89, 0x73, 0x22,  /* $~N...s" */
-                /* 1860 */  0x90, 0x38, 0xF4, 0xC2, 0x38, 0x2D, 0xE0, 0x06,  /* .8..8-.. */
-                /* 1868 */  0xE2, 0x33, 0x25, 0x76, 0xCA, 0x27, 0xC2, 0xCE,  /* .3%v.'.. */
-                /* 1870 */  0x25, 0x98, 0xD1, 0x81, 0xEB, 0x72, 0xEF, 0xD1,  /* %....r.. */
-                /* 1878 */  0x81, 0xFF, 0x24, 0x80, 0xC7, 0x7A, 0xBC, 0x03,  /* ..$..z.. */
-                /* 1880 */  0xDF, 0x49, 0xDD, 0x77, 0x13, 0x5F, 0x64, 0x7C,  /* .I.w._d| */
-                /* 1888 */  0x28, 0x7A, 0x6C, 0x01, 0x56, 0xFF, 0xFF, 0xF3,  /* (zl.V... */
-                /* 1890 */  0x1D, 0x60, 0x2A, 0xDC, 0xE1, 0x0E, 0x15, 0xE7,  /* .`*..... */
-                /* 1898 */  0x7C, 0x07, 0x50, 0xE3, 0x6C, 0xFD, 0x7C, 0x07,  /* |.P.l.|. */
-                /* 18A0 */  0xAE, 0xFF, 0xFF, 0xF9, 0x0E, 0x86, 0xC8, 0xF3,  /* ........ */
-                /* 18A8 */  0x1D, 0x40, 0xF6, 0xFF, 0xFF, 0x19, 0x00, 0x73,  /* .@.....s */
-                /* 18B0 */  0x46, 0xC3, 0x9D, 0xEF, 0xC0, 0x76, 0xB4, 0x01,  /* F....v.. */
-                /* 18B8 */  0xCC, 0x4D, 0xE3, 0xD1, 0x06, 0xDC, 0xC3, 0x85,  /* .M...... */
-                /* 18C0 */  0x3D, 0x0C, 0x9E, 0xE1, 0x0D, 0xE5, 0x43, 0x01,  /* =.....C. */
-                /* 18C8 */  0x95, 0x74, 0xCA, 0xA6, 0x30, 0x66, 0xF1, 0x91,  /* .t..0f.. */
-                /* 18D0 */  0xC1, 0x07, 0x05, 0x7E, 0x64, 0xF0, 0x39, 0xE1,  /* ...~d.9. */
-                /* 18D8 */  0xF1, 0xE1, 0x50, 0xD9, 0x11, 0xC6, 0x97, 0x10,  /* ..P..... */
-                /* 18E0 */  0x1F, 0x15, 0x58, 0xF4, 0x71, 0xD2, 0x13, 0x14,  /* ..X.q... */
-                /* 18E8 */  0x18, 0x87, 0xF8, 0xC8, 0xE7, 0x41, 0x3C, 0xD9,  /* .....A<. */
-                /* 18F0 */  0xC0, 0x3A, 0x17, 0xFC, 0xFF, 0x9F, 0x0B, 0x00,  /* .:...... */
-                /* 18F8 */  0x33, 0x3A, 0x9F, 0x6F, 0x1A, 0xB9, 0x35, 0x82,  /* 3:.o..5. */
-                /* 1900 */  0xC8, 0xC6, 0x51, 0x84, 0x72, 0x38, 0xC9, 0xE2,  /* ..Q.r8.. */
-                /* 1908 */  0x74, 0x11, 0xF4, 0x09, 0xC9, 0xD7, 0x8B, 0x53,  /* t......S */
-                /* 1910 */  0x39, 0x55, 0xFC, 0x55, 0xC4, 0xCA, 0x21, 0x05,  /* 9U.U..!. */
-                /* 1918 */  0xEF, 0xE3, 0x8A, 0x35, 0xC3, 0x28, 0xDE, 0x6B,  /* ...5.(.k */
-                /* 1920 */  0x44, 0xA3, 0xF1, 0x08, 0x1C, 0x08, 0x46, 0x70,  /* D.....Fp */
-                /* 1928 */  0x06, 0xF1, 0x49, 0xC4, 0xD9, 0x8E, 0x3A, 0x68,  /* ..I...:h */
-                /* 1930 */  0x25, 0xE7, 0x3D, 0x32, 0x06, 0x76, 0xD0, 0xC1,  /* %.=2.v.. */
-                /* 1938 */  0x04, 0xB9, 0x9E, 0xD0, 0x99, 0xFB, 0x72, 0xC0,  /* ......r. */
-                /* 1940 */  0x35, 0x40, 0xE8, 0x00, 0x62, 0x70, 0x5F, 0x52,  /* 5@..bp_R */
-                /* 1948 */  0x60, 0x5C, 0xA8, 0x7C, 0x49, 0xC1, 0x9C, 0x8D,  /* `\.|I... */
-                /* 1950 */  0x3C, 0x1B, 0xAB, 0x01, 0x45, 0x0D, 0xC0, 0x68,  /* <...E..h */
-                /* 1958 */  0x98, 0x73, 0xC0, 0xC3, 0x09, 0xB8, 0x72, 0x5D,  /* .s....r] */
-                /* 1960 */  0xF8, 0xD0, 0x2F, 0x09, 0xDF, 0x2D, 0x1E, 0x6C,  /* ../..-.l */
-                /* 1968 */  0xD8, 0xDC, 0xC0, 0xF5, 0xFF, 0x9F, 0x1B, 0xCC,  /* ........ */
-                /* 1970 */  0xF1, 0x7B, 0x6E, 0xB0, 0xD0, 0x3C, 0x37, 0xF8,  /* .{n..<7. */
-                /* 1978 */  0xF7, 0x3D, 0xEC, 0xE1, 0x10, 0x8F, 0xCC, 0xE6,  /* .=...... */
-                /* 1980 */  0xF6, 0x1C, 0x10, 0xE1, 0x15, 0xC1, 0x97, 0x1C,  /* ........ */
-                /* 1988 */  0x8F, 0x0E, 0x38, 0x00, 0x7A, 0x74, 0xB0, 0x90,  /* ..8.zt.. */
-                /* 1990 */  0x3C, 0x3A, 0xB0, 0x25, 0x1C, 0x1D, 0x5A, 0x0F,  /* <:.%..Z. */
-                /* 1998 */  0x88, 0x5C, 0x9E, 0xB1, 0xC8, 0xC9, 0xE4, 0xF4,  /* .\...... */
-                /* 19A0 */  0x4E, 0xE6, 0x99, 0xE0, 0xEC, 0x9E, 0x2E, 0x82,  /* N....... */
-                /* 19A8 */  0x04, 0x8A, 0x13, 0xFD, 0xD9, 0xC4, 0x13, 0x04,  /* ........ */
-                /* 19B0 */  0x0E, 0x03, 0xF0, 0x04, 0x61, 0xA1, 0x79, 0x82,  /* ....a.y. */
-                /* 19B8 */  0x60, 0x8B, 0x78, 0xCD, 0x40, 0xDF, 0x3C, 0x61,  /* `.x.@.<a */
-                /* 19C0 */  0x60, 0xFF, 0xFF, 0x5F, 0xE7, 0x98, 0xF7, 0xDB,  /* `.._.... */
-                /* 19C8 */  0x0D, 0xB9, 0x11, 0x00, 0x8F, 0x4B, 0xA1, 0x47,  /* .....K.G */
-                /* 19D0 */  0x08, 0x0B, 0xCD, 0x47, 0x0D, 0xB0, 0xC5, 0x1B,  /* ...G.... */
-                /* 19D8 */  0x21, 0x7A, 0x58, 0xBE, 0x95, 0x9C, 0xDF, 0xC9,  /* !zX..... */
-                /* 19E0 */  0x1D, 0x1F, 0xB0, 0x02, 0xF6, 0xF8, 0x60, 0xA1,  /* ......`. */
-                /* 19E8 */  0x78, 0x7C, 0x60, 0xD3, 0x77, 0x37, 0x02, 0x05,  /* x|`.w7.. */
-                /* 19F0 */  0x90, 0x4F, 0x42, 0x3E, 0x9F, 0xBC, 0x0C, 0xB1,  /* .OB>.... */
-                /* 19F8 */  0x31, 0xBC, 0x4D, 0x19, 0xCD, 0xE8, 0x3C, 0xD3,  /* 1.M...<. */
-                /* 1A00 */  0x96, 0x74, 0xBE, 0xE1, 0x29, 0x60, 0x74, 0x76,  /* .t..)`tv */
-                /* 1A08 */  0x31, 0x88, 0x6F, 0x24, 0x56, 0x08, 0xA2, 0x63,  /* 1.o$V..c */
-                /* 1A10 */  0x08, 0xFE, 0xBA, 0xEB, 0x19, 0xBD, 0x29, 0x78,  /* ......)x */
-                /* 1A18 */  0xB6, 0x26, 0xA8, 0x07, 0x52, 0x27, 0x4F, 0x38,  /* .&..R'O8 */
-                /* 1A20 */  0xB7, 0x0B, 0xF6, 0xFF, 0x3F, 0x48, 0xB1, 0xBB,  /* ....?H.. */
-                /* 1A28 */  0xB5, 0xCF, 0xD8, 0xF0, 0x0F, 0x99, 0x1E, 0x8F,  /* ........ */
-                /* 1A30 */  0x6D, 0x1C, 0x8C, 0xE8, 0x09, 0xCB, 0x87, 0x6C,  /* m......l */
-                /* 1A38 */  0x7E, 0x98, 0x78, 0x52, 0x62, 0xE7, 0xC9, 0x04,  /* ~.xRb... */
-                /* 1A40 */  0x6F, 0x94, 0x09, 0x7A, 0x3B, 0x5F, 0xD3, 0x9B,  /* o..z;_.. */
-                /* 1A48 */  0xB6, 0x21, 0xA3, 0x32, 0x58, 0x43, 0x3C, 0xF3,  /* .!.2XC<. */
-                /* 1A50 */  0x32, 0x7D, 0xEB, 0xD3, 0x71, 0x1B, 0xAE, 0x1E,  /* 2}..q... */
-                /* 1A58 */  0x40, 0x8D, 0x85, 0x2B, 0x81, 0xD1, 0xA0, 0xC3,  /* @..+.... */
-                /* 1A60 */  0x3D, 0x5D, 0xBD, 0x5D, 0xF9, 0xB2, 0xE0, 0x0B,  /* =].].... */
-                /* 1A68 */  0x83, 0x2F, 0x54, 0x3E, 0x7C, 0x1A, 0xEC, 0xBC,  /* ./T>|... */
-                /* 1A70 */  0x22, 0xBC, 0x30, 0xF8, 0x36, 0xC5, 0x8E, 0xD7,  /* ".0.6... */
-                /* 1A78 */  0x0C, 0x32, 0x54, 0x9C, 0xC0, 0x6F, 0xD7, 0x1C,  /* .2T..o.. */
-                /* 1A80 */  0x2C, 0xEC, 0x63, 0xC0, 0xE3, 0x86, 0xEF, 0x65,  /* ,.c....e */
-                /* 1A88 */  0xEC, 0x26, 0x10, 0xEB, 0x31, 0xC9, 0x23, 0xE6,  /* .&..1.#. */
-                /* 1A90 */  0xF7, 0xA9, 0x03, 0x8A, 0xF4, 0xFC, 0xE3, 0x09,  /* ........ */
-                /* 1A98 */  0xF8, 0x92, 0xE5, 0xFB, 0xE3, 0x49, 0xF9, 0xAC,  /* .....I.. */
-                /* 1AA0 */  0x6A, 0xF4, 0x57, 0x09, 0x5F, 0xCA, 0x8C, 0xEC,  /* j.W._... */
-                /* 1AA8 */  0x13, 0x18, 0xBB, 0x49, 0xB2, 0x41, 0xF1, 0xAB,  /* ...I.A.. */
-                /* 1AB0 */  0xA9, 0x0F, 0x21, 0x9E, 0x0A, 0xBB, 0x3F, 0x61,  /* ..!...?a */
-                /* 1AB8 */  0xC0, 0x8E, 0xC0, 0xA7, 0x43, 0x7E, 0x74, 0x09,  /* ....C~t. */
-                /* 1AC0 */  0x14, 0xA5, 0x78, 0x4C, 0xDD, 0x1C, 0x3C, 0x43,  /* ..xL..<C */
-                /* 1AC8 */  0x83, 0x62, 0xE0, 0x0F, 0x92, 0xCD, 0x2E, 0xAE,  /* .b...... */
-                /* 1AD0 */  0xB1, 0x7C, 0x2F, 0x31, 0x22, 0x76, 0x40, 0x0C,  /* .|/1"v@. */
-                /* 1AD8 */  0xE5, 0x3D, 0xD2, 0xEA, 0x51, 0xC8, 0x1C, 0x3C,  /* .=..Q..< */
-                /* 1AE0 */  0x22, 0xCF, 0xC6, 0xD3, 0x61, 0xA7, 0x0E, 0xFC,  /* "...a... */
-                /* 1AE8 */  0x24, 0x7C, 0x6A, 0xF2, 0xC1, 0xCE, 0x03, 0xF2,  /* $|j..... */
-                /* 1AF0 */  0x50, 0xF8, 0x14, 0x19, 0xB0, 0xFF, 0xFF, 0xC0,  /* P....... */
-                /* 1AF8 */  0x78, 0x98, 0x97, 0x00, 0x06, 0xED, 0xE1, 0x33,  /* x......3 */
-                /* 1B00 */  0xF4, 0x17, 0x23, 0xA3, 0xF3, 0xF3, 0xCE, 0xE9,  /* ..#..... */
-                /* 1B08 */  0xF8, 0x1C, 0xEA, 0xA3, 0x86, 0xEF, 0x01, 0x98,  /* ........ */
-                /* 1B10 */  0x33, 0x99, 0x4F, 0x00, 0x3E, 0xB3, 0x31, 0xA0,  /* 3.O.>.1. */
-                /* 1B18 */  0x47, 0x7B, 0x06, 0xF2, 0xBE, 0xCA, 0x2E, 0x3F,  /* G{.....? */
-                /* 1B20 */  0x18, 0xA4, 0x77, 0x5D, 0x9F, 0x7E, 0x30, 0xF7,  /* ..w].~0. */
-                /* 1B28 */  0x33, 0x0E, 0x16, 0xE8, 0x58, 0xF9, 0x64, 0xE2,  /* 3...X.d. */
-                /* 1B30 */  0x79, 0xC2, 0x1E, 0x29, 0x9C, 0xDB, 0x26, 0x8C,  /* y..)..&. */
-                /* 1B38 */  0x2B, 0x2F, 0xBF, 0x06, 0xF2, 0x5B, 0x39, 0xB8,  /* +/...[9. */
-                /* 1B40 */  0xAE, 0x18, 0x3E, 0x99, 0x80, 0x19, 0x1E, 0x13,  /* ..>..... */
-                /* 1B48 */  0xE8, 0x3C, 0x43, 0x65, 0x8D, 0x0B, 0x75, 0xA4,  /* .<Ce..u. */
-                /* 1B50 */  0xF1, 0x35, 0x95, 0x61, 0x3F, 0x0C, 0x78, 0xD2,  /* .5.a?.x. */
-                /* 1B58 */  0x87, 0x79, 0x82, 0x2F, 0x6B, 0x18, 0x58, 0x5F,  /* .y./k.X_ */
-                /* 1B60 */  0x4A, 0x38, 0xAC, 0xD1, 0xC2, 0xBE, 0x0E, 0x18,  /* J8...... */
-                /* 1B68 */  0xF6, 0x11, 0x10, 0x77, 0xFD, 0x05, 0x0B, 0x20,  /* ...w...  */
-                /* 1B70 */  0xFE, 0x92, 0xF0, 0x60, 0xE0, 0x09, 0x18, 0x90,  /* ...`.... */
-                /* 1B78 */  0xC5, 0x59, 0x15, 0x15, 0xB1, 0x1C, 0x05, 0x80,  /* .Y...... */
-                /* 1B80 */  0x41, 0xFD, 0xFF, 0x47, 0xE7, 0xFB, 0x37, 0xE0,  /* A..G..7. */
-                /* 1B88 */  0xE4, 0xB2, 0x8D, 0xBF, 0x47, 0xBC, 0x1E, 0x78,  /* ....G..x */
-                /* 1B90 */  0xB0, 0xEC, 0xB2, 0xFD, 0x20, 0xF3, 0x80, 0xF0,  /* .... ... */
-                /* 1B98 */  0x1C, 0xF3, 0x0E, 0xF3, 0x50, 0xF0, 0x2E, 0x13,  /* ....P... */
-                /* 1BA0 */  0x21, 0xC8, 0x53, 0xF6, 0x3B, 0x42, 0x84, 0x50,  /* !.S.;B.P */
-                /* 1BA8 */  0x81, 0x5E, 0xB6, 0x8D, 0x17, 0xF4, 0x65, 0x22,  /* .^....e" */
-                /* 1BB0 */  0x4A, 0x9C, 0x28, 0x11, 0x42, 0x19, 0xE3, 0x5C,  /* J.(.B..\ */
-                /* 1BB8 */  0x9E, 0x0E, 0x5E, 0x6A, 0xC2, 0x3D, 0x26, 0x04,  /* ..^j.=&. */
-                /* 1BC0 */  0x7E, 0x72, 0x88, 0x12, 0xD8, 0x63, 0x7C, 0xD9,  /* ~r...c|. */
-                /* 1BC8 */  0x66, 0xE2, 0x2F, 0x32, 0xBA, 0x27, 0xF9, 0xB2,  /* f./2.'.. */
-                /* 1BD0 */  0x0D, 0x38, 0xFF, 0xFF, 0x5F, 0xB6, 0xC1, 0x75,  /* .8.._..u */
-                /* 1BD8 */  0x71, 0x06, 0xF3, 0x8D, 0x16, 0x30, 0x77, 0x71,  /* q....0wq */
-                /* 1BE0 */  0x06, 0xFB, 0x70, 0x61, 0x0F, 0x83, 0x87, 0x79,  /* ..pa...y */
-                /* 1BE8 */  0x4F, 0xF8, 0x50, 0x42, 0xE5, 0xC3, 0xA0, 0xCE,  /* O.PB.... */
-                /* 1BF0 */  0x25, 0xC0, 0xF1, 0xFF, 0x7F, 0x2E, 0x01, 0x46,  /* %......F */
-                /* 1BF8 */  0x33, 0x7A, 0x03, 0x78, 0x15, 0x38, 0xED, 0x47,  /* 3z.x.8.G */
-                /* 1C00 */  0x91, 0x87, 0x92, 0x43, 0x88, 0xF1, 0x3E, 0x12,  /* ...C..>. */
-                /* 1C08 */  0xC4, 0x08, 0x87, 0xFE, 0x5C, 0xE2, 0xEB, 0xC8,  /* ....\... */
-                /* 1C10 */  0x93, 0x5B, 0x88, 0x28, 0xEF, 0x27, 0x4F, 0x28,  /* .[.(.'O( */
-                /* 1C18 */  0x86, 0x88, 0x12, 0x2C, 0x46, 0xB0, 0xD0, 0x4F,  /* ...,F..O */
-                /* 1C20 */  0x25, 0xC6, 0x60, 0x87, 0x94, 0x20, 0xE1, 0x9E,  /* %.`.. .. */
-                /* 1C28 */  0x4B, 0x98, 0xF4, 0xEF, 0x9D, 0xCE, 0xB9, 0x3E,  /* K......> */
-                /* 1C30 */  0x97, 0x00, 0xFC, 0x08, 0x77, 0xB7, 0x45, 0x9F,  /* ....w.E. */
-                /* 1C38 */  0x1B, 0x7C, 0x4C, 0xF0, 0xF9, 0xC0, 0x10, 0x8D,  /* .|L..... */
-                /* 1C40 */  0x5F, 0x0C, 0xC8, 0xF5, 0xCD, 0x77, 0x04, 0x1F,  /* _....w.. */
-                /* 1C48 */  0x13, 0x5E, 0xE0, 0x18, 0x81, 0xFF, 0xFF, 0x01,  /* .^...... */
-                /* 1C50 */  0x86, 0x4E, 0xCF, 0x9D, 0xE0, 0x18, 0x94, 0x87,  /* .N...... */
-                /* 1C58 */  0x07, 0xFE, 0x03, 0x19, 0x3E, 0xFC, 0x75, 0x12,  /* ....>.u. */
-                /* 1C60 */  0x75, 0x4C, 0xE0, 0xC3, 0x83, 0x77, 0xFA, 0x73,  /* uL...w.s */
-                /* 1C68 */  0xC8, 0xA3, 0x18, 0x1D, 0x1C, 0x38, 0x9E, 0xEF,  /* .....8.. */
-                /* 1C70 */  0x1A, 0x1C, 0x08, 0x0E, 0x27, 0x0F, 0x1E, 0xD8,  /* ....'... */
-                /* 1C78 */  0xC3, 0x19, 0x9B, 0x38, 0x1F, 0xC2, 0xD1, 0xF8,  /* ...8.... */
-                /* 1C80 */  0x08, 0x00, 0x8E, 0xB3, 0x03, 0xF8, 0xA2, 0x0E,  /* ........ */
-                /* 1C88 */  0x17, 0x7D, 0x38, 0xF0, 0x1D, 0x13, 0x06, 0xFA,  /* .}8..... */
-                /* 1C90 */  0x6B, 0x86, 0x6F, 0x6F, 0x46, 0xE7, 0x71, 0x06,  /* k.ooF.q. */
-                /* 1C98 */  0x0C, 0xAA, 0xC1, 0x7A, 0xC0, 0xF0, 0xFF, 0xFF,  /* ...z.... */
-                /* 1CA0 */  0x67, 0x40, 0xFC, 0x0C, 0x5E, 0x2E, 0x9E, 0x2C,  /* g@..^.., */
-                /* 1CA8 */  0xF8, 0x28, 0xC1, 0x77, 0xE2, 0xF3, 0x89, 0x02,  /* .(.w.... */
-                /* 1CB0 */  0x37, 0x18, 0x9F, 0xEA, 0x31, 0x67, 0x09, 0xB0,  /* 7...1g.. */
-                /* 1CB8 */  0x5D, 0x57, 0x7D, 0x96, 0x00, 0x3E, 0xF2, 0x0E,  /* ]W}..>.. */
-                /* 1CC0 */  0x58, 0xA0, 0x39, 0x20, 0xC1, 0x38, 0x59, 0x01,  /* X.9 .8Y. */
-                /* 1CC8 */  0x76, 0xC6, 0xF1, 0x64, 0x05, 0xE6, 0xFF, 0xFF,  /* v..d.... */
-                /* 1CD0 */  0xF0, 0x7C, 0x04, 0xC7, 0x8F, 0x81, 0x2B, 0xB4,  /* .|....+. */
-                /* 1CD8 */  0xE9, 0x53, 0xA3, 0x51, 0xAB, 0x06, 0x65, 0x6A,  /* .S.Q..ej */
-                /* 1CE0 */  0x94, 0x69, 0x50, 0xAB, 0x4F, 0xA5, 0xC6, 0x8C,  /* .iP.O... */
-                /* 1CE8 */  0x09, 0x3B, 0x55, 0x29, 0xE0, 0xB3, 0x41, 0x03,  /* .;U)..A. */
-                /* 1CF0 */  0xB3, 0x3C, 0x0A, 0x81, 0x58, 0xCC, 0x9B, 0x42,  /* .<..X..B */
-                /* 1CF8 */  0x20, 0x0E, 0x0B, 0x42, 0x23, 0x1D, 0x8E, 0x04,  /*  ..B#... */
-                /* 1D00 */  0x62, 0xC9, 0x47, 0x2C, 0x81, 0x58, 0xAE, 0x07,  /* b.G,.X.. */
-                /* 1D08 */  0x10, 0x16, 0xF0, 0x4D, 0x22, 0x70, 0xF2, 0x46,  /* ...M"p.F */
-                /* 1D10 */  0x12, 0x38, 0x79, 0x26, 0x08, 0xC4, 0x91, 0x41,  /* .8y&...A */
-                /* 1D18 */  0xA8, 0x50, 0x1D, 0x20, 0x2C, 0x26, 0x08, 0x0D,  /* .P. ,&.. */
-                /* 1D20 */  0xE5, 0x03, 0x84, 0x49, 0x7F, 0x1A, 0x08, 0x90,  /* ...I.... */
-                /* 1D28 */  0x18, 0x01, 0x61, 0xE1, 0x1E, 0x12, 0x02, 0xB1,  /* ..a..... */
-                /* 1D30 */  0xB4, 0xE7, 0x83, 0x40, 0x2C, 0xC4, 0x0A, 0x08,  /* ...@,... */
-                /* 1D38 */  0x8B, 0x0B, 0x42, 0xC3, 0x69, 0x01, 0x61, 0x92,  /* ..B.i.a. */
-                /* 1D40 */  0xCC, 0x80, 0xB0, 0x40, 0x20, 0x54, 0xFE, 0x2B,  /* ...@ T.+ */
-                /* 1D48 */  0x5D, 0x20, 0x16, 0xE9, 0x06, 0x90, 0x2E, 0x5D,  /* ] .....] */
-                /* 1D50 */  0x20, 0x0E, 0xA2, 0x07, 0x84, 0xC9, 0xF0, 0x03,  /*  ....... */
-                /* 1D58 */  0xC2, 0x42, 0x83, 0xD0, 0x68, 0xEF, 0x09, 0x01,  /* .B..h... */
-                /* 1D60 */  0x12, 0x43, 0x20, 0x2C, 0xBE, 0x23, 0x10, 0x26,  /* .C ,.#.& */
-                /* 1D68 */  0xFE, 0x69, 0x22, 0x10, 0xE7, 0xB7, 0x04, 0x71,  /* .i"....q */
-                /* 1D70 */  0x53, 0x1A, 0x62, 0x4D, 0x40, 0x4C, 0x83, 0x27,  /* S.bM@L.' */
-                /* 1D78 */  0x20, 0xA6, 0x08, 0x44, 0x40, 0x8E, 0xFD, 0xD2,  /*  ..D@... */
-                /* 1D80 */  0x10, 0x90, 0x35, 0x98, 0x02, 0x62, 0xD1, 0x41,  /* ..5..b.A */
-                /* 1D88 */  0x04, 0x64, 0x21, 0xAA, 0x80, 0x58, 0x5E, 0x57,  /* .d!..X^W */
-                /* 1D90 */  0x40, 0x2C, 0x3C, 0x88, 0x80, 0x9C, 0xF9, 0xCD,  /* @,<..... */
-                /* 1D98 */  0x2A, 0x20, 0x2B, 0x78, 0x74, 0x3D, 0x04, 0xB0,  /* * +xt=.. */
-                /* 1DA0 */  0xAF, 0xBC, 0x80, 0x9C, 0x1C, 0x44, 0x40, 0x0E,  /* .....D@. */
-                /* 1DA8 */  0xEC, 0x0B, 0x88, 0xC5, 0x07, 0x11, 0x90, 0xB3,  /* ........ */
-                /* 1DB0 */  0xFE, 0xC1, 0x05, 0xE4, 0xE0, 0x20, 0x1A, 0x04,  /* ..... .. */
-                /* 1DB8 */  0xF9, 0x68, 0x08, 0xC8, 0xE9, 0x41, 0x04, 0x44,  /* .h...A.D */
-                /* 1DC0 */  0x7E, 0xE4, 0x02, 0xB1, 0xDA, 0x2F, 0xB9, 0x40,  /* ~..../.@ */
-                /* 1DC8 */  0xAC, 0xE7, 0x4F, 0xAE, 0xA1, 0x10, 0x10, 0xAA,  /* ..O..... */
-                /* 1DD0 */  0x5C, 0xDD, 0x49, 0x85, 0xFD, 0xFF, 0x73, 0x80,  /* \.I...s. */
-                /* 1DD8 */  0xD0, 0x5C, 0x20, 0x02, 0xB3, 0x0A, 0x77, 0x40,  /* .\ ...w@ */
-                /* 1DE0 */  0x4C, 0x15, 0x88, 0x80, 0x9C, 0x00, 0x88, 0xA6,  /* L....... */
-                /* 1DE8 */  0x02, 0xA1, 0x29, 0xC1, 0xA8, 0xAE, 0x37, 0x88,  /* ..)...7. */
-                /* 1DF0 */  0x80, 0x9C, 0x00, 0x84, 0xA6, 0x02, 0xA1, 0x29,  /* .......) */
-                /* 1DF8 */  0x41, 0x04, 0x68, 0x55, 0xF6, 0x80, 0x98, 0x52,  /* A.hU...R */
-                /* 1E00 */  0x10, 0xAA, 0x1C, 0x84, 0xA6, 0x03, 0xA1, 0xB2,  /* ........ */
-                /* 1E08 */  0xDF, 0xFD, 0x3A, 0x2C, 0x10, 0x10, 0x01, 0x39,  /* ..:,...9 */
-                /* 1E10 */  0x3A, 0x08, 0x15, 0xEE, 0x0F, 0x84, 0xE9, 0x7D,  /* :......} */
-                /* 1E18 */  0x66, 0x08, 0xD0, 0xE9, 0x40, 0x04, 0xE4, 0xC4,  /* f...@... */
-                /* 1E20 */  0x20, 0x54, 0xC1, 0x0F, 0x23, 0x08, 0x11, 0x0B,  /*  T..#... */
-                /* 1E28 */  0x42, 0x15, 0xFC, 0x30, 0x82, 0x12, 0x2D, 0x2F,  /* B..0..-/ */
-                /* 1E30 */  0x0E, 0x01, 0x59, 0x1F, 0x08, 0xD5, 0x0B, 0x22,  /* ..Y...." */
-                /* 1E38 */  0x30, 0x67, 0x03, 0xA2, 0x79, 0x41, 0x68, 0x7E,  /* 0g..yAh~ */
-                /* 1E40 */  0x30, 0xAA, 0xD5, 0x28, 0x10, 0xD3, 0x0F, 0x42,  /* 0..(...B */
-                /* 1E48 */  0xF3, 0x80, 0x08, 0xCC, 0x0A, 0xDE, 0x1E, 0x07,  /* ........ */
-                /* 1E50 */  0xCC, 0x40, 0xA8, 0x4A, 0x10, 0x81, 0x39, 0x17,  /* .@.J..9. */
-                /* 1E58 */  0x10, 0xCD, 0x0A, 0x42, 0xB3, 0x83, 0x51, 0xED,  /* ...B..Q. */
-                /* 1E60 */  0x9F, 0x10, 0x0D, 0x80, 0x80, 0xD0, 0x7C, 0x20,  /* ......|  */
-                /* 1E68 */  0x3A, 0x0C, 0x90, 0xE7, 0xA0, 0x80, 0xAC, 0x11,  /* :....... */
-                /* 1E70 */  0x84, 0x6A, 0x06, 0xD1, 0xF1, 0x80, 0x00, 0xD1,  /* .j...... */
-                /* 1E78 */  0xFC, 0x20, 0x54, 0xCF, 0xC7, 0x24, 0x18, 0xC9,  /* . T..$.. */
-                /* 1E80 */  0x00, 0x22, 0x20, 0x6B, 0xF9, 0xF2, 0x07, 0x22,  /* ." k..." */
-                /* 1E88 */  0xFA, 0x41, 0x04, 0xE4, 0x4C, 0x20, 0x34, 0x23,  /* .A..L 4# */
-                /* 1E90 */  0x18, 0x55, 0xFB, 0x2E, 0xD2, 0x71, 0x80, 0x80,  /* .U...q.. */
-                /* 1E98 */  0xD0, 0x44, 0x20, 0x1A, 0x1E, 0x79, 0xED, 0x1C,  /* .D ..y.. */
-                /* 1EA0 */  0x1E, 0x03, 0xA1, 0x2A, 0x41, 0x04, 0x66, 0x8D,  /* ...*A.f. */
-                /* 1EA8 */  0x0F, 0x4C, 0x81, 0x38, 0x21, 0x08, 0x55, 0x6F,  /* .L.8!.Uo */
-                /* 1EB0 */  0xF7, 0xC0, 0x40, 0xF5, 0x82, 0xB0, 0xFF, 0xBF,  /* ..@..... */
-                /* 1EB8 */  0x5A, 0xC1, 0x83, 0xA0, 0x20, 0x34, 0x11, 0x88,  /* Z... 4.. */
-                /* 1EC0 */  0x0E, 0x19, 0xE4, 0xD5, 0x12, 0x88, 0xE8, 0x02,  /* ........ */
-                /* 1EC8 */  0xA1, 0x3A, 0x41, 0x34, 0x64, 0x02, 0x44, 0xB3,  /* .:A4d.D. */
-                /* 1ED0 */  0x82, 0xD0, 0xEC, 0x60, 0x34, 0xFB, 0xF3, 0x45,  /* ...`4..E */
-                /* 1ED8 */  0xC3, 0x20, 0x5F, 0x25, 0x1D, 0x18, 0xC8, 0xE3,  /* . _%.... */
-                /* 1EE0 */  0x31, 0x08, 0x51, 0xF4, 0x6D, 0x12, 0x88, 0x73,  /* 1.Q.m..s */
-                /* 1EE8 */  0x3F, 0x80, 0x34, 0x50, 0xF2, 0x29, 0x0A, 0x42,  /* ?.4P.).B */
-                /* 1EF0 */  0xB4, 0x81, 0x08, 0xCC, 0x39, 0x80, 0x68, 0x36,  /* ....9.h6 */
-                /* 1EF8 */  0x10, 0x9A, 0x15, 0x8C, 0x66, 0x55, 0x7D, 0xC4,  /* ....fU}. */
-                /* 1F00 */  0xA0, 0x4F, 0x9F, 0x43, 0x63, 0x2F, 0x3D, 0x81,  /* .O.Cc/=. */
-                /* 1F08 */  0x58, 0xC9, 0xCB, 0xE6, 0xD1, 0x82, 0xFD, 0xBC,  /* X....... */
-                /* 1F10 */  0x82, 0xB0, 0x4F, 0x59, 0x60, 0xF6, 0x32, 0xD2,  /* ..OY`.2. */
-                /* 1F18 */  0x31, 0x80, 0x80, 0x50, 0x3D, 0xCF, 0x33, 0x1D,  /* 1..P=.3. */
-                /* 1F20 */  0x01, 0x08, 0x88, 0x8E, 0x00, 0x04, 0x84, 0x66,  /* .......f */
-                /* 1F28 */  0x04, 0xA1, 0xD9, 0x41, 0xA8, 0xAE, 0xA7, 0xA3,  /* ...A.... */
-                /* 1F30 */  0x40, 0xAD, 0xED, 0xBF, 0x13, 0x84, 0x24, 0x03,  /* @.....$. */
-                /* 1F38 */  0xA1, 0xAA, 0x7F, 0xF3, 0x41, 0x88, 0xE2, 0xB7,  /* ....A... */
-                /* 1F40 */  0xA3, 0x86, 0x49, 0x9E, 0x6A, 0x0F, 0x01, 0xEC,  /* ..I.j... */
-                /* 1F48 */  0xA5, 0x28, 0x70, 0xEB, 0x06, 0xA1, 0x39, 0x40,  /* .(p...9@ */
-                /* 1F50 */  0x34, 0x50, 0x02, 0x44, 0xB5, 0xFC, 0x2E, 0x35,  /* 4P.D...5 */
-                /* 1F58 */  0x50, 0x02, 0x22, 0x30, 0x67, 0x02, 0xA2, 0x39,  /* P."0g..9 */
-                /* 1F60 */  0x41, 0xA8, 0x0A, 0xFD, 0xC3, 0xA0, 0x20, 0x02,  /* A..... . */
-                /* 1F68 */  0x72, 0x0A, 0x10, 0x9A, 0x0A, 0x8C, 0xEA, 0xF0,  /* r....... */
-                /* 1F70 */  0x3F, 0x00, 0x0A, 0x42, 0xB5, 0x82, 0xE8, 0x70,  /* ?..B...p */
-                /* 1F78 */  0x41, 0x12, 0x80, 0xB0, 0xA4, 0x20, 0x34, 0x45,  /* A.... 4E */
-                /* 1F80 */  0x83, 0x83, 0x09, 0x8D, 0x00, 0x48, 0x2B, 0x1C,  /* .....H+. */
-                /* 1F88 */  0x6E, 0x68, 0x08, 0x70, 0x16, 0x0A, 0x84, 0x06,  /* nh.p.... */
-                /* 1F90 */  0x05, 0xD1, 0xB1, 0xC5, 0xA9, 0x41, 0x04, 0x68,  /* .....A.h */
-                /* 1F98 */  0x81, 0x25, 0x0E, 0x20, 0x14, 0x84, 0xFE, 0xFF,  /* .%. .... */
-                /* 1FA0 */  0x03, 0x80, 0x08, 0xD0, 0x69, 0x40, 0x74, 0x44,  /* ....i@tD */
-                /* 1FA8 */  0x20, 0x60, 0x54, 0x47, 0x8A, 0x21, 0x51, 0x10,  /*  `TG.!Q. */
-                /* 1FB0 */  0x01, 0x5A, 0x28, 0x88, 0x8E, 0x3E, 0xA4, 0x05,  /* .Z(..>.. */
-                /* 1FB8 */  0x18, 0x13, 0x05, 0x42, 0xC5, 0x83, 0x50, 0xAD,  /* ...B..P. */
-                /* 1FC0 */  0x31, 0x40, 0x99, 0x72, 0x10, 0x81, 0x3A, 0x39,  /* 1@.r..:9 */
-                /* 1FC8 */  0x88, 0x8E, 0x04, 0xA4, 0xC6, 0xA1, 0x82, 0x82,  /* ........ */
-                /* 1FD0 */  0x50, 0xD5, 0x20, 0x54, 0x4E, 0x0E, 0x10, 0x26,  /* P. TN..& */
-                /* 1FD8 */  0x0D, 0x84, 0xCA, 0x05, 0xD1, 0x00, 0xAC, 0x1D,  /* ........ */
-                /* 1FE0 */  0x44, 0xC7, 0x26, 0x02, 0x46, 0xE3, 0x83, 0x50,  /* D.&.F..P */
-                /* 1FE8 */  0x49, 0x3D, 0x00, 0x99, 0x3E, 0x10, 0x01, 0x3A,  /* I=..>..: */
-                /* 1FF0 */  0x3D, 0x88, 0x0E, 0x03, 0x24, 0xC8, 0x41, 0x84,  /* =...$.A. */
-                /* 1FF8 */  0x82, 0x50, 0x89, 0x45, 0x40, 0x99, 0x60, 0x10,  /* .P.E@.`. */
-                /* 2000 */  0x1D, 0x7F, 0x08, 0x88, 0xC0, 0x2C, 0x23, 0x09,  /* .....,#. */
-                /* 2008 */  0x08, 0x13, 0x07, 0x42, 0xC5, 0x82, 0x50, 0x21,  /* ...B..P! */
-                /* 2010 */  0x51, 0x40, 0x59, 0x0C, 0x10, 0x1A, 0x24, 0x0B,  /* Q@Y...$. */
-                /* 2018 */  0x18, 0x0B, 0x07, 0x42, 0xC3, 0x82, 0xE8, 0x78,  /* ...B...x */
-                /* 2020 */  0x45, 0xBA, 0x00, 0x31, 0xC9, 0x20, 0x34, 0x02,  /* E..1. 4. */
-                /* 2028 */  0x08, 0x0D, 0x0B, 0x22, 0x40, 0x12, 0x06, 0x90,  /* ..."@... */
-                /* 2030 */  0x82, 0xD0, 0x08, 0x20, 0x34, 0x2B, 0x08, 0xD5,  /* ... 4+.. */
-                /* 2038 */  0x5E, 0x06, 0x94, 0x25, 0x06, 0xD1, 0x91, 0x81,  /* ^..%.... */
-                /* 2040 */  0xA4, 0x39, 0x9C, 0x50, 0x10, 0x81, 0x39, 0x0D,  /* .9.P..9. */
-                /* 2048 */  0x10, 0x4D, 0x08, 0x42, 0x13, 0x83, 0x50, 0x79,  /* .M.B..Py */
-                /* 2050 */  0x6D, 0x40, 0x58, 0x7A, 0x10, 0x1D, 0x1F, 0xC8,  /* m@Xz.... */
-                /* 2058 */  0x83, 0x51, 0xC7, 0x07, 0x02, 0x42, 0x53, 0x81,  /* .Q...BS. */
-                /* 2060 */  0xE8, 0xC0, 0x43, 0xEA, 0x1C, 0x78, 0x28, 0x08,  /* ..C..x(. */
-                /* 2068 */  0x55, 0x0F, 0xA2, 0xC3, 0x03, 0x29, 0x04, 0xC2,  /* U....).. */
-                /* 2070 */  0x74, 0x26, 0x3A, 0xD6, 0xD0, 0x46, 0x07, 0x03,  /* t&:..F.. */
-                /* 2078 */  0xFA, 0x08, 0x16, 0xA8, 0xFF, 0xFF, 0x6A, 0x2A,  /* ......j* */
-                /* 2080 */  0x81, 0x30, 0x75, 0x20, 0x54, 0x3F, 0x08, 0xCD,  /* .0u T?.. */
-                /* 2088 */  0x0A, 0x22, 0x50, 0xEB, 0xCB, 0x74, 0x10, 0xA0,  /* ."P..t.. */
-                /* 2090 */  0x20, 0x34, 0x03, 0x88, 0x06, 0x40, 0x80, 0xA8,  /*  4...@.. */
-                /* 2098 */  0x9A, 0x4E, 0x03, 0xA0, 0x20, 0x3A, 0xA4, 0x90,  /* .N.. :.. */
-                /* 20A0 */  0x54, 0xC7, 0x12, 0xDA, 0x0A, 0x84, 0xA5, 0x05,  /* T....... */
-                /* 20A8 */  0xA1, 0xC2, 0x7A, 0x81, 0x32, 0x91, 0x20, 0x54,  /* ..z.2. T */
-                /* 20B0 */  0x38, 0x88, 0x8E, 0x06, 0x4E, 0x01, 0xA2, 0xA3,  /* 8...N... */
-                /* 20B8 */  0x0A, 0x01, 0xA3, 0xD9, 0x41, 0xA8, 0x9E, 0x60,  /* ....A..` */
-                /* 20C0 */  0x80, 0x4C, 0x1C, 0x88, 0x00, 0x9D, 0x04, 0x44,  /* .L.....D */
-                /* 20C8 */  0x83, 0x25, 0x20, 0x34, 0x29, 0x20, 0x8D, 0x0D,  /* .% 4) .. */
-                /* 20D0 */  0x48, 0xA5, 0x16, 0x3B, 0x46, 0x51, 0x10, 0x1A,  /* H..;FQ.. */
-                /* 20D8 */  0x05, 0x44, 0x80, 0xCE, 0x05, 0xA2, 0xC3, 0x1C,  /* .D...... */
-                /* 20E0 */  0x49, 0x76, 0xCA, 0xA4, 0x20, 0x54, 0x2C, 0x88,  /* Iv.. T,. */
-                /* 20E8 */  0x0E, 0x17, 0x04, 0x44, 0x80, 0x8E, 0x0A, 0x46,  /* ...D...F */
-                /* 20F0 */  0x63, 0x83, 0x50, 0x29, 0xCD, 0x00, 0x99, 0x2E,  /* c.P).... */
-                /* 20F8 */  0x10, 0x01, 0x3A, 0x35, 0x88, 0xC0, 0xAC, 0x21,  /* ..:5...! */
-                /* 2100 */  0xDA, 0x21, 0x81, 0x82, 0xD0, 0x68, 0xD9, 0x40,  /* .!...h.@ */
-                /* 2108 */  0x59, 0x50, 0x10, 0x1D, 0xED, 0x48, 0x37, 0x30,  /* YP...H70 */
-                /* 2110 */  0x26, 0x1F, 0x84, 0x86, 0x02, 0xA1, 0x21, 0x41,  /* &.....!A */
-                /* 2118 */  0x68, 0x80, 0x72, 0x87, 0x38, 0x0A, 0x42, 0xE5,  /* h.r.8.B. */
-                /* 2120 */  0xD4, 0x03, 0x61, 0x61, 0x40, 0xA8, 0xD0, 0x7C,  /* ..aa@..| */
-                /* 2128 */  0x47, 0x3B, 0xDA, 0x0F, 0x90, 0x06, 0x04, 0x61,  /* G;.....a */
-                /* 2130 */  0xF1, 0x40, 0xE8, 0xFF, 0x1F                     /* .@... */
+                /* 0000 */   0x46, 0x4F, 0x4D, 0x42, 0x01, 0x00, 0x00, 0x00,
+                /* 0008 */   0x25, 0x21, 0x00, 0x00, 0xB0, 0xCB, 0x00, 0x00,
+                /* 0010 */   0x44, 0x53, 0x00, 0x01, 0x1A, 0x7D, 0xDA, 0x54,
+                /* 0018 */   0x28, 0x27, 0xA1, 0x00, 0x01, 0x06, 0x18, 0x42,
+                /* 0020 */   0x10, 0x4D, 0x10, 0x92, 0x46, 0x62, 0x02, 0x89,
+                /* 0028 */   0x80, 0x90, 0x18, 0x18, 0x14, 0x81, 0x85, 0x00,
+                /* 0030 */   0x49, 0x02, 0x88, 0xC4, 0x41, 0xE1, 0x20, 0xD4,
+                /* 0038 */   0x9F, 0x40, 0x7E, 0x05, 0x20, 0x74, 0x28, 0x40,
+                /* 0040 */   0xA6, 0x00, 0x83, 0x02, 0x9C, 0x22, 0x88, 0xA0,
+                /* 0048 */   0x57, 0x01, 0x36, 0x05, 0x98, 0x14, 0x60, 0x51,
+                /* 0050 */   0x80, 0x76, 0x01, 0x96, 0x05, 0xE8, 0x16, 0x20,
+                /* 0058 */   0x1D, 0x96, 0x88, 0x04, 0x47, 0x89, 0x01, 0x47,
+                /* 0060 */   0xE9, 0xC4, 0x16, 0x6E, 0xD8, 0xE0, 0x85, 0xA2,
+                /* 0068 */   0x68, 0x06, 0x51, 0x12, 0x94, 0x8B, 0x20, 0x5D,
+                /* 0070 */   0x10, 0x52, 0x2E, 0xC0, 0x37, 0x82, 0x06, 0x10,
+                /* 0078 */   0xA5, 0x77, 0x01, 0xB6, 0x05, 0x98, 0x86, 0x27,
+                /* 0080 */   0xD2, 0x20, 0xE4, 0x60, 0x08, 0x54, 0xCE, 0x80,
+                /* 0088 */   0x20, 0x69, 0x44, 0x21, 0x1E, 0xA7, 0x44, 0x08,
+                /* 0090 */   0x0A, 0x84, 0x90, 0xD4, 0xF1, 0xA0, 0xA0, 0x71,
+                /* 0098 */   0x88, 0xAD, 0xCE, 0x46, 0x93, 0xA9, 0x74, 0x7E,
+                /* 00A0 */   0x48, 0x82, 0x70, 0xC6, 0x2A, 0x7E, 0x3A, 0x9A,
+                /* 00A8 */   0xD0, 0xD9, 0x9C, 0x60, 0xE7, 0x18, 0x72, 0x3C,
+                /* 00B0 */   0x48, 0xF4, 0x20, 0xB8, 0x00, 0x0F, 0x1C, 0x2C,
+                /* 00B8 */   0x34, 0x84, 0x22, 0x6B, 0x80, 0xC1, 0x8C, 0xDD,
+                /* 00C0 */   0x63, 0xB1, 0x0B, 0x4E, 0x0A, 0xEC, 0x61, 0xB3,
+                /* 00C8 */   0x01, 0x19, 0xA2, 0x24, 0x38, 0xD4, 0x11, 0xC0,
+                /* 00D0 */   0x12, 0x05, 0x98, 0x1F, 0x87, 0x0C, 0x0F, 0x95,
+                /* 00D8 */   0x8C, 0x25, 0x24, 0x1B, 0xAB, 0x87, 0xC2, 0xA5,
+                /* 00E0 */   0x40, 0x68, 0x6C, 0x27, 0xED, 0x19, 0x45, 0x2C,
+                /* 00E8 */   0x79, 0x4A, 0x82, 0x49, 0xE0, 0x51, 0x44, 0x36,
+                /* 00F0 */   0x1A, 0x27, 0x28, 0x1B, 0x1A, 0x25, 0x03, 0x42,
+                /* 00F8 */   0x9E, 0x05, 0x58, 0x07, 0x26, 0x04, 0x76, 0x2F,
+                /* 0100 */   0xC0, 0x9A, 0x00, 0x73, 0xB3, 0x90, 0xB1, 0xB9,
+                /* 0108 */   0xE8, 0xFF, 0x0F, 0x71, 0xB0, 0x31, 0xDA, 0x9A,
+                /* 0110 */   0xAE, 0x90, 0xC2, 0xC4, 0x88, 0x12, 0x2C, 0x5E,
+                /* 0118 */   0xC5, 0xC3, 0x10, 0xCA, 0x93, 0x42, 0xA8, 0x48,
+                /* 0120 */   0x95, 0xA1, 0x68, 0xB4, 0x51, 0x2A, 0x14, 0xE0,
+                /* 0128 */   0x4C, 0x80, 0x30, 0x5C, 0x1D, 0x03, 0x82, 0x46,
+                /* 0130 */   0x88, 0x15, 0x29, 0x56, 0xFB, 0x83, 0x20, 0xF1,
+                /* 0138 */   0x2D, 0x40, 0x54, 0x01, 0xA2, 0x48, 0xA3, 0x41,
+                /* 0140 */   0x9D, 0x03, 0x3C, 0x5C, 0x0F, 0xF5, 0xF0, 0x3D,
+                /* 0148 */   0xF6, 0x93, 0x0C, 0x72, 0x90, 0x67, 0xF1, 0xA8,
+                /* 0150 */   0x70, 0x9C, 0x06, 0x49, 0xE0, 0x0B, 0x80, 0x4F,
+                /* 0158 */   0x08, 0x1E, 0x38, 0xDE, 0x35, 0xA0, 0x66, 0x7C,
+                /* 0160 */   0xBC, 0x4C, 0x10, 0x1C, 0x6A, 0x88, 0x1E, 0x68,
+                /* 0168 */   0xB8, 0x13, 0x38, 0x44, 0x06, 0xE8, 0x49, 0x3D,
+                /* 0170 */   0x52, 0x60, 0x07, 0x77, 0x32, 0xEF, 0x01, 0xAF,
+                /* 0178 */   0x0A, 0xCD, 0x5E, 0x12, 0x08, 0xC1, 0xF1, 0xF8,
+                /* 0180 */   0x7E, 0xC0, 0x26, 0x9C, 0xC0, 0xF2, 0x07, 0x81,
+                /* 0188 */   0x1A, 0x99, 0xA1, 0x3D, 0xCA, 0xD3, 0x8A, 0x19,
+                /* 0190 */   0xF2, 0x31, 0xC1, 0x04, 0x16, 0x0B, 0x21, 0x05,
+                /* 0198 */   0x10, 0x1A, 0x0F, 0xF8, 0x6F, 0x00, 0x8F, 0x17,
+                /* 01A0 */   0xBE, 0x12, 0xC4, 0xF6, 0x80, 0x12, 0x0C, 0x0B,
+                /* 01A8 */   0x21, 0x23, 0xAB, 0xF0, 0x78, 0xE8, 0x28, 0x7C,
+                /* 01B0 */   0x95, 0x38, 0x9C, 0xD3, 0x8A, 0x67, 0x82, 0xE1,
+                /* 01B8 */   0x20, 0xF4, 0x05, 0x90, 0x00, 0x51, 0xE7, 0x0C,
+                /* 01C0 */   0xD4, 0x61, 0xC1, 0xE7, 0x04, 0x76, 0x33, 0x38,
+                /* 01C8 */   0x83, 0x47, 0x00, 0x8F, 0xE4, 0x84, 0xFC, 0x2B,
+                /* 01D0 */   0xF1, 0xC0, 0xE0, 0x03, 0xE2, 0xEF, 0x1F, 0xA7,
+                /* 01D8 */   0xEC, 0x11, 0x9C, 0xA9, 0x01, 0x7D, 0x1C, 0xF0,
+                /* 01E0 */   0xFF, 0x7F, 0x28, 0x7C, 0x88, 0x1E, 0xDF, 0x29,
+                /* 01E8 */   0x1F, 0xAF, 0x4F, 0x17, 0x96, 0x35, 0x4E, 0xE8,
+                /* 01F0 */   0x77, 0x08, 0x9F, 0x38, 0x7C, 0x64, 0x71, 0x44,
+                /* 01F8 */   0x08, 0x39, 0x39, 0x05, 0xA0, 0x81, 0x4F, 0xF7,
+                /* 0200 */   0xEC, 0x22, 0x9C, 0xAE, 0x27, 0xE5, 0x40, 0xC3,
+                /* 0208 */   0xA0, 0xE3, 0x04, 0xC7, 0x79, 0x00, 0x1C, 0xE3,
+                /* 0210 */   0x84, 0x7F, 0x2E, 0x80, 0x3F, 0x40, 0x7E, 0xCA,
+                /* 0218 */   0x78, 0xC5, 0x48, 0xE0, 0x98, 0x23, 0x44, 0x9F,
+                /* 0220 */   0x6B, 0x3C, 0x42, 0x2C, 0xFC, 0x53, 0x45, 0xE1,
+                /* 0228 */   0x03, 0x21, 0x63, 0x04, 0x17, 0xA0, 0xC7, 0x08,
+                /* 0230 */   0x7C, 0x03, 0x8E, 0x11, 0x7D, 0x94, 0xE0, 0xEA,
+                /* 0238 */   0x0F, 0x1A, 0x74, 0x80, 0xB8, 0xFF, 0xFF, 0x00,
+                /* 0240 */   0xE1, 0x83, 0x7A, 0x80, 0xC0, 0x37, 0xFA, 0xD1,
+                /* 0248 */   0x03, 0x3D, 0x2E, 0x8B, 0x3E, 0x0F, 0xC8, 0xF8,
+                /* 0250 */   0x89, 0x46, 0xF3, 0xE2, 0xA7, 0x03, 0x7E, 0xF8,
+                /* 0258 */   0x00, 0x0F, 0xA8, 0x87, 0x84, 0x03, 0xC5, 0x4C,
+                /* 0260 */   0x9B, 0x83, 0x3E, 0xBB, 0x1C, 0x3A, 0x76, 0xB8,
+                /* 0268 */   0xE0, 0x3F, 0x81, 0x80, 0x4B, 0xDE, 0x21, 0x0C,
+                /* 0270 */   0x14, 0x23, 0xC6, 0x9F, 0x83, 0x7C, 0x0A, 0x03,
+                /* 0278 */   0xFF, 0xFF, 0xFF, 0x14, 0x06, 0xFE, 0xE1, 0xF0,
+                /* 0280 */   0x20, 0x4F, 0x07, 0x9F, 0xB6, 0xA8, 0x74, 0x18,
+                /* 0288 */   0xD4, 0x81, 0x0B, 0xB0, 0x32, 0x89, 0x08, 0xCF,
+                /* 0290 */   0x12, 0xB5, 0x41, 0xE8, 0xD4, 0xF0, 0x36, 0xF1,
+                /* 0298 */   0xB6, 0xE5, 0x5B, 0x40, 0x9C, 0xD3, 0xEC, 0xED,
+                /* 02A0 */   0xC0, 0x45, 0x30, 0x22, 0xD4, 0x0C, 0x45, 0x4E,
+                /* 02A8 */   0x5A, 0x11, 0x63, 0x44, 0x79, 0xDC, 0x32, 0xCA,
+                /* 02B0 */   0xDB, 0xD6, 0x0B, 0x40, 0xBC, 0x13, 0x7B, 0xDE,
+                /* 02B8 */   0x32, 0x46, 0xF0, 0xC8, 0x0F, 0x5C, 0x2C, 0xC6,
+                /* 02C0 */   0xEA, 0xF5, 0x5F, 0xF3, 0x81, 0x0B, 0x70, 0xF6,
+                /* 02C8 */   0xFF, 0x3F, 0x70, 0x01, 0x1C, 0x0A, 0x7A, 0x18,
+                /* 02D0 */   0x42, 0x0F, 0xC3, 0x53, 0x39, 0x97, 0x87, 0xC8,
+                /* 02D8 */   0x53, 0x89, 0x18, 0x35, 0x4C, 0xD4, 0x67, 0x28,
+                /* 02E0 */   0xDF, 0x2D, 0x7C, 0x20, 0x02, 0xDF, 0x99, 0x0B,
+                /* 02E8 */   0xF8, 0xFD, 0xFF, 0x0F, 0x44, 0x70, 0x8E, 0x29,
+                /* 02F0 */   0xB8, 0x33, 0x0D, 0x78, 0x7C, 0xCE, 0x40, 0x20,
+                /* 02F8 */   0xA7, 0xE2, 0x43, 0x0D, 0x60, 0x41, 0xF4, 0x13,
+                /* 0300 */   0xC2, 0x27, 0x1A, 0x2A, 0x13, 0x06, 0x75, 0xA8,
+                /* 0308 */   0x01, 0xAC, 0x5C, 0x61, 0x9E, 0x46, 0xCF, 0xF9,
+                /* 0310 */   0x59, 0xC6, 0xA7, 0x1A, 0x1F, 0x4A, 0x8D, 0x63,
+                /* 0318 */   0x88, 0x97, 0x99, 0x87, 0x1A, 0x1F, 0x0B, 0x5E,
+                /* 0320 */   0x49, 0x7D, 0xA8, 0x31, 0x54, 0x9C, 0x87, 0x1A,
+                /* 0328 */   0x0F, 0x37, 0x50, 0xD4, 0x37, 0x9B, 0x67, 0x1B,
+                /* 0330 */   0xA3, 0xC7, 0xF7, 0x0D, 0xD5, 0x10, 0x0F, 0x35,
+                /* 0338 */   0x4C, 0xF2, 0x4A, 0x35, 0x16, 0x1F, 0x6A, 0xC0,
+                /* 0340 */   0xF1, 0xFF, 0x3F, 0xD4, 0x00, 0xFC, 0xFF, 0xFF,
+                /* 0348 */   0x1F, 0x6A, 0x00, 0x47, 0x47, 0x03, 0x38, 0x47,
+                /* 0350 */   0x46, 0xDC, 0xD1, 0x00, 0x5C, 0x87, 0x52, 0xE0,
+                /* 0358 */   0x70, 0x34, 0x00, 0x1E, 0x47, 0x21, 0x30, 0x5F,
+                /* 0360 */   0x68, 0x7C, 0x14, 0x02, 0x16, 0xFF, 0xFF, 0xA3,
+                /* 0368 */   0x10, 0xF8, 0x65, 0x9F, 0x83, 0x50, 0x42, 0x8F,
+                /* 0370 */   0x42, 0x80, 0xA0, 0xDB, 0xCF, 0x53, 0xC4, 0xB3,
+                /* 0378 */   0x8F, 0x2F, 0x3F, 0x0F, 0x04, 0x11, 0x5E, 0xF3,
+                /* 0380 */   0x7D, 0x0A, 0xF2, 0x21, 0xDF, 0x47, 0x21, 0x06,
+                /* 0388 */   0x63, 0x28, 0x5F, 0x83, 0x7C, 0x14, 0x62, 0x50,
+                /* 0390 */   0xAF, 0x41, 0xBE, 0xEF, 0x1B, 0xE4, 0xF1, 0x22,
+                /* 0398 */   0x48, 0xEC, 0x67, 0x02, 0x1F, 0x85, 0x98, 0xE8,
+                /* 03A0 */   0xA3, 0x10, 0xA0, 0xF0, 0xFF, 0x7F, 0x14, 0x02,
+                /* 03A8 */   0xF8, 0xFF, 0xFF, 0x3F, 0x0A, 0x01, 0xCE, 0x02,
+                /* 03B0 */   0x1C, 0x0D, 0x40, 0x37, 0xAD, 0x47, 0x21, 0xF0,
+                /* 03B8 */   0xDE, 0x59, 0x4E, 0xFB, 0x04, 0x7C, 0x16, 0x02,
+                /* 03C0 */   0xCC, 0xFE, 0xFF, 0xCF, 0x42, 0xC0, 0xEC, 0x28,
+                /* 03C8 */   0x74, 0x14, 0x67, 0xF9, 0x2A, 0xF4, 0x04, 0xF0,
+                /* 03D0 */   0x02, 0x10, 0x23, 0xCC, 0x3B, 0xD0, 0x4B, 0x26,
+                /* 03D8 */   0xBB, 0x8B, 0x1B, 0xE7, 0xC9, 0xE5, 0x2C, 0x9E,
+                /* 03E0 */   0xC4, 0x7D, 0x09, 0xF2, 0x81, 0xE2, 0x59, 0xC8,
+                /* 03E8 */   0x50, 0xA7, 0x1B, 0xF4, 0x8D, 0xDC, 0x03, 0x8B,
+                /* 03F0 */   0x19, 0x3F, 0xC4, 0xF3, 0x90, 0x21, 0x9E, 0x85,
+                /* 03F8 */   0x00, 0x76, 0xFD, 0xFF, 0xCF, 0x42, 0x00, 0xFF,
+                /* 0400 */   0xFF, 0xFF, 0x47, 0x03, 0xF8, 0x2F, 0x00, 0x9F,
+                /* 0408 */   0x85, 0x80, 0xE7, 0x09, 0xE0, 0x41, 0xDB, 0x67,
+                /* 0410 */   0x21, 0x80, 0x33, 0x87, 0xCB, 0xF3, 0x7F, 0x05,
+                /* 0418 */   0x3A, 0x96, 0xF7, 0x08, 0xCF, 0xFA, 0x24, 0x5F,
+                /* 0420 */   0x2F, 0x3D, 0xD3, 0x87, 0x82, 0x67, 0x21, 0x86,
+                /* 0428 */   0x75, 0x18, 0x3E, 0x0B, 0x31, 0x88, 0x17, 0x4D,
+                /* 0430 */   0x43, 0xBC, 0x70, 0xFA, 0x30, 0xE0, 0xFF, 0x3F,
+                /* 0438 */   0x5E, 0xE0, 0x57, 0x4E, 0x03, 0x05, 0x09, 0xF4,
+                /* 0440 */   0x2C, 0x04, 0x30, 0xFE, 0xFF, 0x7F, 0x16, 0x02,
+                /* 0448 */   0xC8, 0xB8, 0x46, 0x9D, 0x85, 0x80, 0xE5, 0x6D,
+                /* 0450 */   0xE5, 0x19, 0xDB, 0xA7, 0x95, 0x04, 0xFF, 0xFF,
+                /* 0458 */   0x67, 0x21, 0xC0, 0x41, 0x2E, 0x23, 0x07, 0x21,
+                /* 0460 */   0x4C, 0xC4, 0x87, 0x83, 0x8F, 0x99, 0x80, 0x9E,
+                /* 0468 */   0x29, 0xBE, 0xB8, 0x1B, 0xE3, 0x09, 0xE0, 0x45,
+                /* 0470 */   0xE2, 0x31, 0x93, 0x1D, 0x35, 0x0D, 0xF3, 0x2C,
+                /* 0478 */   0x64, 0xBC, 0xB3, 0x78, 0x0D, 0x78, 0x82, 0xF7,
+                /* 0480 */   0xE4, 0x9F, 0x85, 0x18, 0xD8, 0x61, 0x05, 0x7B,
+                /* 0488 */   0x14, 0x32, 0xA8, 0xC1, 0x63, 0x87, 0x08, 0x13,
+                /* 0490 */   0xE8, 0x59, 0x88, 0xC5, 0x7D, 0xAE, 0xE8, 0x3C,
+                /* 0498 */   0xE1, 0xB3, 0x10, 0xF0, 0xFE, 0xFF, 0x9F, 0x25,
+                /* 04A0 */   0xE0, 0x5E, 0x0D, 0x9E, 0x85, 0x00, 0x13, 0x87,
+                /* 04A8 */   0x0D, 0x9F, 0x35, 0xC0, 0x33, 0x7C, 0x8F, 0xEA,
+                /* 04B0 */   0x1C, 0x1E, 0x8F, 0x81, 0x7F, 0x56, 0x1D, 0xE7,
+                /* 04B8 */   0x04, 0x96, 0x7B, 0xD1, 0xB2, 0x71, 0xA0, 0xA1,
+                /* 04C0 */   0x23, 0xB2, 0x3A, 0x20, 0x8D, 0x0D, 0x73, 0x29,
+                /* 04C8 */   0x89, 0x7C, 0x72, 0x6C, 0xD4, 0x56, 0x04, 0xA7,
+                /* 04D0 */   0x33, 0x93, 0x4F, 0x00, 0xD6, 0x42, 0x21, 0x05,
+                /* 04D8 */   0x34, 0x1A, 0x8B, 0xE1, 0x9D, 0xF9, 0xE8, 0x44,
+                /* 04E0 */   0x41, 0x0C, 0xE8, 0xE3, 0x90, 0x6D, 0x1C, 0x0A,
+                /* 04E8 */   0x50, 0x7B, 0xD1, 0x14, 0xC8, 0x39, 0x07, 0xA3,
+                /* 04F0 */   0x7F, 0x76, 0x74, 0x36, 0xBE, 0x13, 0x70, 0x0D,
+                /* 04F8 */   0x10, 0x3A, 0x25, 0x18, 0xDA, 0x6A, 0x04, 0xFC,
+                /* 0500 */   0xFF, 0x67, 0x89, 0x01, 0x33, 0xFE, 0x53, 0x8C,
+                /* 0508 */   0x09, 0x7C, 0x8E, 0xC1, 0x1F, 0x0C, 0xF0, 0x03,
+                /* 0510 */   0x7F, 0x31, 0xA8, 0xFA, 0x5E, 0xA0, 0xFB, 0x82,
+                /* 0518 */   0xD5, 0xDD, 0x64, 0x20, 0xCC, 0xC8, 0x04, 0xF5,
+                /* 0520 */   0x9D, 0x0E, 0x40, 0x01, 0xE4, 0x0B, 0x81, 0xCF,
+                /* 0528 */   0x51, 0x0F, 0x05, 0x6C, 0x22, 0x21, 0xC2, 0x44,
+                /* 0530 */   0x33, 0x3A, 0x62, 0xC2, 0xA8, 0xE8, 0x13, 0xA6,
+                /* 0538 */   0x20, 0x9E, 0xB0, 0x63, 0x4D, 0x18, 0x3D, 0x13,
+                /* 0540 */   0x5F, 0x74, 0xD8, 0x88, 0x31, 0x21, 0xAE, 0x1E,
+                /* 0548 */   0xD0, 0x26, 0x18, 0xD4, 0x97, 0x22, 0x58, 0x43,
+                /* 0550 */   0xE6, 0x63, 0xF1, 0x05, 0x02, 0x37, 0x65, 0x30,
+                /* 0558 */   0xCE, 0x89, 0x5D, 0x13, 0x7C, 0xD9, 0xC1, 0xCD,
+                /* 0560 */   0x19, 0x8C, 0xF0, 0x98, 0xBB, 0x18, 0xBF, 0x3A,
+                /* 0568 */   0x79, 0x74, 0xFC, 0xA0, 0xE0, 0x1B, 0x0E, 0xC3,
+                /* 0570 */   0x7E, 0x32, 0xF3, 0x8C, 0xDE, 0xCB, 0x7C, 0x8D,
+                /* 0578 */   0xC3, 0xC0, 0x7A, 0xBC, 0x1C, 0xD6, 0x68, 0x61,
+                /* 0580 */   0x0F, 0xED, 0x3D, 0xC4, 0xFF, 0xFF, 0x43, 0x8C,
+                /* 0588 */   0xCF, 0x13, 0xC6, 0x08, 0xEB, 0xDB, 0x0B, 0x38,
+                /* 0590 */   0xEE, 0x59, 0xF0, 0xEF, 0x1A, 0xE0, 0xB9, 0x84,
+                /* 0598 */   0xF8, 0xAE, 0x01, 0x30, 0xF0, 0xFF, 0x7F, 0xD7,
+                /* 05A0 */   0x00, 0x4E, 0xD7, 0x04, 0xDF, 0x35, 0x80, 0xF7,
+                /* 05A8 */   0xD0, 0x7D, 0xD7, 0x00, 0xAE, 0xD9, 0xEF, 0x1A,
+                /* 05B0 */   0xA8, 0x63, 0x80, 0x15, 0xDE, 0x35, 0xA0, 0x5D,
+                /* 05B8 */   0xD9, 0xDE, 0xD7, 0x9E, 0xB0, 0xAC, 0xE9, 0xB2,
+                /* 05C0 */   0x81, 0x52, 0x73, 0xD9, 0x00, 0x14, 0xFC, 0xFF,
+                /* 05C8 */   0x2F, 0x1B, 0x80, 0x01, 0x29, 0x13, 0x46, 0x85,
+                /* 05D0 */   0x9F, 0x30, 0x05, 0xF1, 0x84, 0x1D, 0xEC, 0xB2,
+                /* 05D8 */   0x01, 0x8A, 0x18, 0x97, 0x0D, 0xD0, 0x8F, 0xED,
+                /* 05E0 */   0x65, 0x03, 0x18, 0xDC, 0x13, 0xF8, 0x6D, 0x03,
+                /* 05E8 */   0x78, 0x43, 0xFA, 0xB6, 0x01, 0xD6, 0xFF, 0xFF,
+                /* 05F0 */   0x6D, 0x03, 0xAC, 0xF9, 0x6F, 0x1B, 0x28, 0x0E,
+                /* 05F8 */   0xAB, 0xBC, 0x6D, 0x40, 0x3C, 0xC9, 0x33, 0x02,
+                /* 0600 */   0xAB, 0xBA, 0x6E, 0xA0, 0xF4, 0x5C, 0x37, 0x00,
+                /* 0608 */   0x12, 0x88, 0x99, 0x30, 0x2A, 0xFE, 0x84, 0x29,
+                /* 0610 */   0x88, 0x27, 0xEC, 0x68, 0xD7, 0x0D, 0x50, 0x04,
+                /* 0618 */   0xB9, 0x6E, 0x80, 0x7E, 0x5E, 0x09, 0xFE, 0xFF,
+                /* 0620 */   0xAF, 0x1B, 0xC0, 0xE0, 0xA2, 0x80, 0xB9, 0x6F,
+                /* 0628 */   0x00, 0x6F, 0x58, 0x7E, 0xDF, 0x00, 0x7C, 0xDC,
+                /* 0630 */   0xC4, 0x31, 0xF7, 0x0D, 0xC0, 0xCC, 0xFF, 0xFF,
+                /* 0638 */   0xBE, 0x01, 0xB0, 0xE7, 0xA2, 0x80, 0xBB, 0x6F,
+                /* 0640 */   0x00, 0xEF, 0x8B, 0xB4, 0xEF, 0x1B, 0x60, 0xFE,
+                /* 0648 */   0xFF, 0xDF, 0x37, 0xC0, 0x28, 0x6D, 0xFD, 0x1E,
+                /* 0650 */   0x1C, 0x3D, 0x21, 0x78, 0x7C, 0xB8, 0xFB, 0xA5,
+                /* 0658 */   0xC7, 0xE7, 0xBB, 0x39, 0x38, 0x06, 0x79, 0x8C,
+                /* 0660 */   0x87, 0x76, 0xC0, 0xAF, 0xEF, 0x9E, 0x98, 0xEF,
+                /* 0668 */   0xE6, 0xC0, 0xFF, 0x4C, 0x70, 0x3C, 0x18, 0x68,
+                /* 0670 */   0x1C, 0x62, 0xAB, 0x97, 0x06, 0x72, 0x34, 0x38,
+                /* 0678 */   0x3F, 0xDC, 0x19, 0x81, 0x61, 0x15, 0x7F, 0xF2,
+                /* 0680 */   0x47, 0x38, 0xC7, 0xD0, 0xD9, 0xE1, 0x20, 0xB1,
+                /* 0688 */   0x83, 0xE0, 0xC1, 0x56, 0x6D, 0x02, 0x85, 0x86,
+                /* 0690 */   0x50, 0x14, 0x18, 0x14, 0x8B, 0x0F, 0x18, 0xF8,
+                /* 0698 */   0x61, 0xB3, 0xB3, 0x00, 0x93, 0x04, 0x87, 0x3A,
+                /* 06A0 */   0x02, 0xF8, 0x3E, 0xD1, 0xFC, 0x38, 0x74, 0x37,
+                /* 06A8 */   0x38, 0x54, 0x8F, 0xE5, 0xA1, 0x80, 0x9E, 0x01,
+                /* 06B0 */   0x71, 0xC7, 0x0C, 0x32, 0x69, 0xCF, 0x28, 0xE2,
+                /* 06B8 */   0x53, 0xC2, 0x29, 0x85, 0x49, 0xE0, 0xF3, 0x03,
+                /* 06C0 */   0x43, 0xE3, 0x04, 0xAF, 0x0D, 0xA1, 0xF9, 0xFF,
+                /* 06C8 */   0xFF, 0xA4, 0xC0, 0x3C, 0xDF, 0x31, 0x04, 0x6C,
+                /* 06D0 */   0x02, 0xBB, 0xBF, 0x64, 0xC8, 0xDA, 0xC0, 0x75,
+                /* 06D8 */   0x4B, 0x32, 0x44, 0x6F, 0x38, 0xB2, 0x85, 0xA2,
+                /* 06E0 */   0xE9, 0x44, 0x79, 0xDF, 0x88, 0x62, 0x67, 0x08,
+                /* 06E8 */   0xC2, 0x88, 0x12, 0x2C, 0xC8, 0xA3, 0x42, 0xAC,
+                /* 06F0 */   0x28, 0x2F, 0x05, 0x46, 0x88, 0x18, 0xE2, 0x95,
+                /* 06F8 */   0x23, 0xD0, 0x09, 0x87, 0x0F, 0xF2, 0xD8, 0x14,
+                /* 0700 */   0xA7, 0xFD, 0x41, 0x90, 0x58, 0x4F, 0x02, 0x8D,
+                /* 0708 */   0xC5, 0x91, 0x46, 0x83, 0x3A, 0x07, 0x78, 0xB8,
+                /* 0710 */   0x3E, 0xC4, 0x78, 0xF8, 0x0F, 0x21, 0x06, 0x39,
+                /* 0718 */   0xC8, 0x73, 0x7B, 0x54, 0x38, 0x4E, 0x5F, 0x25,
+                /* 0720 */   0x4C, 0xF0, 0x02, 0xE0, 0x83, 0x0A, 0x1C, 0xD7,
+                /* 0728 */   0x80, 0x9A, 0xF1, 0x33, 0x06, 0x58, 0x8E, 0xE3,
+                /* 0730 */   0x3E, 0xA9, 0xC0, 0x1D, 0x8F, 0xEF, 0x07, 0x6C,
+                /* 0738 */   0xC2, 0x09, 0x2C, 0x7F, 0x10, 0xA8, 0xE3, 0x0C,
+                /* 0740 */   0x9F, 0xE7, 0x0B, 0x8B, 0x21, 0x1F, 0x13, 0x4C,
+                /* 0748 */   0x60, 0xB1, 0x27, 0x1B, 0x3A, 0x1E, 0xF0, 0xDF,
+                /* 0750 */   0x63, 0x1E, 0x2F, 0x7C, 0x32, 0xF1, 0x7C, 0x4D,
+                /* 0758 */   0x30, 0x22, 0x84, 0x9C, 0x8C, 0x07, 0x7D, 0x87,
+                /* 0760 */   0xC0, 0x5C, 0x6F, 0xD8, 0xB9, 0x85, 0x8B, 0x3A,
+                /* 0768 */   0x68, 0xA0, 0x4E, 0x0B, 0x3E, 0x28, 0xB0, 0x9B,
+                /* 0770 */   0x11, 0xE6, 0xB8, 0xCE, 0xCF, 0x2A, 0x60, 0xF8,
+                /* 0778 */   0xFF, 0x9F, 0x55, 0x60, 0x8F, 0x10, 0xFE, 0xED,
+                /* 0780 */   0xC1, 0xF3, 0xF2, 0x95, 0xE1, 0xD5, 0x21, 0x81,
+                /* 0788 */   0x43, 0x8E, 0x10, 0x3D, 0x2E, 0x8F, 0x10, 0x73,
+                /* 0790 */   0x3E, 0xC2, 0x0C, 0x11, 0x5C, 0x67, 0x01, 0x70,
+                /* 0798 */   0x0C, 0x11, 0xF8, 0x1C, 0x70, 0xC0, 0x71, 0x69,
+                /* 07A0 */   0xE2, 0x03, 0xF5, 0x01, 0x07, 0x70, 0x70, 0x4D,
+                /* 07A8 */   0xC3, 0x1D, 0x70, 0xC0, 0x71, 0x16, 0x60, 0xFF,
+                /* 07B0 */   0xFF, 0xC3, 0x0D, 0x2C, 0x49, 0x26, 0x0E, 0x23,
+                /* 07B8 */   0x18, 0x11, 0x30, 0x28, 0x02, 0x02, 0xA4, 0xB3,
+                /* 07C0 */   0x80, 0x0F, 0x29, 0x00, 0x1F, 0xAE, 0x0C, 0x0F,
+                /* 07C8 */   0x29, 0xD8, 0x93, 0x86, 0x07, 0x8E, 0x1B, 0x85,
+                /* 07D0 */   0x07, 0x8D, 0x0B, 0x30, 0x68, 0x7A, 0xE2, 0x80,
+                /* 07D8 */   0x7F, 0x4C, 0xF0, 0x19, 0x05, 0x1C, 0xE3, 0x06,
+                /* 07E0 */   0xDF, 0x2A, 0x0C, 0xFC, 0xFF, 0x3F, 0x30, 0xCC,
+                /* 07E8 */   0xE1, 0xC2, 0x63, 0x39, 0x8A, 0xA0, 0x07, 0x1E,
+                /* 07F0 */   0xD4, 0xF7, 0x8C, 0x33, 0xF7, 0x24, 0x8F, 0xD1,
+                /* 07F8 */   0x51, 0x0F, 0x27, 0xF4, 0xE4, 0x85, 0x3B, 0x57,
+                /* 0800 */   0xF9, 0x0A, 0x71, 0x14, 0x18, 0xB8, 0x77, 0x29,
+                /* 0808 */   0x8F, 0xCF, 0x17, 0x2B, 0xC3, 0x63, 0x46, 0xFB,
+                /* 0810 */   0x1E, 0x72, 0xD6, 0x11, 0x02, 0xE2, 0x2F, 0x75,
+                /* 0818 */   0x6C, 0xC0, 0x60, 0x39, 0x18, 0x00, 0x87, 0x01,
+                /* 0820 */   0xE3, 0x13, 0x0D, 0x58, 0x67, 0x1B, 0x3C, 0xF4,
+                /* 0828 */   0x69, 0x31, 0xC4, 0xE3, 0x0B, 0xFB, 0x56, 0x61,
+                /* 0830 */   0x82, 0xEA, 0x41, 0x75, 0x12, 0xF4, 0xD0, 0xC0,
+                /* 0838 */   0x01, 0xE8, 0xA1, 0xC1, 0x3F, 0xB9, 0x90, 0xFB,
+                /* 0840 */   0x2B, 0x1D, 0x82, 0xB5, 0xE2, 0x69, 0xDE, 0x47,
+                /* 0848 */   0x1E, 0xF3, 0xDC, 0xA2, 0xBC, 0x0D, 0x3C, 0x07,
+                /* 0850 */   0xF0, 0xD3, 0x82, 0x87, 0xE3, 0x63, 0x81, 0xC7,
+                /* 0858 */   0xE9, 0x4B, 0x58, 0x82, 0xF7, 0x1A, 0x9F, 0x6C,
+                /* 0860 */   0x1E, 0x5C, 0x58, 0xB2, 0x21, 0xA0, 0x06, 0xEB,
+                /* 0868 */   0x21, 0x60, 0xA6, 0x9A, 0xC0, 0x49, 0x46, 0x80,
+                /* 0870 */   0xCA, 0x00, 0xA1, 0x1B, 0xCB, 0xE9, 0x3E, 0x8B,
+                /* 0878 */   0x84, 0x38, 0xCD, 0x47, 0x99, 0xC7, 0x02, 0x8F,
+                /* 0880 */   0xF5, 0xC1, 0xC0, 0xFF, 0x7F, 0xCD, 0x23, 0xD4,
+                /* 0888 */   0x7D, 0xCD, 0x33, 0x7B, 0x3A, 0xC0, 0xAC, 0x22,
+                /* 0890 */   0xDC, 0x7B, 0xCE, 0x1B, 0x86, 0xD1, 0x9E, 0x2D,
+                /* 0898 */   0x7C, 0xCD, 0x78, 0xD6, 0x34, 0x42, 0x38, 0x76,
+                /* 08A0 */   0x83, 0xF3, 0x48, 0x8C, 0xF0, 0x82, 0xC0, 0x4E,
+                /* 08A8 */   0x0C, 0x0F, 0x30, 0xC6, 0x39, 0x79, 0xC3, 0xFA,
+                /* 08B0 */   0xC2, 0xCB, 0x40, 0x83, 0x19, 0xDB, 0x97, 0x01,
+                /* 08B8 */   0x36, 0x2A, 0xDF, 0x88, 0xC0, 0x97, 0xFC, 0x62,
+                /* 08C0 */   0x00, 0x65, 0x16, 0xBE, 0x9E, 0xF8, 0xA0, 0xC4,
+                /* 08C8 */   0x2E, 0x06, 0x2C, 0xE5, 0xC5, 0x00, 0x54, 0x37,
+                /* 08D0 */   0x0C, 0x5F, 0x0C, 0xE0, 0x5F, 0x89, 0x5E, 0x0C,
+                /* 08D8 */   0xC0, 0x70, 0x71, 0xF2, 0x3D, 0xC0, 0x1E, 0xEE,
+                /* 08E0 */   0xA3, 0x74, 0x9C, 0xBE, 0xFD, 0xBD, 0x19, 0xF8,
+                /* 08E8 */   0x6C, 0xC0, 0x60, 0x3C, 0xC3, 0x30, 0xC6, 0x08,
+                /* 08F0 */   0xE3, 0x51, 0x86, 0x31, 0xC1, 0xDC, 0xB7, 0x03,
+                /* 08F8 */   0xE8, 0x39, 0x87, 0x81, 0x4A, 0x78, 0x3B, 0x80,
+                /* 0900 */   0x72, 0x0E, 0xE8, 0xF2, 0x68, 0x42, 0x4F, 0x01,
+                /* 0908 */   0x4F, 0x07, 0x3E, 0x29, 0x1A, 0xA2, 0xAF, 0xB1,
+                /* 0910 */   0x0A, 0x26, 0x50, 0xC4, 0x07, 0x0D, 0x3E, 0xB5,
+                /* 0918 */   0x28, 0x3E, 0x15, 0x78, 0x2D, 0xCF, 0x4E, 0xE1,
+                /* 0920 */   0xE2, 0x9C, 0x89, 0xA7, 0x6A, 0x38, 0x03, 0xBD,
+                /* 0928 */   0xE6, 0x86, 0x63, 0xFF, 0x7F, 0x38, 0xFC, 0xA9,
+                /* 0930 */   0xE0, 0x35, 0x80, 0x1D, 0x24, 0x3D, 0x2D, 0x23,
+                /* 0938 */   0xC2, 0x38, 0xA4, 0x3C, 0x32, 0xF8, 0xB6, 0x18,
+                /* 0940 */   0xC7, 0x90, 0x0F, 0x91, 0xBE, 0x13, 0x18, 0xF2,
+                /* 0948 */   0x21, 0xEF, 0x79, 0xC7, 0xC0, 0xAF, 0x08, 0x71,
+                /* 0950 */   0x9E, 0xB2, 0x7C, 0x67, 0xF0, 0x65, 0x01, 0x7C,
+                /* 0958 */   0x91, 0x2E, 0x0B, 0x68, 0x68, 0x9F, 0x64, 0x7C,
+                /* 0960 */   0x41, 0x30, 0xEC, 0x89, 0xB3, 0x00, 0x77, 0x05,
+                /* 0968 */   0x50, 0x81, 0xFA, 0xAE, 0x00, 0xFF, 0x42, 0xF0,
+                /* 0970 */   0xAE, 0x00, 0x86, 0x79, 0xF9, 0x56, 0xC0, 0x35,
+                /* 0978 */   0x1D, 0x4A, 0xD0, 0x67, 0x12, 0x5F, 0x17, 0x70,
+                /* 0980 */   0x53, 0x64, 0xA9, 0x8E, 0x0A, 0xD0, 0x53, 0x4C,
+                /* 0988 */   0x02, 0x75, 0x47, 0xF7, 0x51, 0x01, 0xC6, 0x4D,
+                /* 0990 */   0xD9, 0x07, 0x54, 0x76, 0x5A, 0x60, 0x67, 0x21,
+                /* 0998 */   0x76, 0x1D, 0xC1, 0x5D, 0x49, 0x18, 0xCA, 0xB3,
+                /* 09A0 */   0x81, 0x2F, 0x59, 0xFC, 0x70, 0x00, 0x03, 0xDC,
+                /* 09A8 */   0xB3, 0x38, 0xC4, 0x08, 0xB1, 0xD9, 0x81, 0xEB,
+                /* 09B0 */   0x75, 0xD2, 0x70, 0x2F, 0x44, 0xEC, 0xFF, 0x7F,
+                /* 09B8 */   0x32, 0x00, 0xE3, 0x51, 0x1B, 0x1C, 0x27, 0x9D,
+                /* 09C0 */   0xF0, 0x91, 0x9E, 0x59, 0xF8, 0x49, 0x19, 0x30,
+                /* 09C8 */   0x71, 0xF2, 0x03, 0xE3, 0xC9, 0x1A, 0xC6, 0x00,
+                /* 09D0 */   0xB8, 0xBC, 0x57, 0x95, 0x81, 0xFC, 0x43, 0x90,
+                /* 09D8 */   0x20, 0x18, 0xD4, 0x29, 0x19, 0x38, 0x1C, 0xC5,
+                /* 09E0 */   0x70, 0xA7, 0x64, 0x78, 0x50, 0xF8, 0xC3, 0x00,
+                /* 09E8 */   0xE6, 0x46, 0xE8, 0x7B, 0x82, 0xA1, 0xDE, 0x93,
+                /* 09F0 */   0x0E, 0xE3, 0x91, 0xD0, 0x04, 0x3E, 0x2D, 0xC3,
+                /* 09F8 */   0xFA, 0xFF, 0x9F, 0x96, 0xF9, 0x39, 0x21, 0xFE,
+                /* 0A00 */   0x53, 0xCE, 0xFB, 0xC5, 0x83, 0xB2, 0x31, 0xA2,
+                /* 0A08 */   0xBC, 0x2A, 0xFB, 0x9C, 0x69, 0x14, 0x76, 0x4B,
+                /* 0A10 */   0x7E, 0x73, 0x78, 0x55, 0xF6, 0x69, 0xF9, 0xDC,
+                /* 0A18 */   0x22, 0xBD, 0x2F, 0x7B, 0xE4, 0x31, 0xE3, 0xC4,
+                /* 0A20 */   0x0A, 0x12, 0xE8, 0x7D, 0x23, 0x4A, 0xD8, 0x18,
+                /* 0A28 */   0xE1, 0x02, 0x3D, 0x2D, 0xB3, 0x63, 0xBB, 0x87,
+                /* 0A30 */   0xEC, 0xB3, 0x02, 0xEE, 0xEC, 0x00, 0x77, 0x7A,
+                /* 0A38 */   0xFC, 0xF4, 0x00, 0x38, 0x01, 0x7A, 0x7A, 0x00,
+                /* 0A40 */   0xDB, 0x79, 0x03, 0xEE, 0x81, 0x00, 0x71, 0xFC,
+                /* 0A48 */   0x47, 0x05, 0xBF, 0xB2, 0x50, 0x38, 0x7E, 0x6C,
+                /* 0A50 */   0xE7, 0xC7, 0x12, 0xDC, 0xE1, 0xC0, 0x47, 0x06,
+                /* 0A58 */   0x1F, 0x20, 0x71, 0x43, 0xF1, 0xA1, 0x02, 0x79,
+                /* 0A60 */   0x16, 0x00, 0xC5, 0xE8, 0xD9, 0x08, 0xD8, 0x0D,
+                /* 0A68 */   0xE6, 0xA5, 0x25, 0xCA, 0xFF, 0xFF, 0xBD, 0x81,
+                /* 0A70 */   0x9D, 0x52, 0x70, 0x07, 0x01, 0xF0, 0x1D, 0x03,
+                /* 0A78 */   0xC0, 0x3B, 0x18, 0x2E, 0x6B, 0xCC, 0x28, 0x21,
+                /* 0A80 */   0x30, 0x1A, 0x33, 0xEE, 0x10, 0xC2, 0x4F, 0x04,
+                /* 0A88 */   0xB8, 0x31, 0x7B, 0xDC, 0x1E, 0x33, 0xEE, 0x38,
+                /* 0A90 */   0xCB, 0x47, 0xF5, 0x94, 0x11, 0xCA, 0x07, 0x0E,
+                /* 0A98 */   0x76, 0xCE, 0x78, 0x23, 0xE0, 0x43, 0x07, 0x1E,
+                /* 0AA0 */   0x07, 0x18, 0xDC, 0x91, 0x02, 0x8C, 0x97, 0x03,
+                /* 0AA8 */   0x36, 0x76, 0x70, 0x07, 0x21, 0xA7, 0x40, 0x96,
+                /* 0AB0 */   0x0E, 0xA3, 0xB1, 0xE3, 0x64, 0x03, 0xE9, 0x18,
+                /* 0AB8 */   0xE3, 0x43, 0xAE, 0xC7, 0x8E, 0x1B, 0xAC, 0xC7,
+                /* 0AC0 */   0x8E, 0x3B, 0xBE, 0x60, 0xFF, 0xFF, 0xC7, 0x17,
+                /* 0AC8 */   0x30, 0x8C, 0x81, 0x8B, 0x1F, 0x06, 0xFA, 0xE6,
+                /* 0AD0 */   0xE7, 0xD1, 0x19, 0xDC, 0xC3, 0xF6, 0x09, 0x26,
+                /* 0AD8 */   0xC6, 0x1B, 0x4C, 0x88, 0x47, 0x96, 0x97, 0x96,
+                /* 0AE0 */   0x08, 0x0F, 0x2D, 0xBE, 0xB9, 0xBC, 0xB4, 0xF8,
+                /* 0AE8 */   0x16, 0x63, 0x94, 0x10, 0x11, 0x0E, 0x26, 0xCE,
+                /* 0AF0 */   0x13, 0x8C, 0x11, 0x0E, 0x3C, 0x8A, 0x21, 0x22,
+                /* 0AF8 */   0x9C, 0x40, 0x88, 0x93, 0x3E, 0xD9, 0x20, 0xE1,
+                /* 0B00 */   0x63, 0x84, 0x8D, 0x16, 0xE5, 0x09, 0x86, 0x8D,
+                /* 0B08 */   0x85, 0x9F, 0x57, 0x3C, 0x78, 0x7E, 0x5A, 0xF3,
+                /* 0B10 */   0x5D, 0xD0, 0x93, 0x39, 0xC7, 0x87, 0x2C, 0x4F,
+                /* 0B18 */   0xED, 0x71, 0xD2, 0x87, 0x59, 0xDC, 0xA0, 0x1E,
+                /* 0B20 */   0x1C, 0xD9, 0x5D, 0xC7, 0xC7, 0x6B, 0xEC, 0x29,
+                /* 0B28 */   0xC8, 0x43, 0xE0, 0x27, 0x02, 0x5F, 0x10, 0x3D,
+                /* 0B30 */   0x59, 0xDF, 0xF5, 0xD8, 0xBD, 0xCC, 0x18, 0xD5,
+                /* 0B38 */   0x4F, 0x01, 0x75, 0x4C, 0x39, 0x83, 0x57, 0x08,
+                /* 0B40 */   0x76, 0xCF, 0xF3, 0x21, 0xDB, 0x77, 0x49, 0x36,
+                /* 0B48 */   0x0A, 0xDC, 0x21, 0xC1, 0x67, 0x24, 0x7E, 0xAA,
+                /* 0B50 */   0xF0, 0x30, 0x3C, 0x0A, 0x18, 0x33, 0x78, 0x47,
+                /* 0B58 */   0x38, 0xB4, 0x10, 0x07, 0xFC, 0xBE, 0xCB, 0x86,
+                /* 0B60 */   0x1A, 0xE3, 0xF4, 0x7C, 0xFE, 0x60, 0x83, 0x80,
+                /* 0B68 */   0x0F, 0x75, 0xA8, 0x1E, 0xE6, 0x51, 0xBD, 0x14,
+                /* 0B70 */   0x32, 0x9C, 0xB3, 0x83, 0x3B, 0x08, 0xEC, 0xF1,
+                /* 0B78 */   0xC3, 0x83, 0xE0, 0x37, 0x4B, 0x3E, 0x08, 0x76,
+                /* 0B80 */   0xBE, 0x79, 0x83, 0x33, 0xC8, 0xFF, 0xFF, 0x18,
+                /* 0B88 */   0x60, 0x9F, 0xA9, 0x7C, 0x34, 0x41, 0x1C, 0x01,
+                /* 0B90 */   0xD1, 0xE7, 0x0F, 0x8F, 0xE1, 0x4D, 0x8E, 0x0F,
+                /* 0B98 */   0x07, 0x7B, 0xF4, 0xC0, 0x9D, 0x44, 0xE0, 0x1E,
+                /* 0BA0 */   0xBB, 0x0E, 0xDA, 0xD7, 0x38, 0x5F, 0xB4, 0x60,
+                /* 0BA8 */   0xDC, 0xF7, 0x9E, 0x45, 0xC0, 0x8F, 0xF1, 0xD8,
+                /* 0BB0 */   0x02, 0x8E, 0x43, 0x09, 0xB8, 0x83, 0x1D, 0xD7,
+                /* 0BB8 */   0x38, 0x84, 0xA2, 0xC0, 0xE8, 0x50, 0x82, 0x8B,
+                /* 0BC0 */   0x01, 0x24, 0x18, 0xC7, 0x38, 0xA3, 0xA1, 0x2F,
+                /* 0BC8 */   0x91, 0x3E, 0xA4, 0xC1, 0x19, 0x34, 0xEC, 0x79,
+                /* 0BD0 */   0x3E, 0xA1, 0x70, 0x7B, 0x02, 0x14, 0x9D, 0x50,
+                /* 0BD8 */   0x40, 0x86, 0xFB, 0x0C, 0x82, 0x3D, 0x21, 0xF0,
+                /* 0BE0 */   0x33, 0x08, 0xFB, 0xFF, 0x1F, 0x1C, 0x3D, 0xEE,
+                /* 0BE8 */   0xF7, 0x46, 0x9F, 0x1A, 0xD9, 0xDC, 0x1F, 0x02,
+                /* 0BF0 */   0x4E, 0xE0, 0xDC, 0xD9, 0xA9, 0x19, 0x77, 0x66,
+                /* 0BF8 */   0xC0, 0x9E, 0x3F, 0x3C, 0x04, 0x7E, 0x2E, 0xF0,
+                /* 0C00 */   0xF0, 0x3D, 0x04, 0xFC, 0xE0, 0x1F, 0x98, 0x0D,
+                /* 0C08 */   0x0E, 0xC6, 0x53, 0x84, 0xAF, 0x1D, 0x1C, 0x9C,
+                /* 0C10 */   0x9F, 0x06, 0x0C, 0xCE, 0x5F, 0xA1, 0x3E, 0xCF,
+                /* 0C18 */   0x33, 0x70, 0xEC, 0xA9, 0xD7, 0xF7, 0x0E, 0xCF,
+                /* 0C20 */   0xD7, 0x87, 0x0A, 0xFC, 0x4D, 0xCF, 0x87, 0x0A,
+                /* 0C28 */   0x70, 0x1C, 0x1E, 0xF8, 0x61, 0x85, 0x0D, 0xE1,
+                /* 0C30 */   0x51, 0x00, 0x7F, 0x6A, 0xF1, 0xF1, 0x2F, 0xCE,
+                /* 0C38 */   0x53, 0x04, 0xBB, 0x8D, 0x60, 0x0F, 0x17, 0x80,
+                /* 0C40 */   0xA3, 0x68, 0x67, 0x31, 0x54, 0x98, 0xB3, 0x18,
+                /* 0C48 */   0xF9, 0xFF, 0x9F, 0xA3, 0x50, 0x67, 0x31, 0x7A,
+                /* 0C50 */   0xB8, 0x00, 0x5C, 0x08, 0x3E, 0x1E, 0x80, 0xE6,
+                /* 0C58 */   0x20, 0xF0, 0xB8, 0xE0, 0x0B, 0xC1, 0x91, 0x1C,
+                /* 0C60 */   0xC8, 0xD3, 0x01, 0xE0, 0x53, 0x1E, 0x09, 0x3D,
+                /* 0C68 */   0x1F, 0x59, 0x10, 0x0C, 0xEA, 0x7C, 0xE0, 0x13,
+                /* 0C70 */   0x8A, 0x8F, 0x1D, 0xFC, 0x6C, 0xE0, 0x1B, 0xB9,
+                /* 0C78 */   0x87, 0xCA, 0x4F, 0xCD, 0x3E, 0x69, 0xF3, 0xE0,
+                /* 0C80 */   0x3F, 0x69, 0xD9, 0x80, 0x51, 0xA0, 0x61, 0xA0,
+                /* 0C88 */   0x46, 0xE4, 0x23, 0xD2, 0xFF, 0xFF, 0xB9, 0x0D,
+                /* 0C90 */   0x1B, 0x60, 0x68, 0xF4, 0x1C, 0x0E, 0xE3, 0x80,
+                /* 0C98 */   0xEB, 0x73, 0x38, 0x76, 0x40, 0x3E, 0x87, 0xC3,
+                /* 0CA0 */   0x3F, 0x47, 0xC3, 0x1F, 0x1B, 0x3B, 0xDD, 0xF3,
+                /* 0CA8 */   0x81, 0xC1, 0xBA, 0x7E, 0x63, 0x06, 0x06, 0xB6,
+                /* 0CB0 */   0x6F, 0x91, 0x07, 0x06, 0x1C, 0x51, 0xCF, 0xC6,
+                /* 0CB8 */   0x57, 0x08, 0x0F, 0x0C, 0x6C, 0x80, 0x1E, 0x18,
+                /* 0CC0 */   0xF0, 0x89, 0x05, 0x21, 0x27, 0x03, 0x43, 0x9D,
+                /* 0CC8 */   0x32, 0x8C, 0x1C, 0xF3, 0x89, 0xC3, 0xC3, 0xF0,
+                /* 0CD0 */   0xA1, 0x22, 0xEA, 0x33, 0xC0, 0x23, 0x1E, 0x1B,
+                /* 0CD8 */   0x1B, 0xFB, 0xFF, 0x8F, 0x0D, 0x2C, 0xC7, 0x16,
+                /* 0CE0 */   0x8F, 0x0D, 0xFC, 0x47, 0x78, 0xFC, 0xD8, 0xE0,
+                /* 0CE8 */   0x8C, 0xE5, 0xD1, 0xC4, 0x97, 0x99, 0x23, 0x3B,
+                /* 0CF0 */   0x8D, 0x33, 0x7B, 0x0D, 0xF1, 0xD1, 0xEE, 0xF1,
+                /* 0CF8 */   0xDB, 0x63, 0x03, 0x97, 0x85, 0xB1, 0x01, 0xA5,
+                /* 0D00 */   0x90, 0x63, 0x43, 0x1F, 0x52, 0x7C, 0x0A, 0xB0,
+                /* 0D08 */   0x71, 0x54, 0x32, 0x0F, 0x1F, 0xAF, 0x7C, 0x62,
+                /* 0D10 */   0x38, 0xBA, 0x20, 0x6F, 0xE8, 0xBE, 0x5C, 0xF8,
+                /* 0D18 */   0x48, 0x63, 0x30, 0x5F, 0x5A, 0x7C, 0x06, 0xE5,
+                /* 0D20 */   0x43, 0x04, 0x97, 0x86, 0x21, 0x02, 0xA5, 0x50,
+                /* 0D28 */   0x43, 0x44, 0x8F, 0xE7, 0xFF, 0xFF, 0x08, 0xE6,
+                /* 0D30 */   0x21, 0xB2, 0xA1, 0x81, 0xF7, 0x1B, 0xA3, 0xA1,
+                /* 0D38 */   0x01, 0xA1, 0x70, 0x43, 0x43, 0x1F, 0xD6, 0x7C,
+                /* 0D40 */   0x08, 0x60, 0x10, 0xBE, 0x0D, 0xB0, 0xAB, 0x80,
+                /* 0D48 */   0xAF, 0x42, 0x1E, 0xE0, 0x93, 0x28, 0x1B, 0x1E,
+                /* 0D50 */   0xF8, 0x06, 0xE5, 0xE1, 0x01, 0x9F, 0xF0, 0xC0,
+                /* 0D58 */   0x5E, 0x85, 0x87, 0x47, 0xCF, 0x4A, 0x1E, 0x1E,
+                /* 0D60 */   0x3C, 0x90, 0xC7, 0x08, 0x76, 0x0E, 0xF1, 0xE0,
+                /* 0D68 */   0xC0, 0x61, 0x62, 0x70, 0xA0, 0x38, 0xFA, 0xE3,
+                /* 0D70 */   0x86, 0xC0, 0x2E, 0xB3, 0x9E, 0x38, 0xBF, 0xB2,
+                /* 0D78 */   0x78, 0x50, 0xF8, 0xFF, 0xFF, 0x11, 0x00, 0xD6,
+                /* 0D80 */   0x71, 0x06, 0x7C, 0xC1, 0x0E, 0x07, 0xE8, 0x63,
+                /* 0D88 */   0x22, 0x1B, 0xC3, 0x43, 0xC4, 0x83, 0xAB, 0x07,
+                /* 0D90 */   0xE2, 0x6B, 0xC7, 0x6B, 0x31, 0xEE, 0x68, 0x00,
+                /* 0D98 */   0x2E, 0x15, 0x47, 0x03, 0xA0, 0x74, 0xB0, 0x05,
+                /* 0DA0 */   0xC7, 0x3D, 0xCD, 0x47, 0x3B, 0xCC, 0x1C, 0x3D,
+                /* 0DA8 */   0x80, 0xE7, 0x37, 0x8F, 0x96, 0x9F, 0xDF, 0x00,
+                /* 0DB0 */   0x47, 0x41, 0x0F, 0xB6, 0x74, 0xE0, 0x8E, 0x06,
+                /* 0DB8 */   0x83, 0x3A, 0xBF, 0x61, 0xFE, 0xFF, 0xE7, 0x37,
+                /* 0DC0 */   0x30, 0x44, 0x00, 0xD7, 0x99, 0xC6, 0xE7, 0x17,
+                /* 0DC8 */   0x38, 0x43, 0x3D, 0x68, 0x5F, 0x13, 0x3C, 0x6B,
+                /* 0DD0 */   0xDF, 0xB8, 0xD8, 0x39, 0x01, 0x5C, 0x03, 0xF2,
+                /* 0DD8 */   0x49, 0x07, 0x38, 0x02, 0x9F, 0xC4, 0x03, 0xFE,
+                /* 0DE0 */   0xA1, 0x81, 0x79, 0x58, 0x1E, 0x1A, 0xF0, 0x39,
+                /* 0DE8 */   0x1A, 0xE0, 0x4E, 0x14, 0xE0, 0xB9, 0x8D, 0xE0,
+                /* 0DF0 */   0x0E, 0x14, 0xC0, 0xE2, 0xFF, 0x7F, 0xA0, 0x00,
+                /* 0DF8 */   0x56, 0x47, 0x7C, 0x8F, 0x8B, 0x43, 0xE3, 0x10,
+                /* 0E00 */   0x1F, 0xD2, 0xCE, 0xD9, 0xE7, 0xAF, 0x33, 0xC5,
+                /* 0E08 */   0x9D, 0x45, 0xC0, 0x70, 0xA2, 0x47, 0xBC, 0xD3,
+                /* 0E10 */   0x0C, 0xE4, 0x07, 0x86, 0x84, 0xC0, 0xA0, 0x4E,
+                /* 0E18 */   0x40, 0x1E, 0x8A, 0x0F, 0x06, 0x1C, 0xD8, 0x47,
+                /* 0E20 */   0x04, 0x76, 0x2E, 0x60, 0x07, 0x28, 0xC3, 0xF1,
+                /* 0E28 */   0xB3, 0x80, 0x4F, 0x09, 0x0F, 0x35, 0xC7, 0xF1,
+                /* 0E30 */   0xB8, 0xE9, 0xBB, 0x99, 0x21, 0xD9, 0xD5, 0xE0,
+                /* 0E38 */   0xF9, 0x07, 0x7B, 0xDA, 0x85, 0x73, 0xC4, 0x05,
+                /* 0E40 */   0x17, 0x81, 0xCF, 0x3A, 0x1E, 0x05, 0x3F, 0x3D,
+                /* 0E48 */   0x78, 0x8E, 0x6F, 0x0C, 0x3E, 0x3D, 0x30, 0xF7,
+                /* 0E50 */   0x02, 0xCC, 0x1D, 0xBA, 0x85, 0x70, 0x4C, 0xAF,
+                /* 0E58 */   0x0F, 0x31, 0x8E, 0xFA, 0xB1, 0xA1, 0x2D, 0x01,
+                /* 0E60 */   0xDA, 0x50, 0x74, 0x07, 0x78, 0x19, 0x88, 0x12,
+                /* 0E68 */   0xE2, 0x08, 0x22, 0xB5, 0x86, 0xA2, 0x99, 0x47,
+                /* 0E70 */   0x8A, 0x12, 0x30, 0x9E, 0x61, 0x1A, 0x9B, 0x8C,
+                /* 0E78 */   0x20, 0x63, 0x84, 0x8E, 0x13, 0x2C, 0x4A, 0xB4,
+                /* 0E80 */   0x57, 0x80, 0xF6, 0x47, 0xCB, 0x56, 0xAC, 0xB1,
+                /* 0E88 */   0x38, 0xD2, 0xC9, 0x12, 0x3D, 0x6C, 0x1F, 0xB3,
+                /* 0E90 */   0xF1, 0xA7, 0x55, 0xCC, 0xFF, 0x9F, 0xE0, 0x55,
+                /* 0E98 */   0xC5, 0x07, 0x05, 0x1F, 0x00, 0xF0, 0x2E, 0x01,
+                /* 0EA0 */   0x75, 0x75, 0xF4, 0xB8, 0x7D, 0xDE, 0x00, 0xFF,
+                /* 0EA8 */   0xF5, 0x02, 0x4B, 0x50, 0xFE, 0x20, 0x50, 0x23,
+                /* 0EB0 */   0x33, 0xB4, 0xC7, 0xF9, 0x36, 0x63, 0xC8, 0x27,
+                /* 0EB8 */   0x27, 0x13, 0x58, 0xEC, 0x09, 0x15, 0x68, 0x0C,
+                /* 0EC0 */   0xFE, 0x69, 0xC3, 0xD7, 0x76, 0xCF, 0xD7, 0xE7,
+                /* 0EC8 */   0x38, 0x80, 0x0F, 0xFF, 0xFF, 0x73, 0x1C, 0x60,
+                /* 0ED0 */   0x68, 0x38, 0xB8, 0xA3, 0x0F, 0xDC, 0x2B, 0x09,
+                /* 0ED8 */   0x3F, 0xFC, 0x00, 0xCE, 0x80, 0x1E, 0x7E, 0xC0,
+                /* 0EE0 */   0x3E, 0x54, 0xDC, 0x10, 0x78, 0x84, 0x15, 0xD1,
+                /* 0EE8 */   0xC3, 0x80, 0x45, 0xC3, 0xA0, 0xCE, 0x6B, 0xD8,
+                /* 0EF0 */   0xFF, 0xFF, 0x79, 0x0D, 0xB6, 0x38, 0x70, 0x1D,
+                /* 0EF8 */   0x54, 0x7D, 0x36, 0x86, 0x33, 0xA8, 0xD3, 0xEE,
+                /* 0F00 */   0xFD, 0xAE, 0x40, 0x2E, 0x22, 0x1E, 0xF4, 0xF9,
+                /* 0F08 */   0x3C, 0x3B, 0xB0, 0x03, 0x1B, 0xF0, 0x1F, 0x1B,
+                /* 0F10 */   0x9C, 0x1B, 0xC0, 0x53, 0x74, 0x84, 0x63, 0x03,
+                /* 0F18 */   0xFB, 0x89, 0x0D, 0x38, 0x9D, 0xED, 0xE0, 0x5C,
+                /* 0F20 */   0xA1, 0xD8, 0x6D, 0x1F, 0x37, 0x34, 0xB0, 0xD9,
+                /* 0F28 */   0x18, 0x1A, 0xC8, 0xFE, 0xFF, 0x87, 0x4F, 0xE0,
+                /* 0F30 */   0x75, 0xE8, 0xE2, 0x97, 0x8A, 0xE7, 0x2F, 0x7E,
+                /* 0F38 */   0xB8, 0x03, 0x9C, 0x4B, 0x3B, 0xD9, 0xA1, 0xC4,
+                /* 0F40 */   0x1C, 0xEE, 0x00, 0x29, 0xFF, 0xFF, 0xC3, 0x1D,
+                /* 0F48 */   0xB8, 0xEE, 0x72, 0xEF, 0x0C, 0x2F, 0x0D, 0x9E,
+                /* 0F50 */   0xD3, 0xBB, 0x9D, 0x31, 0x5E, 0xEA, 0x8C, 0x10,
+                /* 0F58 */   0x85, 0xDD, 0x06, 0xA2, 0xD9, 0xDB, 0xE1, 0x8E,
+                /* 0F60 */   0x9C, 0xF0, 0x38, 0x66, 0xA4, 0x27, 0xBD, 0x60,
+                /* 0F68 */   0x91, 0x22, 0x1E, 0x4E, 0x94, 0x10, 0xC1, 0x5E,
+                /* 0F70 */   0x27, 0x9E, 0xF2, 0x1E, 0xEE, 0x98, 0x90, 0xC3,
+                /* 0F78 */   0x1D, 0xD0, 0x71, 0x7D, 0xB8, 0x03, 0x2A, 0x27,
+                /* 0F80 */   0x2A, 0xFC, 0xE1, 0x0E, 0x30, 0xFB, 0xFF, 0x3F,
+                /* 0F88 */   0xDC, 0x01, 0x8C, 0x3A, 0xA3, 0xE1, 0x0E, 0x77,
+                /* 0F90 */   0x60, 0x3B, 0xFD, 0x00, 0xE7, 0xFF, 0xFF, 0xE9,
+                /* 0F98 */   0x07, 0x78, 0x8F, 0x15, 0xC6, 0x18, 0x78, 0xB4,
+                /* 0FA0 */   0x25, 0x51, 0x20, 0x87, 0x81, 0x41, 0x11, 0x38,
+                /* 0FA8 */   0xC8, 0xA1, 0x8E, 0x06, 0x3B, 0xBD, 0x40, 0x99,
+                /* 0FB0 */   0xCB, 0x81, 0x9E, 0xC2, 0x33, 0x82, 0x0F, 0x60,
+                /* 0FB8 */   0x60, 0x3F, 0xD5, 0x01, 0x87, 0x53, 0x03, 0x3E,
+                /* 0FC0 */   0xD0, 0x09, 0x05, 0x3D, 0x0A, 0x9F, 0x4D, 0xC0,
+                /* 0FC8 */   0x7B, 0xA4, 0x03, 0x36, 0xFF, 0xFF, 0xB3, 0x09,
+                /* 0FD0 */   0x7B, 0x35, 0xFA, 0x6C, 0x82, 0x63, 0x31, 0xEA,
+                /* 0FD8 */   0x1B, 0xC4, 0x21, 0xBE, 0x74, 0xF8, 0xDC, 0xF8,
+                /* 0FE0 */   0x4E, 0xE3, 0x4B, 0x00, 0xE6, 0xFA, 0x61, 0x82,
+                /* 0FE8 */   0x31, 0x21, 0xF4, 0xC9, 0xF2, 0xA9, 0x0E, 0x38,
+                /* 0FF0 */   0x1D, 0x4E, 0xE0, 0x8D, 0x1E, 0x77, 0x5A, 0xF0,
+                /* 0FF8 */   0x70, 0x38, 0xB8, 0x67, 0xF3, 0x2C, 0xF1, 0x44,
+                /* 1000 */   0xE4, 0x71, 0xF8, 0x74, 0x02, 0xBC, 0x0E, 0x18,
+                /* 1008 */   0x98, 0x19, 0x84, 0x7F, 0x08, 0x61, 0xA7, 0x4F,
+                /* 1010 */   0x1F, 0x99, 0x3C, 0xF7, 0x77, 0x23, 0x9F, 0x4E,
+                /* 1018 */   0x00, 0x5F, 0xFF, 0xFF, 0xA3, 0x1E, 0xB0, 0x90,
+                /* 1020 */   0xA8, 0xE1, 0x9C, 0x87, 0x11, 0x05, 0x83, 0x3A,
+                /* 1028 */   0xEA, 0x01, 0xD6, 0x2E, 0x7A, 0x36, 0x86, 0xA0,
+                /* 1030 */   0x8B, 0xC0, 0x19, 0x84, 0x78, 0xBC, 0x7B, 0xC5,
+                /* 1038 */   0x8B, 0xE4, 0x3B, 0x40, 0x9C, 0x47, 0x3D, 0x83,
+                /* 1040 */   0xBD, 0x7D, 0x3C, 0x48, 0x44, 0x89, 0xF3, 0xA8,
+                /* 1048 */   0xE7, 0xD1, 0x87, 0xF2, 0xE4, 0x43, 0x9D, 0x7E,
+                /* 1050 */   0xAC, 0xB0, 0x81, 0x9E, 0xF8, 0x5E, 0xF4, 0x42,
+                /* 1058 */   0x1A, 0xE1, 0x51, 0x8F, 0x09, 0x7A, 0x79, 0xE8,
+                /* 1060 */   0x70, 0xE5, 0xA3, 0x1E, 0x60, 0xE5, 0xFF, 0x7F,
+                /* 1068 */   0xD4, 0x03, 0xF8, 0xFF, 0xFF, 0x3F, 0xEA, 0x81,
+                /* 1070 */   0xF9, 0xF4, 0x04, 0xF8, 0x3F, 0xD6, 0xE0, 0x8E,
+                /* 1078 */   0x8A, 0x60, 0x3B, 0x3F, 0x01, 0x2E, 0xFE, 0xFF,
+                /* 1080 */   0xE7, 0x27, 0x30, 0x0D, 0xDD, 0xE7, 0x27, 0x30,
+                /* 1088 */   0x8F, 0x16, 0xE6, 0x01, 0x01, 0x71, 0x56, 0x44,
+                /* 1090 */   0x85, 0x7F, 0xC8, 0x18, 0x0E, 0x15, 0x1C, 0x48,
+                /* 1098 */   0xBF, 0x28, 0x1F, 0x01, 0x81, 0xCB, 0x51, 0x11,
+                /* 10A0 */   0x38, 0x9C, 0x59, 0xF0, 0x42, 0x4E, 0x1D, 0xE8,
+                /* 10A8 */   0xF1, 0x18, 0xF4, 0x95, 0xC3, 0x57, 0x02, 0x7E,
+                /* 10B0 */   0xE4, 0x60, 0xA1, 0x8F, 0x1C, 0xA0, 0x3A, 0x2C,
+                /* 10B8 */   0x82, 0xEF, 0xC8, 0x01, 0x8E, 0xEB, 0x55, 0x60,
+                /* 10C0 */   0xFE, 0xFF, 0x07, 0x66, 0xB7, 0x83, 0xD7, 0x4F,
+                /* 10C8 */   0x4F, 0xE2, 0x31, 0xEA, 0x38, 0x43, 0x14, 0x8E,
+                /* 10D0 */   0x49, 0x0E, 0x06, 0x91, 0xDE, 0xC1, 0xD8, 0x00,
+                /* 10D8 */   0x5F, 0x5E, 0x7C, 0xA8, 0xF2, 0x31, 0x10, 0x18,
+                /* 10E0 */   0x42, 0x9C, 0x0D, 0x3F, 0x5D, 0x18, 0xF3, 0x74,
+                /* 10E8 */   0xF8, 0x31, 0x10, 0xB0, 0x2E, 0xF5, 0x0C, 0x88,
+                /* 10F0 */   0x12, 0x77, 0x0C, 0x04, 0x52, 0xFF, 0xFF, 0x63,
+                /* 10F8 */   0x20, 0x70, 0xBD, 0x04, 0x7A, 0xCC, 0x67, 0xFC,
+                /* 1100 */   0xE6, 0xF7, 0xE4, 0x17, 0xA5, 0xB6, 0xEB, 0x9F,
+                /* 1108 */   0xEE, 0x06, 0xC6, 0x7A, 0x08, 0x78, 0x02, 0xF4,
+                /* 1110 */   0xFD, 0xCF, 0xC7, 0x8A, 0x28, 0x01, 0xA3, 0xC4,
+                /* 1118 */   0x7A, 0x11, 0x34, 0x66, 0x8C, 0x60, 0xEF, 0x80,
+                /* 1120 */   0x31, 0x1F, 0x09, 0x3D, 0xC2, 0x68, 0xC1, 0x0D,
+                /* 1128 */   0xF4, 0x18, 0xC8, 0x84, 0x1D, 0x03, 0x01, 0x12,
+                /* 1130 */   0xFD, 0xFF, 0x8F, 0x81, 0x00, 0x23, 0x4F, 0x50,
+                /* 1138 */   0xC0, 0xF6, 0xFF, 0x7F, 0x82, 0x02, 0x0C, 0x1D,
+                /* 1140 */   0x05, 0xC1, 0x7C, 0x86, 0x02, 0xAC, 0x1D, 0x05,
+                /* 1148 */   0xC1, 0x3E, 0x5A, 0x98, 0xA3, 0xE0, 0x31, 0x5F,
+                /* 1150 */   0x1E, 0x06, 0xA2, 0xC1, 0x24, 0xFC, 0xFF, 0x8F,
+                /* 1158 */   0x82, 0xD8, 0x50, 0x40, 0x3A, 0x77, 0x38, 0xD4,
+                /* 1160 */   0xE9, 0x05, 0x7D, 0x50, 0xF0, 0xB0, 0x9F, 0x0A,
+                /* 1168 */   0x3C, 0x89, 0x53, 0xF5, 0xB5, 0xE0, 0x28, 0x9E,
+                /* 1170 */   0x00, 0x7C, 0x18, 0x04, 0xFE, 0x43, 0x83, 0x35,
+                /* 1178 */   0x89, 0xE2, 0x87, 0x06, 0xEA, 0xB3, 0x07, 0xF8,
+                /* 1180 */   0x86, 0x06, 0x8E, 0xA8, 0x67, 0x1C, 0xF4, 0x89,
+                /* 1188 */   0xC8, 0x67, 0x83, 0x98, 0x6F, 0x1E, 0x11, 0x9E,
+                /* 1190 */   0x3C, 0x7C, 0x7D, 0x60, 0x27, 0x4F, 0x9F, 0x9A,
+                /* 1198 */   0x02, 0x45, 0x79, 0xDF, 0xE0, 0x71, 0x4E, 0x39,
+                /* 11A0 */   0xA0, 0x3A, 0xFC, 0x82, 0xE3, 0xC0, 0x0B, 0xE3,
+                /* 11A8 */   0xFF, 0x7F, 0xE0, 0x65, 0xC7, 0x29, 0x1F, 0x4B,
+                /* 11B0 */   0xC0, 0x77, 0x26, 0x85, 0x73, 0x73, 0xF1, 0x1D,
+                /* 11B8 */   0x8F, 0x9D, 0x06, 0xC0, 0xA6, 0xE3, 0x34, 0x00,
+                /* 11C0 */   0x94, 0x62, 0x0D, 0x0C, 0x7D, 0x54, 0x31, 0x6A,
+                /* 11C8 */   0xEF, 0x93, 0xD0, 0xC4, 0xD8, 0x75, 0xE4, 0x25,
+                /* 11D0 */   0xC5, 0xD7, 0x93, 0x67, 0x2D, 0xF0, 0xF9, 0x18,
+                /* 11D8 */   0x1B, 0x50, 0x3A, 0x81, 0xF1, 0xA3, 0x27, 0x98,
+                /* 11E0 */   0x60, 0x0E, 0xE6, 0x55, 0xDC, 0x83, 0x7C, 0x12,
+                /* 11E8 */   0x62, 0xA7, 0x1C, 0xF0, 0xFE, 0xFF, 0x0F, 0x9E,
+                /* 11F0 */   0x80, 0x3D, 0x11, 0xA7, 0x4E, 0x54, 0xEC, 0x37,
+                /* 11F8 */   0x97, 0x0F, 0x9E, 0x80, 0xBC, 0x3B, 0x83, 0x11,
+                /* 1200 */   0xCE, 0x3F, 0xC4, 0x03, 0x44, 0x88, 0x67, 0x4E,
+                /* 1208 */   0x83, 0xC4, 0x09, 0xF2, 0x32, 0xF0, 0xE0, 0xE9,
+                /* 1210 */   0x7B, 0x67, 0x9C, 0x67, 0xCF, 0x28, 0x6F, 0x9E,
+                /* 1218 */   0x46, 0x38, 0xFA, 0x78, 0x06, 0x7A, 0xE7, 0x0C,
+                /* 1220 */   0xF1, 0xD6, 0xF9, 0x0C, 0xFA, 0xEA, 0x69, 0xB4,
+                /* 1228 */   0x58, 0xC1, 0x8F, 0xF1, 0xC1, 0x93, 0x45, 0x3E,
+                /* 1230 */   0x23, 0xD1, 0x83, 0x27, 0xEC, 0xFF, 0xFF, 0xC1,
+                /* 1238 */   0x13, 0xE0, 0xFF, 0xFF, 0xFF, 0xE0, 0x09, 0x18,
+                /* 1240 */   0x3B, 0x83, 0x01, 0xC7, 0x13, 0x1B, 0x38, 0xCE,
+                /* 1248 */   0x60, 0xC0, 0xE5, 0xE8, 0x0F, 0x9E, 0x93, 0x26,
+                /* 1250 */   0x8C, 0x23, 0x13, 0xF8, 0xFF, 0xFF, 0x47, 0x26,
+                /* 1258 */   0xC0, 0xD5, 0x58, 0x61, 0x8C, 0x81, 0x27, 0x7B,
+                /* 1260 */   0x1A, 0xD0, 0xE3, 0x80, 0x45, 0x1D, 0x98, 0x04,
+                /* 1268 */   0xC3, 0x59, 0x7C, 0x58, 0xF0, 0x11, 0x81, 0x1F,
+                /* 1270 */   0x16, 0x3C, 0x82, 0x8A, 0xC7, 0x49, 0x8F, 0x45,
+                /* 1278 */   0x3E, 0x77, 0xB2, 0x43, 0x82, 0x0F, 0x21, 0x1E,
+                /* 1280 */   0xA4, 0x0F, 0xB3, 0xE0, 0x39, 0x58, 0xC1, 0xBB,
+                /* 1288 */   0x2E, 0xC1, 0x39, 0x15, 0x00, 0x66, 0xFE, 0xFF,
+                /* 1290 */   0x04, 0xB5, 0xAB, 0x38, 0x5D, 0xB0, 0x00, 0x07,
+                /* 1298 */   0x30, 0xD9, 0x38, 0x86, 0x50, 0x0E, 0x1F, 0x5D,
+                /* 12A0 */   0x3D, 0x4D, 0x76, 0x24, 0x83, 0x19, 0x0B, 0x52,
+                /* 12A8 */   0x27, 0x01, 0x0F, 0xC0, 0x81, 0x60, 0xA4, 0x9D,
+                /* 12B0 */   0x44, 0xA3, 0x31, 0x9C, 0xD5, 0xC2, 0x08, 0xCE,
+                /* 12B8 */   0x20, 0x3E, 0x8E, 0x38, 0xD7, 0x91, 0x0A, 0xBD,
+                /* 12C0 */   0x1B, 0x1D, 0xA7, 0x50, 0x41, 0xEE, 0x25, 0x74,
+                /* 12C8 */   0xDE, 0xBE, 0x1B, 0xF0, 0x77, 0x9A, 0xC7, 0x62,
+                /* 12D0 */   0x60, 0xDF, 0x4E, 0xC0, 0x31, 0x17, 0xAB, 0x01,
+                /* 12D8 */   0x45, 0x0D, 0xC0, 0x68, 0x98, 0x53, 0xC0, 0x53,
+                /* 12E0 */   0x09, 0xB8, 0x82, 0xCD, 0x0D, 0x7D, 0x61, 0xB1,
+                /* 12E8 */   0xD6, 0xA9, 0xE8, 0xF8, 0xF4, 0x3E, 0x70, 0x70,
+                /* 12F0 */   0xC0, 0x63, 0xF6, 0x1E, 0x1C, 0x2C, 0x34, 0x0F,
+                /* 12F8 */   0x0E, 0x6C, 0xD9, 0x06, 0x87, 0x56, 0x72, 0x17,
+                /* 1300 */   0x21, 0x87, 0x0F, 0xFC, 0xEC, 0x60, 0xFC, 0xFF,
+                /* 1308 */   0x67, 0x07, 0x46, 0x40, 0xCF, 0x0E, 0x16, 0x92,
+                /* 1310 */   0x67, 0x07, 0x36, 0x7D, 0x67, 0x11, 0x50, 0x00,
+                /* 1318 */   0xF9, 0xDE, 0xE1, 0x73, 0xCB, 0xB3, 0x07, 0x1B,
+                /* 1320 */   0xC3, 0xA3, 0x8B, 0xD1, 0x8C, 0xCE, 0x35, 0xDD,
+                /* 1328 */   0x26, 0x50, 0x2A, 0x6E, 0x13, 0x14, 0xC4, 0x37,
+                /* 1330 */   0x00, 0x27, 0xA4, 0xD1, 0x3D, 0x0D, 0x37, 0x13,
+                /* 1338 */   0xE3, 0x3F, 0x62, 0xF8, 0x88, 0x70, 0x48, 0x67,
+                /* 1340 */   0x6B, 0x82, 0x79, 0x20, 0xF5, 0x7E, 0xF4, 0x65,
+                /* 1348 */   0x0F, 0x3F, 0xFB, 0x90, 0x0F, 0x2E, 0x9E, 0x86,
+                /* 1350 */   0xAF, 0x37, 0xE4, 0xDE, 0x41, 0xA7, 0xED, 0x33,
+                /* 1358 */   0x03, 0xE6, 0x30, 0xED, 0xEB, 0x54, 0x02, 0xCB,
+                /* 1360 */   0xBA, 0x4A, 0x50, 0x0F, 0x17, 0x10, 0x7A, 0xA1,
+                /* 1368 */   0xF1, 0xBD, 0x30, 0xC1, 0xC3, 0x99, 0x6F, 0x67,
+                /* 1370 */   0xEF, 0x25, 0xEC, 0x70, 0x98, 0xE0, 0xDD, 0x30,
+                /* 1378 */   0xC1, 0xBC, 0x83, 0x40, 0x8D, 0xCA, 0x83, 0xC0,
+                /* 1380 */   0x1C, 0xBF, 0x4C, 0x30, 0xDF, 0x18, 0x50, 0xC9,
+                /* 1388 */   0x2E, 0x5A, 0xF4, 0x0C, 0xF3, 0x0E, 0xE3, 0x4B,
+                /* 1390 */   0x82, 0xAF, 0x1F, 0x3E, 0xB7, 0x78, 0x01, 0xAF,
+                /* 1398 */   0x5B, 0x30, 0x08, 0x9E, 0x81, 0x5E, 0x5D, 0x0C,
+                /* 13A0 */   0x15, 0x27, 0xF0, 0xAB, 0xC0, 0x1B, 0x4D, 0x88,
+                /* 13A8 */   0x60, 0x86, 0x3D, 0xFC, 0x90, 0x6F, 0x31, 0x3E,
+                /* 13B0 */   0x5F, 0xFA, 0x06, 0x10, 0xEB, 0x75, 0xC4, 0xFF,
+                /* 13B8 */   0xFF, 0x91, 0xF2, 0x63, 0xCB, 0x01, 0x45, 0x7A,
+                /* 13C0 */   0xEB, 0xF3, 0x04, 0x7C, 0x96, 0xF1, 0x71, 0xF0,
+                /* 13C8 */   0xA4, 0x7C, 0xAF, 0x34, 0xFA, 0x2B, 0x84, 0x0F,
+                /* 13D0 */   0x3F, 0x46, 0xF6, 0x39, 0x87, 0x1D, 0x0C, 0xD9,
+                /* 13D8 */   0xA0, 0x38, 0xE2, 0x03, 0xC3, 0x4B, 0x8D, 0xA7,
+                /* 13E0 */   0xC2, 0xCE, 0x5D, 0x30, 0x0E, 0x0E, 0xEC, 0x58,
+                /* 13E8 */   0x84, 0x39, 0xEA, 0x81, 0xEB, 0x64, 0xE3, 0x93,
+                /* 13F0 */   0x03, 0x98, 0xE1, 0x31, 0x87, 0x6B, 0x9F, 0x37,
+                /* 13F8 */   0x7C, 0x33, 0xF0, 0xB8, 0xF8, 0x91, 0xC3, 0xC7,
+                /* 1400 */   0x3B, 0x86, 0x7D, 0x9A, 0x3E, 0x1A, 0xBD, 0xBC,
+                /* 1408 */   0xF9, 0xF4, 0x82, 0x81, 0xF5, 0xA5, 0x81, 0xC3,
+                /* 1410 */   0x1A, 0x2D, 0xEC, 0x63, 0xC0, 0x99, 0xFB, 0x42,
+                /* 1418 */   0x84, 0x3B, 0x75, 0x82, 0x05, 0x10, 0x7F, 0x2B,
+                /* 1420 */   0x79, 0xE4, 0xF0, 0x04, 0x0C, 0xC8, 0x72, 0xAF,
+                /* 1428 */   0x4B, 0x07, 0x22, 0x7E, 0xCA, 0xB3, 0xBA, 0x03,
+                /* 1430 */   0x11, 0x02, 0xE3, 0x71, 0xF4, 0xF1, 0xC3, 0xB3,
+                /* 1438 */   0xF1, 0x51, 0xC0, 0xC7, 0x28, 0xCF, 0xFC, 0x8C,
+                /* 1440 */   0x22, 0xBD, 0x32, 0x58, 0xCB, 0x89, 0x08, 0xA5,
+                /* 1448 */   0x02, 0x46, 0x81, 0x69, 0x74, 0xE7, 0xE0, 0x11,
+                /* 1450 */   0x61, 0x04, 0x67, 0x10, 0x8F, 0xD6, 0x37, 0x17,
+                /* 1458 */   0x18, 0xFF, 0xFF, 0x9B, 0x0B, 0xF0, 0x3A, 0x13,
+                /* 1460 */   0x01, 0x97, 0xEB, 0xA5, 0x67, 0x87, 0xBB, 0x2C,
+                /* 1468 */   0xB2, 0x69, 0x1B, 0xF7, 0x15, 0xD5, 0xA7, 0x63,
+                /* 1470 */   0x4F, 0xFC, 0xB4, 0x61, 0x9C, 0x8C, 0x00, 0x1F,
+                /* 1478 */   0x77, 0x1D, 0xC0, 0xC9, 0xFF, 0xFF, 0xAE, 0x03,
+                /* 1480 */   0xF0, 0xFF, 0xFF, 0x7F, 0xD7, 0xE1, 0xF7, 0x07,
+                /* 1488 */   0xDF, 0x75, 0x80, 0x6B, 0xA4, 0x55, 0x51, 0x11,
+                /* 1490 */   0xBF, 0x05, 0x85, 0x80, 0x41, 0x8D, 0xCE, 0xD7,
+                /* 1498 */   0x0A, 0xFC, 0xB1, 0x84, 0x81, 0xB3, 0xF3, 0x8A,
+                /* 14A0 */   0xE1, 0xF8, 0xC0, 0x3D, 0xBE, 0xD7, 0x95, 0xD3,
+                /* 14A8 */   0x7A, 0x36, 0xF0, 0x8D, 0xC5, 0x90, 0xEC, 0x82,
+                /* 14B0 */   0x8A, 0xBB, 0x5F, 0xF8, 0x46, 0xED, 0xA9, 0xBE,
+                /* 14B8 */   0x28, 0xBC, 0x27, 0xF8, 0x8E, 0xC0, 0xA0, 0x60,
+                /* 14C0 */   0xDC, 0x51, 0x31, 0x07, 0x54, 0x38, 0x04, 0x67,
+                /* 14C8 */   0x7C, 0x14, 0x98, 0x41, 0xFA, 0x90, 0xF2, 0x7A,
+                /* 14D0 */   0xE0, 0xC1, 0x32, 0xF7, 0xC7, 0x0D, 0x5D, 0x22,
+                /* 14D8 */   0x1E, 0x36, 0x9E, 0x0C, 0x9A, 0x43, 0xD1, 0x99,
+                /* 14E0 */   0xE0, 0x14, 0xDA, 0x1A, 0x96, 0x70, 0xDE, 0x37,
+                /* 14E8 */   0x42, 0x44, 0x09, 0xF6, 0xC2, 0xF1, 0xC6, 0xF0,
+                /* 14F0 */   0x34, 0x1B, 0x25, 0x5E, 0xA4, 0x80, 0xD1, 0xA2,
+                /* 14F8 */   0x04, 0xEB, 0x0D, 0x42, 0xA0, 0x91, 0x42, 0x04,
+                /* 1500 */   0x0C, 0x51, 0x1C, 0x96, 0xE0, 0xA2, 0xB7, 0x7F,
+                /* 1508 */   0x8D, 0x67, 0x6F, 0x02, 0x1D, 0x65, 0x1C, 0xE9,
+                /* 1510 */   0xB8, 0x83, 0x1E, 0xB6, 0x6F, 0xAC, 0xFC, 0x7C,
+                /* 1518 */   0xEF, 0x71, 0xF9, 0x02, 0x8A, 0x21, 0x78, 0xCD,
+                /* 1520 */   0xF0, 0x17, 0xC0, 0x07, 0x00, 0xBC, 0x6B, 0x40,
+                /* 1528 */   0xCD, 0xFC, 0xB1, 0x00, 0xD6, 0xFF, 0xFF, 0x46,
+                /* 1530 */   0x0F, 0xBE, 0xEB, 0x35, 0x5E, 0xFE, 0x20, 0x50,
+                /* 1538 */   0x97, 0x19, 0x7E, 0xF6, 0xF0, 0xCD, 0xD5, 0xF7,
+                /* 1540 */   0x80, 0xC3, 0x62, 0xB7, 0x6E, 0x3E, 0x1E, 0xF0,
+                /* 1548 */   0x0F, 0xFD, 0xA5, 0xD7, 0x87, 0x0A, 0xCF, 0xD7,
+                /* 1550 */   0x57, 0x5F, 0xDF, 0xBE, 0xC1, 0x7B, 0x39, 0x06,
+                /* 1558 */   0xEC, 0x09, 0xBE, 0x81, 0x83, 0x7C, 0xBC, 0xD8,
+                /* 1560 */   0xFF, 0xFF, 0x78, 0xE1, 0x8C, 0x83, 0x2B, 0x27,
+                /* 1568 */   0xA1, 0xC7, 0x02, 0x6B, 0x85, 0x41, 0xDD, 0xC2,
+                /* 1570 */   0xC1, 0xA5, 0x09, 0x5C, 0x57, 0x65, 0x1F, 0x6A,
+                /* 1578 */   0x7C, 0x08, 0xC6, 0x9F, 0x2F, 0x70, 0x01, 0x86,
+                /* 1580 */   0x4C, 0x4F, 0x65, 0x30, 0xAE, 0x29, 0x3E, 0x95,
+                /* 1588 */   0x61, 0xEE, 0x0E, 0x1E, 0x90, 0x8F, 0x18, 0xC0,
+                /* 1590 */   0x67, 0x15, 0x1E, 0x18, 0xEE, 0xB4, 0xE0, 0x9B,
+                /* 1598 */   0x92, 0x41, 0xCF, 0x31, 0xA8, 0x8F, 0x3C, 0x27,
+                /* 15A0 */   0xEF, 0x7B, 0xC2, 0xE3, 0x84, 0xA3, 0x9E, 0x83,
+                /* 15A8 */   0xE8, 0xD8, 0xC0, 0x71, 0xDC, 0x00, 0xC7, 0xE1,
+                /* 15B0 */   0x06, 0x77, 0xCE, 0x63, 0xE3, 0xC2, 0xC0, 0x3D,
+                /* 15B8 */   0x17, 0x78, 0x18, 0xBE, 0xE9, 0x78, 0x44, 0x98,
+                /* 15C0 */   0xF1, 0x3F, 0xEA, 0x19, 0x21, 0x20, 0xFE, 0x62,
+                /* 15C8 */   0xC4, 0x06, 0x0C, 0xA6, 0xFF, 0xFF, 0x80, 0xF9,
+                /* 15D0 */   0xAD, 0xCD, 0xD7, 0x37, 0xDC, 0x80, 0x7D, 0x75,
+                /* 15D8 */   0xF0, 0x05, 0xC3, 0x27, 0x30, 0xA3, 0xBF, 0xC0,
+                /* 15E0 */   0x3C, 0x89, 0xF9, 0xD8, 0x40, 0x2E, 0x70, 0x74,
+                /* 15E8 */   0xC0, 0xE0, 0x00, 0xF4, 0x80, 0xE1, 0x1F, 0x2E,
+                /* 15F0 */   0xDE, 0xE5, 0xC0, 0x70, 0x15, 0xF4, 0x71, 0xC1,
+                /* 15F8 */   0xC7, 0x1E, 0x2B, 0xBA, 0xCB, 0xA1, 0x6F, 0x72,
+                /* 1600 */   0x86, 0x89, 0x63, 0x88, 0x37, 0x30, 0x76, 0x97,
+                /* 1608 */   0x20, 0x87, 0x39, 0xA8, 0x77, 0x09, 0xCF, 0x81,
+                /* 1610 */   0x9F, 0x2D, 0x7C, 0x82, 0xF3, 0xCD, 0x27, 0xC4,
+                /* 1618 */   0xA9, 0x3E, 0x5A, 0xBD, 0x07, 0xF8, 0xE8, 0xF1,
+                /* 1620 */   0xDE, 0xE5, 0xB3, 0x13, 0xBB, 0x08, 0xF8, 0xC8,
+                /* 1628 */   0x65, 0x1C, 0x4F, 0xD3, 0x57, 0x40, 0x0F, 0xD9,
+                /* 1630 */   0x60, 0xAF, 0x1A, 0x3E, 0x81, 0xF9, 0xE8, 0x86,
+                /* 1638 */   0x3B, 0x46, 0x79, 0x26, 0x9E, 0xBE, 0xEF, 0x20,
+                /* 1640 */   0xEC, 0x48, 0x72, 0xD4, 0xA1, 0xAE, 0xE9, 0x11,
+                /* 1648 */   0xE5, 0x84, 0x0E, 0xC4, 0xB7, 0x36, 0x70, 0x46,
+                /* 1650 */   0xBB, 0x7F, 0xA0, 0xB7, 0xE9, 0x91, 0x61, 0x8E,
+                /* 1658 */   0x06, 0xB0, 0x2E, 0x21, 0x60, 0xF9, 0xFF, 0xDF,
+                /* 1660 */   0x0C, 0xD8, 0x1D, 0xC3, 0x97, 0x10, 0xE0, 0x13,
+                /* 1668 */   0xF4, 0x12, 0x81, 0xBE, 0x66, 0x78, 0x74, 0x8F,
+                /* 1670 */   0x00, 0x98, 0x2B, 0x06, 0x3B, 0x16, 0xF8, 0xB0,
+                /* 1678 */   0xE1, 0x6B, 0x00, 0xBB, 0x17, 0x38, 0xCC, 0x3D,
+                /* 1680 */   0x02, 0x54, 0xA0, 0x1E, 0x1E, 0x7C, 0xB5, 0xF7,
+                /* 1688 */   0x08, 0x50, 0x9C, 0x2C, 0x7D, 0x68, 0xF0, 0x40,
+                /* 1690 */   0xAD, 0xEA, 0x8C, 0x09, 0xE5, 0x88, 0xC9, 0xA1,
+                /* 1698 */   0xA2, 0xB1, 0x5B, 0x01, 0xBB, 0x5D, 0xFA, 0x26,
+                /* 16A0 */   0x01, 0x37, 0xCF, 0x2C, 0x50, 0x49, 0x6E, 0x12,
+                /* 16A8 */   0xD0, 0x61, 0xBA, 0xBC, 0xCC, 0xD0, 0xF9, 0x1F,
+                /* 16B0 */   0xB8, 0x6F, 0x75, 0x1E, 0xA1, 0x0F, 0x11, 0x0C,
+                /* 16B8 */   0xE5, 0x3D, 0xCF, 0xA7, 0x30, 0x7E, 0x86, 0xF0,
+                /* 16C0 */   0x01, 0x93, 0x9D, 0x29, 0xF8, 0x59, 0x13, 0x77,
+                /* 16C8 */   0x07, 0x30, 0xCA, 0x9B, 0xA7, 0x27, 0xC0, 0xCE,
+                /* 16D0 */   0x9F, 0x46, 0x7E, 0x37, 0x78, 0x17, 0xF0, 0xF4,
+                /* 16D8 */   0x7D, 0x2F, 0xE2, 0x87, 0x04, 0xF6, 0xFF, 0x3F,
+                /* 16E0 */   0x51, 0x80, 0x29, 0xD8, 0x9D, 0x0E, 0x0A, 0xF4,
+                /* 16E8 */   0x09, 0x79, 0x44, 0x46, 0xF5, 0x11, 0x81, 0x5F,
+                /* 16F0 */   0x92, 0xC0, 0x78, 0x24, 0xF1, 0x81, 0x02, 0x08,
+                /* 16F8 */   0xDD, 0x0B, 0x50, 0xA7, 0x0F, 0x7E, 0x78, 0xF6,
+                /* 1700 */   0x05, 0xD5, 0x98, 0xEF, 0x56, 0x8F, 0x70, 0x9E,
+                /* 1708 */   0x1C, 0xE6, 0x72, 0xC0, 0xE2, 0x5C, 0x93, 0x40,
+                /* 1710 */   0x75, 0xDC, 0xE5, 0xA3, 0x83, 0x7B, 0x6D, 0xC5,
+                /* 1718 */   0x0F, 0xEE, 0x9D, 0xE5, 0x9D, 0xCF, 0x50, 0x1E,
+                /* 1720 */   0x24, 0xF8, 0xAE, 0xAD, 0xE0, 0xB8, 0xAA, 0xC1,
+                /* 1728 */   0x38, 0xB6, 0xF0, 0x4B, 0x1E, 0xBC, 0xFF, 0xFF,
+                /* 1730 */   0x25, 0x0F, 0xB0, 0x30, 0x2C, 0x2E, 0xF8, 0xEF,
+                /* 1738 */   0x61, 0x20, 0x2A, 0x11, 0x06, 0x45, 0x60, 0x79,
+                /* 1740 */   0xF7, 0x56, 0x0A, 0x7F, 0xC8, 0x60, 0xBC, 0x29,
+                /* 1748 */   0xF0, 0x49, 0x63, 0x47, 0x0D, 0xD8, 0x19, 0x2A,
+                /* 1750 */   0xEE, 0xA6, 0x08, 0xD6, 0xA9, 0x62, 0x86, 0xC0,
+                /* 1758 */   0x83, 0x3D, 0x00, 0x7C, 0xBE, 0xF2, 0x19, 0x40,
+                /* 1760 */   0x51, 0x60, 0xC8, 0xFF, 0x1F, 0x86, 0x1D, 0xDA,
+                /* 1768 */   0xE1, 0xDC, 0x86, 0x01, 0x07, 0x23, 0xC6, 0x5D,
+                /* 1770 */   0x0A, 0xE1, 0x4E, 0xF9, 0x1D, 0x25, 0xF6, 0x73,
+                /* 1778 */   0x39, 0x9B, 0x2E, 0xEE, 0x6A, 0xEE, 0xD3, 0x09,
+                /* 1780 */   0xBB, 0x20, 0xC3, 0x38, 0x0B, 0x3C, 0x02, 0xBC,
+                /* 1788 */   0x9A, 0xF3, 0x0B, 0xF2, 0x0B, 0xF1, 0x0B, 0xC1,
+                /* 1790 */   0x1B, 0xB2, 0x6F, 0x4A, 0xCF, 0x06, 0x2F, 0x3B,
+                /* 1798 */   0x31, 0xDE, 0x8D, 0x7D, 0x4A, 0xF6, 0x79, 0xE7,
+                /* 17A0 */   0x05, 0xD9, 0x18, 0x47, 0x13, 0x31, 0xCA, 0xB9,
+                /* 17A8 */   0x3D, 0x0C, 0xBC, 0x26, 0x1B, 0xE5, 0xFD, 0xE4,
+                /* 17B0 */   0x85, 0x20, 0x62, 0x34, 0x43, 0x04, 0x8D, 0x11,
+                /* 17B8 */   0xE8, 0x7D, 0xD9, 0x78, 0x2F, 0xC8, 0x4C, 0xE0,
+                /* 17C0 */   0x5B, 0x41, 0x07, 0x17, 0x5F, 0x90, 0x01, 0x43,
+                /* 17C8 */   0xFF, 0xFF, 0x0B, 0x32, 0xB0, 0x3F, 0x19, 0x01,
+                /* 17D0 */   0x3E, 0x4F, 0x1C, 0xB8, 0x4B, 0x35, 0xF8, 0x4E,
+                /* 17D8 */   0x36, 0xC0, 0xFA, 0xFF, 0x7F, 0xB2, 0x01, 0xFB,
+                /* 17E0 */   0xD0, 0x7D, 0xB2, 0x01, 0xF7, 0x68, 0xE1, 0x1D,
+                /* 17E8 */   0x4D, 0x10, 0x27, 0x1B, 0x0A, 0xE4, 0xE0, 0xEB,
+                /* 17F0 */   0xA2, 0x70, 0x3C, 0xF4, 0x49, 0x84, 0x1E, 0x9D,
+                /* 17F8 */   0x7C, 0x94, 0xC4, 0x9D, 0x19, 0x3C, 0x91, 0x77,
+                /* 1800 */   0x16, 0x8F, 0xE2, 0x65, 0xD0, 0xF7, 0x82, 0x13,
+                /* 1808 */   0x79, 0x7D, 0xB0, 0x9C, 0x63, 0x24, 0xA8, 0x46,
+                /* 1810 */   0xE2, 0xE3, 0x03, 0xFC, 0xEB, 0x8B, 0x8F, 0x91,
+                /* 1818 */   0xF0, 0xF9, 0xFC, 0xC3, 0xF2, 0x60, 0x0C, 0xE9,
+                /* 1820 */   0x53, 0x24, 0x07, 0x79, 0x76, 0x79, 0x0C, 0xE1,
+                /* 1828 */   0x17, 0x48, 0xB8, 0xA7, 0x99, 0x03, 0xC0, 0xC8,
+                /* 1830 */   0xBA, 0x3C, 0xA2, 0xCF, 0x8E, 0x1C, 0x23, 0xAE,
+                /* 1838 */   0x2F, 0x8A, 0xBE, 0x02, 0xFB, 0x20, 0x70, 0x3E,
+                /* 1840 */   0xCF, 0x89, 0xE0, 0xFA, 0xFF, 0x9F, 0x13, 0x31,
+                /* 1848 */   0xA3, 0xE6, 0x47, 0x1B, 0x3E, 0x7E, 0x0E, 0xFE,
+                /* 1850 */   0x56, 0xF0, 0x40, 0xE9, 0x63, 0x51, 0x88, 0x47,
+                /* 1858 */   0x24, 0x7E, 0x4E, 0x04, 0x97, 0x89, 0x73, 0x22,
+                /* 1860 */   0x90, 0x38, 0xF4, 0xC2, 0x38, 0x2D, 0xE0, 0x06,
+                /* 1868 */   0xE2, 0x33, 0x25, 0x76, 0xCA, 0x27, 0xC2, 0xCE,
+                /* 1870 */   0x25, 0x98, 0xD1, 0x81, 0xEB, 0x72, 0xEF, 0xD1,
+                /* 1878 */   0x81, 0xFF, 0x24, 0x80, 0xC7, 0x7A, 0xBC, 0x03,
+                /* 1880 */   0xDF, 0x49, 0xDD, 0x77, 0x13, 0x5F, 0x64, 0x7C,
+                /* 1888 */   0x28, 0x7A, 0x6C, 0x01, 0x56, 0xFF, 0xFF, 0xF3,
+                /* 1890 */   0x1D, 0x60, 0x2A, 0xDC, 0xE1, 0x0E, 0x15, 0xE7,
+                /* 1898 */   0x7C, 0x07, 0x50, 0xE3, 0x6C, 0xFD, 0x7C, 0x07,
+                /* 18A0 */   0xAE, 0xFF, 0xFF, 0xF9, 0x0E, 0x86, 0xC8, 0xF3,
+                /* 18A8 */   0x1D, 0x40, 0xF6, 0xFF, 0xFF, 0x19, 0x00, 0x73,
+                /* 18B0 */   0x46, 0xC3, 0x9D, 0xEF, 0xC0, 0x76, 0xB4, 0x01,
+                /* 18B8 */   0xCC, 0x4D, 0xE3, 0xD1, 0x06, 0xDC, 0xC3, 0x85,
+                /* 18C0 */   0x3D, 0x0C, 0x9E, 0xE1, 0x0D, 0xE5, 0x43, 0x01,
+                /* 18C8 */   0x95, 0x74, 0xCA, 0xA6, 0x30, 0x66, 0xF1, 0x91,
+                /* 18D0 */   0xC1, 0x07, 0x05, 0x7E, 0x64, 0xF0, 0x39, 0xE1,
+                /* 18D8 */   0xF1, 0xE1, 0x50, 0xD9, 0x11, 0xC6, 0x97, 0x10,
+                /* 18E0 */   0x1F, 0x15, 0x58, 0xF4, 0x71, 0xD2, 0x13, 0x14,
+                /* 18E8 */   0x18, 0x87, 0xF8, 0xC8, 0xE7, 0x41, 0x3C, 0xD9,
+                /* 18F0 */   0xC0, 0x3A, 0x17, 0xFC, 0xFF, 0x9F, 0x0B, 0x00,
+                /* 18F8 */   0x33, 0x3A, 0x9F, 0x6F, 0x1A, 0xB9, 0x35, 0x82,
+                /* 1900 */   0xC8, 0xC6, 0x51, 0x84, 0x72, 0x38, 0xC9, 0xE2,
+                /* 1908 */   0x74, 0x11, 0xF4, 0x09, 0xC9, 0xD7, 0x8B, 0x53,
+                /* 1910 */   0x39, 0x55, 0xFC, 0x55, 0xC4, 0xCA, 0x21, 0x05,
+                /* 1918 */   0xEF, 0xE3, 0x8A, 0x35, 0xC3, 0x28, 0xDE, 0x6B,
+                /* 1920 */   0x44, 0xA3, 0xF1, 0x08, 0x1C, 0x08, 0x46, 0x70,
+                /* 1928 */   0x06, 0xF1, 0x49, 0xC4, 0xD9, 0x8E, 0x3A, 0x68,
+                /* 1930 */   0x25, 0xE7, 0x3D, 0x32, 0x06, 0x76, 0xD0, 0xC1,
+                /* 1938 */   0x04, 0xB9, 0x9E, 0xD0, 0x99, 0xFB, 0x72, 0xC0,
+                /* 1940 */   0x35, 0x40, 0xE8, 0x00, 0x62, 0x70, 0x5F, 0x52,
+                /* 1948 */   0x60, 0x5C, 0xA8, 0x7C, 0x49, 0xC1, 0x9C, 0x8D,
+                /* 1950 */   0x3C, 0x1B, 0xAB, 0x01, 0x45, 0x0D, 0xC0, 0x68,
+                /* 1958 */   0x98, 0x73, 0xC0, 0xC3, 0x09, 0xB8, 0x72, 0x5D,
+                /* 1960 */   0xF8, 0xD0, 0x2F, 0x09, 0xDF, 0x2D, 0x1E, 0x6C,
+                /* 1968 */   0xD8, 0xDC, 0xC0, 0xF5, 0xFF, 0x9F, 0x1B, 0xCC,
+                /* 1970 */   0xF1, 0x7B, 0x6E, 0xB0, 0xD0, 0x3C, 0x37, 0xF8,
+                /* 1978 */   0xF7, 0x3D, 0xEC, 0xE1, 0x10, 0x8F, 0xCC, 0xE6,
+                /* 1980 */   0xF6, 0x1C, 0x10, 0xE1, 0x15, 0xC1, 0x97, 0x1C,
+                /* 1988 */   0x8F, 0x0E, 0x38, 0x00, 0x7A, 0x74, 0xB0, 0x90,
+                /* 1990 */   0x3C, 0x3A, 0xB0, 0x25, 0x1C, 0x1D, 0x5A, 0x0F,
+                /* 1998 */   0x88, 0x5C, 0x9E, 0xB1, 0xC8, 0xC9, 0xE4, 0xF4,
+                /* 19A0 */   0x4E, 0xE6, 0x99, 0xE0, 0xEC, 0x9E, 0x2E, 0x82,
+                /* 19A8 */   0x04, 0x8A, 0x13, 0xFD, 0xD9, 0xC4, 0x13, 0x04,
+                /* 19B0 */   0x0E, 0x03, 0xF0, 0x04, 0x61, 0xA1, 0x79, 0x82,
+                /* 19B8 */   0x60, 0x8B, 0x78, 0xCD, 0x40, 0xDF, 0x3C, 0x61,
+                /* 19C0 */   0x60, 0xFF, 0xFF, 0x5F, 0xE7, 0x98, 0xF7, 0xDB,
+                /* 19C8 */   0x0D, 0xB9, 0x11, 0x00, 0x8F, 0x4B, 0xA1, 0x47,
+                /* 19D0 */   0x08, 0x0B, 0xCD, 0x47, 0x0D, 0xB0, 0xC5, 0x1B,
+                /* 19D8 */   0x21, 0x7A, 0x58, 0xBE, 0x95, 0x9C, 0xDF, 0xC9,
+                /* 19E0 */   0x1D, 0x1F, 0xB0, 0x02, 0xF6, 0xF8, 0x60, 0xA1,
+                /* 19E8 */   0x78, 0x7C, 0x60, 0xD3, 0x77, 0x37, 0x02, 0x05,
+                /* 19F0 */   0x90, 0x4F, 0x42, 0x3E, 0x9F, 0xBC, 0x0C, 0xB1,
+                /* 19F8 */   0x31, 0xBC, 0x4D, 0x19, 0xCD, 0xE8, 0x3C, 0xD3,
+                /* 1A00 */   0x96, 0x74, 0xBE, 0xE1, 0x29, 0x60, 0x74, 0x76,
+                /* 1A08 */   0x31, 0x88, 0x6F, 0x24, 0x56, 0x08, 0xA2, 0x63,
+                /* 1A10 */   0x08, 0xFE, 0xBA, 0xEB, 0x19, 0xBD, 0x29, 0x78,
+                /* 1A18 */   0xB6, 0x26, 0xA8, 0x07, 0x52, 0x27, 0x4F, 0x38,
+                /* 1A20 */   0xB7, 0x0B, 0xF6, 0xFF, 0x3F, 0x48, 0xB1, 0xBB,
+                /* 1A28 */   0xB5, 0xCF, 0xD8, 0xF0, 0x0F, 0x99, 0x1E, 0x8F,
+                /* 1A30 */   0x6D, 0x1C, 0x8C, 0xE8, 0x09, 0xCB, 0x87, 0x6C,
+                /* 1A38 */   0x7E, 0x98, 0x78, 0x52, 0x62, 0xE7, 0xC9, 0x04,
+                /* 1A40 */   0x6F, 0x94, 0x09, 0x7A, 0x3B, 0x5F, 0xD3, 0x9B,
+                /* 1A48 */   0xB6, 0x21, 0xA3, 0x32, 0x58, 0x43, 0x3C, 0xF3,
+                /* 1A50 */   0x32, 0x7D, 0xEB, 0xD3, 0x71, 0x1B, 0xAE, 0x1E,
+                /* 1A58 */   0x40, 0x8D, 0x85, 0x2B, 0x81, 0xD1, 0xA0, 0xC3,
+                /* 1A60 */   0x3D, 0x5D, 0xBD, 0x5D, 0xF9, 0xB2, 0xE0, 0x0B,
+                /* 1A68 */   0x83, 0x2F, 0x54, 0x3E, 0x7C, 0x1A, 0xEC, 0xBC,
+                /* 1A70 */   0x22, 0xBC, 0x30, 0xF8, 0x36, 0xC5, 0x8E, 0xD7,
+                /* 1A78 */   0x0C, 0x32, 0x54, 0x9C, 0xC0, 0x6F, 0xD7, 0x1C,
+                /* 1A80 */   0x2C, 0xEC, 0x63, 0xC0, 0xE3, 0x86, 0xEF, 0x65,
+                /* 1A88 */   0xEC, 0x26, 0x10, 0xEB, 0x31, 0xC9, 0x23, 0xE6,
+                /* 1A90 */   0xF7, 0xA9, 0x03, 0x8A, 0xF4, 0xFC, 0xE3, 0x09,
+                /* 1A98 */   0xF8, 0x92, 0xE5, 0xFB, 0xE3, 0x49, 0xF9, 0xAC,
+                /* 1AA0 */   0x6A, 0xF4, 0x57, 0x09, 0x5F, 0xCA, 0x8C, 0xEC,
+                /* 1AA8 */   0x13, 0x18, 0xBB, 0x49, 0xB2, 0x41, 0xF1, 0xAB,
+                /* 1AB0 */   0xA9, 0x0F, 0x21, 0x9E, 0x0A, 0xBB, 0x3F, 0x61,
+                /* 1AB8 */   0xC0, 0x8E, 0xC0, 0xA7, 0x43, 0x7E, 0x74, 0x09,
+                /* 1AC0 */   0x14, 0xA5, 0x78, 0x4C, 0xDD, 0x1C, 0x3C, 0x43,
+                /* 1AC8 */   0x83, 0x62, 0xE0, 0x0F, 0x92, 0xCD, 0x2E, 0xAE,
+                /* 1AD0 */   0xB1, 0x7C, 0x2F, 0x31, 0x22, 0x76, 0x40, 0x0C,
+                /* 1AD8 */   0xE5, 0x3D, 0xD2, 0xEA, 0x51, 0xC8, 0x1C, 0x3C,
+                /* 1AE0 */   0x22, 0xCF, 0xC6, 0xD3, 0x61, 0xA7, 0x0E, 0xFC,
+                /* 1AE8 */   0x24, 0x7C, 0x6A, 0xF2, 0xC1, 0xCE, 0x03, 0xF2,
+                /* 1AF0 */   0x50, 0xF8, 0x14, 0x19, 0xB0, 0xFF, 0xFF, 0xC0,
+                /* 1AF8 */   0x78, 0x98, 0x97, 0x00, 0x06, 0xED, 0xE1, 0x33,
+                /* 1B00 */   0xF4, 0x17, 0x23, 0xA3, 0xF3, 0xF3, 0xCE, 0xE9,
+                /* 1B08 */   0xF8, 0x1C, 0xEA, 0xA3, 0x86, 0xEF, 0x01, 0x98,
+                /* 1B10 */   0x33, 0x99, 0x4F, 0x00, 0x3E, 0xB3, 0x31, 0xA0,
+                /* 1B18 */   0x47, 0x7B, 0x06, 0xF2, 0xBE, 0xCA, 0x2E, 0x3F,
+                /* 1B20 */   0x18, 0xA4, 0x77, 0x5D, 0x9F, 0x7E, 0x30, 0xF7,
+                /* 1B28 */   0x33, 0x0E, 0x16, 0xE8, 0x58, 0xF9, 0x64, 0xE2,
+                /* 1B30 */   0x79, 0xC2, 0x1E, 0x29, 0x9C, 0xDB, 0x26, 0x8C,
+                /* 1B38 */   0x2B, 0x2F, 0xBF, 0x06, 0xF2, 0x5B, 0x39, 0xB8,
+                /* 1B40 */   0xAE, 0x18, 0x3E, 0x99, 0x80, 0x19, 0x1E, 0x13,
+                /* 1B48 */   0xE8, 0x3C, 0x43, 0x65, 0x8D, 0x0B, 0x75, 0xA4,
+                /* 1B50 */   0xF1, 0x35, 0x95, 0x61, 0x3F, 0x0C, 0x78, 0xD2,
+                /* 1B58 */   0x87, 0x79, 0x82, 0x2F, 0x6B, 0x18, 0x58, 0x5F,
+                /* 1B60 */   0x4A, 0x38, 0xAC, 0xD1, 0xC2, 0xBE, 0x0E, 0x18,
+                /* 1B68 */   0xF6, 0x11, 0x10, 0x77, 0xFD, 0x05, 0x0B, 0x20,
+                /* 1B70 */   0xFE, 0x92, 0xF0, 0x60, 0xE0, 0x09, 0x18, 0x90,
+                /* 1B78 */   0xC5, 0x59, 0x15, 0x15, 0xB1, 0x1C, 0x05, 0x80,
+                /* 1B80 */   0x41, 0xFD, 0xFF, 0x47, 0xE7, 0xFB, 0x37, 0xE0,
+                /* 1B88 */   0xE4, 0xB2, 0x8D, 0xBF, 0x47, 0xBC, 0x1E, 0x78,
+                /* 1B90 */   0xB0, 0xEC, 0xB2, 0xFD, 0x20, 0xF3, 0x80, 0xF0,
+                /* 1B98 */   0x1C, 0xF3, 0x0E, 0xF3, 0x50, 0xF0, 0x2E, 0x13,
+                /* 1BA0 */   0x21, 0xC8, 0x53, 0xF6, 0x3B, 0x42, 0x84, 0x50,
+                /* 1BA8 */   0x81, 0x5E, 0xB6, 0x8D, 0x17, 0xF4, 0x65, 0x22,
+                /* 1BB0 */   0x4A, 0x9C, 0x28, 0x11, 0x42, 0x19, 0xE3, 0x5C,
+                /* 1BB8 */   0x9E, 0x0E, 0x5E, 0x6A, 0xC2, 0x3D, 0x26, 0x04,
+                /* 1BC0 */   0x7E, 0x72, 0x88, 0x12, 0xD8, 0x63, 0x7C, 0xD9,
+                /* 1BC8 */   0x66, 0xE2, 0x2F, 0x32, 0xBA, 0x27, 0xF9, 0xB2,
+                /* 1BD0 */   0x0D, 0x38, 0xFF, 0xFF, 0x5F, 0xB6, 0xC1, 0x75,
+                /* 1BD8 */   0x71, 0x06, 0xF3, 0x8D, 0x16, 0x30, 0x77, 0x71,
+                /* 1BE0 */   0x06, 0xFB, 0x70, 0x61, 0x0F, 0x83, 0x87, 0x79,
+                /* 1BE8 */   0x4F, 0xF8, 0x50, 0x42, 0xE5, 0xC3, 0xA0, 0xCE,
+                /* 1BF0 */   0x25, 0xC0, 0xF1, 0xFF, 0x7F, 0x2E, 0x01, 0x46,
+                /* 1BF8 */   0x33, 0x7A, 0x03, 0x78, 0x15, 0x38, 0xED, 0x47,
+                /* 1C00 */   0x91, 0x87, 0x92, 0x43, 0x88, 0xF1, 0x3E, 0x12,
+                /* 1C08 */   0xC4, 0x08, 0x87, 0xFE, 0x5C, 0xE2, 0xEB, 0xC8,
+                /* 1C10 */   0x93, 0x5B, 0x88, 0x28, 0xEF, 0x27, 0x4F, 0x28,
+                /* 1C18 */   0x86, 0x88, 0x12, 0x2C, 0x46, 0xB0, 0xD0, 0x4F,
+                /* 1C20 */   0x25, 0xC6, 0x60, 0x87, 0x94, 0x20, 0xE1, 0x9E,
+                /* 1C28 */   0x4B, 0x98, 0xF4, 0xEF, 0x9D, 0xCE, 0xB9, 0x3E,
+                /* 1C30 */   0x97, 0x00, 0xFC, 0x08, 0x77, 0xB7, 0x45, 0x9F,
+                /* 1C38 */   0x1B, 0x7C, 0x4C, 0xF0, 0xF9, 0xC0, 0x10, 0x8D,
+                /* 1C40 */   0x5F, 0x0C, 0xC8, 0xF5, 0xCD, 0x77, 0x04, 0x1F,
+                /* 1C48 */   0x13, 0x5E, 0xE0, 0x18, 0x81, 0xFF, 0xFF, 0x01,
+                /* 1C50 */   0x86, 0x4E, 0xCF, 0x9D, 0xE0, 0x18, 0x94, 0x87,
+                /* 1C58 */   0x07, 0xFE, 0x03, 0x19, 0x3E, 0xFC, 0x75, 0x12,
+                /* 1C60 */   0x75, 0x4C, 0xE0, 0xC3, 0x83, 0x77, 0xFA, 0x73,
+                /* 1C68 */   0xC8, 0xA3, 0x18, 0x1D, 0x1C, 0x38, 0x9E, 0xEF,
+                /* 1C70 */   0x1A, 0x1C, 0x08, 0x0E, 0x27, 0x0F, 0x1E, 0xD8,
+                /* 1C78 */   0xC3, 0x19, 0x9B, 0x38, 0x1F, 0xC2, 0xD1, 0xF8,
+                /* 1C80 */   0x08, 0x00, 0x8E, 0xB3, 0x03, 0xF8, 0xA2, 0x0E,
+                /* 1C88 */   0x17, 0x7D, 0x38, 0xF0, 0x1D, 0x13, 0x06, 0xFA,
+                /* 1C90 */   0x6B, 0x86, 0x6F, 0x6F, 0x46, 0xE7, 0x71, 0x06,
+                /* 1C98 */   0x0C, 0xAA, 0xC1, 0x7A, 0xC0, 0xF0, 0xFF, 0xFF,
+                /* 1CA0 */   0x67, 0x40, 0xFC, 0x0C, 0x5E, 0x2E, 0x9E, 0x2C,
+                /* 1CA8 */   0xF8, 0x28, 0xC1, 0x77, 0xE2, 0xF3, 0x89, 0x02,
+                /* 1CB0 */   0x37, 0x18, 0x9F, 0xEA, 0x31, 0x67, 0x09, 0xB0,
+                /* 1CB8 */   0x5D, 0x57, 0x7D, 0x96, 0x00, 0x3E, 0xF2, 0x0E,
+                /* 1CC0 */   0x58, 0xA0, 0x39, 0x20, 0xC1, 0x38, 0x59, 0x01,
+                /* 1CC8 */   0x76, 0xC6, 0xF1, 0x64, 0x05, 0xE6, 0xFF, 0xFF,
+                /* 1CD0 */   0xF0, 0x7C, 0x04, 0xC7, 0x8F, 0x81, 0x2B, 0xB4,
+                /* 1CD8 */   0xE9, 0x53, 0xA3, 0x51, 0xAB, 0x06, 0x65, 0x6A,
+                /* 1CE0 */   0x94, 0x69, 0x50, 0xAB, 0x4F, 0xA5, 0xC6, 0x8C,
+                /* 1CE8 */   0x09, 0x3B, 0x55, 0x29, 0xE0, 0xB3, 0x41, 0x03,
+                /* 1CF0 */   0xB3, 0x3C, 0x0A, 0x81, 0x58, 0xCC, 0x9B, 0x42,
+                /* 1CF8 */   0x20, 0x0E, 0x0B, 0x42, 0x23, 0x1D, 0x8E, 0x04,
+                /* 1D00 */   0x62, 0xC9, 0x47, 0x2C, 0x81, 0x58, 0xAE, 0x07,
+                /* 1D08 */   0x10, 0x16, 0xF0, 0x4D, 0x22, 0x70, 0xF2, 0x46,
+                /* 1D10 */   0x12, 0x38, 0x79, 0x26, 0x08, 0xC4, 0x91, 0x41,
+                /* 1D18 */   0xA8, 0x50, 0x1D, 0x20, 0x2C, 0x26, 0x08, 0x0D,
+                /* 1D20 */   0xE5, 0x03, 0x84, 0x49, 0x7F, 0x1A, 0x08, 0x90,
+                /* 1D28 */   0x18, 0x01, 0x61, 0xE1, 0x1E, 0x12, 0x02, 0xB1,
+                /* 1D30 */   0xB4, 0xE7, 0x83, 0x40, 0x2C, 0xC4, 0x0A, 0x08,
+                /* 1D38 */   0x8B, 0x0B, 0x42, 0xC3, 0x69, 0x01, 0x61, 0x92,
+                /* 1D40 */   0xCC, 0x80, 0xB0, 0x40, 0x20, 0x54, 0xFE, 0x2B,
+                /* 1D48 */   0x5D, 0x20, 0x16, 0xE9, 0x06, 0x90, 0x2E, 0x5D,
+                /* 1D50 */   0x20, 0x0E, 0xA2, 0x07, 0x84, 0xC9, 0xF0, 0x03,
+                /* 1D58 */   0xC2, 0x42, 0x83, 0xD0, 0x68, 0xEF, 0x09, 0x01,
+                /* 1D60 */   0x12, 0x43, 0x20, 0x2C, 0xBE, 0x23, 0x10, 0x26,
+                /* 1D68 */   0xFE, 0x69, 0x22, 0x10, 0xE7, 0xB7, 0x04, 0x71,
+                /* 1D70 */   0x53, 0x1A, 0x62, 0x4D, 0x40, 0x4C, 0x83, 0x27,
+                /* 1D78 */   0x20, 0xA6, 0x08, 0x44, 0x40, 0x8E, 0xFD, 0xD2,
+                /* 1D80 */   0x10, 0x90, 0x35, 0x98, 0x02, 0x62, 0xD1, 0x41,
+                /* 1D88 */   0x04, 0x64, 0x21, 0xAA, 0x80, 0x58, 0x5E, 0x57,
+                /* 1D90 */   0x40, 0x2C, 0x3C, 0x88, 0x80, 0x9C, 0xF9, 0xCD,
+                /* 1D98 */   0x2A, 0x20, 0x2B, 0x78, 0x74, 0x3D, 0x04, 0xB0,
+                /* 1DA0 */   0xAF, 0xBC, 0x80, 0x9C, 0x1C, 0x44, 0x40, 0x0E,
+                /* 1DA8 */   0xEC, 0x0B, 0x88, 0xC5, 0x07, 0x11, 0x90, 0xB3,
+                /* 1DB0 */   0xFE, 0xC1, 0x05, 0xE4, 0xE0, 0x20, 0x1A, 0x04,
+                /* 1DB8 */   0xF9, 0x68, 0x08, 0xC8, 0xE9, 0x41, 0x04, 0x44,
+                /* 1DC0 */   0x7E, 0xE4, 0x02, 0xB1, 0xDA, 0x2F, 0xB9, 0x40,
+                /* 1DC8 */   0xAC, 0xE7, 0x4F, 0xAE, 0xA1, 0x10, 0x10, 0xAA,
+                /* 1DD0 */   0x5C, 0xDD, 0x49, 0x85, 0xFD, 0xFF, 0x73, 0x80,
+                /* 1DD8 */   0xD0, 0x5C, 0x20, 0x02, 0xB3, 0x0A, 0x77, 0x40,
+                /* 1DE0 */   0x4C, 0x15, 0x88, 0x80, 0x9C, 0x00, 0x88, 0xA6,
+                /* 1DE8 */   0x02, 0xA1, 0x29, 0xC1, 0xA8, 0xAE, 0x37, 0x88,
+                /* 1DF0 */   0x80, 0x9C, 0x00, 0x84, 0xA6, 0x02, 0xA1, 0x29,
+                /* 1DF8 */   0x41, 0x04, 0x68, 0x55, 0xF6, 0x80, 0x98, 0x52,
+                /* 1E00 */   0x10, 0xAA, 0x1C, 0x84, 0xA6, 0x03, 0xA1, 0xB2,
+                /* 1E08 */   0xDF, 0xFD, 0x3A, 0x2C, 0x10, 0x10, 0x01, 0x39,
+                /* 1E10 */   0x3A, 0x08, 0x15, 0xEE, 0x0F, 0x84, 0xE9, 0x7D,
+                /* 1E18 */   0x66, 0x08, 0xD0, 0xE9, 0x40, 0x04, 0xE4, 0xC4,
+                /* 1E20 */   0x20, 0x54, 0xC1, 0x0F, 0x23, 0x08, 0x11, 0x0B,
+                /* 1E28 */   0x42, 0x15, 0xFC, 0x30, 0x82, 0x12, 0x2D, 0x2F,
+                /* 1E30 */   0x0E, 0x01, 0x59, 0x1F, 0x08, 0xD5, 0x0B, 0x22,
+                /* 1E38 */   0x30, 0x67, 0x03, 0xA2, 0x79, 0x41, 0x68, 0x7E,
+                /* 1E40 */   0x30, 0xAA, 0xD5, 0x28, 0x10, 0xD3, 0x0F, 0x42,
+                /* 1E48 */   0xF3, 0x80, 0x08, 0xCC, 0x0A, 0xDE, 0x1E, 0x07,
+                /* 1E50 */   0xCC, 0x40, 0xA8, 0x4A, 0x10, 0x81, 0x39, 0x17,
+                /* 1E58 */   0x10, 0xCD, 0x0A, 0x42, 0xB3, 0x83, 0x51, 0xED,
+                /* 1E60 */   0x9F, 0x10, 0x0D, 0x80, 0x80, 0xD0, 0x7C, 0x20,
+                /* 1E68 */   0x3A, 0x0C, 0x90, 0xE7, 0xA0, 0x80, 0xAC, 0x11,
+                /* 1E70 */   0x84, 0x6A, 0x06, 0xD1, 0xF1, 0x80, 0x00, 0xD1,
+                /* 1E78 */   0xFC, 0x20, 0x54, 0xCF, 0xC7, 0x24, 0x18, 0xC9,
+                /* 1E80 */   0x00, 0x22, 0x20, 0x6B, 0xF9, 0xF2, 0x07, 0x22,
+                /* 1E88 */   0xFA, 0x41, 0x04, 0xE4, 0x4C, 0x20, 0x34, 0x23,
+                /* 1E90 */   0x18, 0x55, 0xFB, 0x2E, 0xD2, 0x71, 0x80, 0x80,
+                /* 1E98 */   0xD0, 0x44, 0x20, 0x1A, 0x1E, 0x79, 0xED, 0x1C,
+                /* 1EA0 */   0x1E, 0x03, 0xA1, 0x2A, 0x41, 0x04, 0x66, 0x8D,
+                /* 1EA8 */   0x0F, 0x4C, 0x81, 0x38, 0x21, 0x08, 0x55, 0x6F,
+                /* 1EB0 */   0xF7, 0xC0, 0x40, 0xF5, 0x82, 0xB0, 0xFF, 0xBF,
+                /* 1EB8 */   0x5A, 0xC1, 0x83, 0xA0, 0x20, 0x34, 0x11, 0x88,
+                /* 1EC0 */   0x0E, 0x19, 0xE4, 0xD5, 0x12, 0x88, 0xE8, 0x02,
+                /* 1EC8 */   0xA1, 0x3A, 0x41, 0x34, 0x64, 0x02, 0x44, 0xB3,
+                /* 1ED0 */   0x82, 0xD0, 0xEC, 0x60, 0x34, 0xFB, 0xF3, 0x45,
+                /* 1ED8 */   0xC3, 0x20, 0x5F, 0x25, 0x1D, 0x18, 0xC8, 0xE3,
+                /* 1EE0 */   0x31, 0x08, 0x51, 0xF4, 0x6D, 0x12, 0x88, 0x73,
+                /* 1EE8 */   0x3F, 0x80, 0x34, 0x50, 0xF2, 0x29, 0x0A, 0x42,
+                /* 1EF0 */   0xB4, 0x81, 0x08, 0xCC, 0x39, 0x80, 0x68, 0x36,
+                /* 1EF8 */   0x10, 0x9A, 0x15, 0x8C, 0x66, 0x55, 0x7D, 0xC4,
+                /* 1F00 */   0xA0, 0x4F, 0x9F, 0x43, 0x63, 0x2F, 0x3D, 0x81,
+                /* 1F08 */   0x58, 0xC9, 0xCB, 0xE6, 0xD1, 0x82, 0xFD, 0xBC,
+                /* 1F10 */   0x82, 0xB0, 0x4F, 0x59, 0x60, 0xF6, 0x32, 0xD2,
+                /* 1F18 */   0x31, 0x80, 0x80, 0x50, 0x3D, 0xCF, 0x33, 0x1D,
+                /* 1F20 */   0x01, 0x08, 0x88, 0x8E, 0x00, 0x04, 0x84, 0x66,
+                /* 1F28 */   0x04, 0xA1, 0xD9, 0x41, 0xA8, 0xAE, 0xA7, 0xA3,
+                /* 1F30 */   0x40, 0xAD, 0xED, 0xBF, 0x13, 0x84, 0x24, 0x03,
+                /* 1F38 */   0xA1, 0xAA, 0x7F, 0xF3, 0x41, 0x88, 0xE2, 0xB7,
+                /* 1F40 */   0xA3, 0x86, 0x49, 0x9E, 0x6A, 0x0F, 0x01, 0xEC,
+                /* 1F48 */   0xA5, 0x28, 0x70, 0xEB, 0x06, 0xA1, 0x39, 0x40,
+                /* 1F50 */   0x34, 0x50, 0x02, 0x44, 0xB5, 0xFC, 0x2E, 0x35,
+                /* 1F58 */   0x50, 0x02, 0x22, 0x30, 0x67, 0x02, 0xA2, 0x39,
+                /* 1F60 */   0x41, 0xA8, 0x0A, 0xFD, 0xC3, 0xA0, 0x20, 0x02,
+                /* 1F68 */   0x72, 0x0A, 0x10, 0x9A, 0x0A, 0x8C, 0xEA, 0xF0,
+                /* 1F70 */   0x3F, 0x00, 0x0A, 0x42, 0xB5, 0x82, 0xE8, 0x70,
+                /* 1F78 */   0x41, 0x12, 0x80, 0xB0, 0xA4, 0x20, 0x34, 0x45,
+                /* 1F80 */   0x83, 0x83, 0x09, 0x8D, 0x00, 0x48, 0x2B, 0x1C,
+                /* 1F88 */   0x6E, 0x68, 0x08, 0x70, 0x16, 0x0A, 0x84, 0x06,
+                /* 1F90 */   0x05, 0xD1, 0xB1, 0xC5, 0xA9, 0x41, 0x04, 0x68,
+                /* 1F98 */   0x81, 0x25, 0x0E, 0x20, 0x14, 0x84, 0xFE, 0xFF,
+                /* 1FA0 */   0x03, 0x80, 0x08, 0xD0, 0x69, 0x40, 0x74, 0x44,
+                /* 1FA8 */   0x20, 0x60, 0x54, 0x47, 0x8A, 0x21, 0x51, 0x10,
+                /* 1FB0 */   0x01, 0x5A, 0x28, 0x88, 0x8E, 0x3E, 0xA4, 0x05,
+                /* 1FB8 */   0x18, 0x13, 0x05, 0x42, 0xC5, 0x83, 0x50, 0xAD,
+                /* 1FC0 */   0x31, 0x40, 0x99, 0x72, 0x10, 0x81, 0x3A, 0x39,
+                /* 1FC8 */   0x88, 0x8E, 0x04, 0xA4, 0xC6, 0xA1, 0x82, 0x82,
+                /* 1FD0 */   0x50, 0xD5, 0x20, 0x54, 0x4E, 0x0E, 0x10, 0x26,
+                /* 1FD8 */   0x0D, 0x84, 0xCA, 0x05, 0xD1, 0x00, 0xAC, 0x1D,
+                /* 1FE0 */   0x44, 0xC7, 0x26, 0x02, 0x46, 0xE3, 0x83, 0x50,
+                /* 1FE8 */   0x49, 0x3D, 0x00, 0x99, 0x3E, 0x10, 0x01, 0x3A,
+                /* 1FF0 */   0x3D, 0x88, 0x0E, 0x03, 0x24, 0xC8, 0x41, 0x84,
+                /* 1FF8 */   0x82, 0x50, 0x89, 0x45, 0x40, 0x99, 0x60, 0x10,
+                /* 2000 */   0x1D, 0x7F, 0x08, 0x88, 0xC0, 0x2C, 0x23, 0x09,
+                /* 2008 */   0x08, 0x13, 0x07, 0x42, 0xC5, 0x82, 0x50, 0x21,
+                /* 2010 */   0x51, 0x40, 0x59, 0x0C, 0x10, 0x1A, 0x24, 0x0B,
+                /* 2018 */   0x18, 0x0B, 0x07, 0x42, 0xC3, 0x82, 0xE8, 0x78,
+                /* 2020 */   0x45, 0xBA, 0x00, 0x31, 0xC9, 0x20, 0x34, 0x02,
+                /* 2028 */   0x08, 0x0D, 0x0B, 0x22, 0x40, 0x12, 0x06, 0x90,
+                /* 2030 */   0x82, 0xD0, 0x08, 0x20, 0x34, 0x2B, 0x08, 0xD5,
+                /* 2038 */   0x5E, 0x06, 0x94, 0x25, 0x06, 0xD1, 0x91, 0x81,
+                /* 2040 */   0xA4, 0x39, 0x9C, 0x50, 0x10, 0x81, 0x39, 0x0D,
+                /* 2048 */   0x10, 0x4D, 0x08, 0x42, 0x13, 0x83, 0x50, 0x79,
+                /* 2050 */   0x6D, 0x40, 0x58, 0x7A, 0x10, 0x1D, 0x1F, 0xC8,
+                /* 2058 */   0x83, 0x51, 0xC7, 0x07, 0x02, 0x42, 0x53, 0x81,
+                /* 2060 */   0xE8, 0xC0, 0x43, 0xEA, 0x1C, 0x78, 0x28, 0x08,
+                /* 2068 */   0x55, 0x0F, 0xA2, 0xC3, 0x03, 0x29, 0x04, 0xC2,
+                /* 2070 */   0x74, 0x26, 0x3A, 0xD6, 0xD0, 0x46, 0x07, 0x03,
+                /* 2078 */   0xFA, 0x08, 0x16, 0xA8, 0xFF, 0xFF, 0x6A, 0x2A,
+                /* 2080 */   0x81, 0x30, 0x75, 0x20, 0x54, 0x3F, 0x08, 0xCD,
+                /* 2088 */   0x0A, 0x22, 0x50, 0xEB, 0xCB, 0x74, 0x10, 0xA0,
+                /* 2090 */   0x20, 0x34, 0x03, 0x88, 0x06, 0x40, 0x80, 0xA8,
+                /* 2098 */   0x9A, 0x4E, 0x03, 0xA0, 0x20, 0x3A, 0xA4, 0x90,
+                /* 20A0 */   0x54, 0xC7, 0x12, 0xDA, 0x0A, 0x84, 0xA5, 0x05,
+                /* 20A8 */   0xA1, 0xC2, 0x7A, 0x81, 0x32, 0x91, 0x20, 0x54,
+                /* 20B0 */   0x38, 0x88, 0x8E, 0x06, 0x4E, 0x01, 0xA2, 0xA3,
+                /* 20B8 */   0x0A, 0x01, 0xA3, 0xD9, 0x41, 0xA8, 0x9E, 0x60,
+                /* 20C0 */   0x80, 0x4C, 0x1C, 0x88, 0x00, 0x9D, 0x04, 0x44,
+                /* 20C8 */   0x83, 0x25, 0x20, 0x34, 0x29, 0x20, 0x8D, 0x0D,
+                /* 20D0 */   0x48, 0xA5, 0x16, 0x3B, 0x46, 0x51, 0x10, 0x1A,
+                /* 20D8 */   0x05, 0x44, 0x80, 0xCE, 0x05, 0xA2, 0xC3, 0x1C,
+                /* 20E0 */   0x49, 0x76, 0xCA, 0xA4, 0x20, 0x54, 0x2C, 0x88,
+                /* 20E8 */   0x0E, 0x17, 0x04, 0x44, 0x80, 0x8E, 0x0A, 0x46,
+                /* 20F0 */   0x63, 0x83, 0x50, 0x29, 0xCD, 0x00, 0x99, 0x2E,
+                /* 20F8 */   0x10, 0x01, 0x3A, 0x35, 0x88, 0xC0, 0xAC, 0x21,
+                /* 2100 */   0xDA, 0x21, 0x81, 0x82, 0xD0, 0x68, 0xD9, 0x40,
+                /* 2108 */   0x59, 0x50, 0x10, 0x1D, 0xED, 0x48, 0x37, 0x30,
+                /* 2110 */   0x26, 0x1F, 0x84, 0x86, 0x02, 0xA1, 0x21, 0x41,
+                /* 2118 */   0x68, 0x80, 0x72, 0x87, 0x38, 0x0A, 0x42, 0xE5,
+                /* 2120 */   0xD4, 0x03, 0x61, 0x61, 0x40, 0xA8, 0xD0, 0x7C,
+                /* 2128 */   0x47, 0x3B, 0xDA, 0x0F, 0x90, 0x06, 0x04, 0x61,
+                /* 2130 */   0xF1, 0x40, 0xE8, 0xFF, 0x1F
             })
         }
-
         OperationRegion (LDPT, SystemIO, 0x80, 0x01)
         Field (LDPT, ByteAcc, NoLock, Preserve)
         {
             LPDG,   8
         }
-
         OperationRegion (LDBP, SystemIO, 0x024C, 0x04)
         Field (LDBP, ByteAcc, NoLock, Preserve)
         {
@@ -27671,76 +25665,65 @@
             LLPD,   8, 
             LUPD,   8
         }
-
         Mutex (LDPS, 0x00)
         Mutex (LEXD, 0x00)
         Name (EDDA, 0x00)
         Method (ODBG, 1, NotSerialized)
         {
             Acquire (LDPS, 0xFFFF)
-            Store (Arg0, LLPD) /* \_SB_.LLPD */
-            Store (Arg0, LPDG) /* \_SB_.LPDG */
+            Store (Arg0, LLPD)
+            Store (Arg0, LPDG)
             Release (LDPS)
             Return (0x00)
         }
-
         Method (ODG1, 1, NotSerialized)
         {
             Acquire (LDPS, 0xFFFF)
-            Store (Arg0, LUPD) /* \_SB_.LUPD */
+            Store (Arg0, LUPD)
             Release (LDPS)
             Return (0x00)
         }
-
         Method (ODGW, 1, NotSerialized)
         {
             Acquire (LDPS, 0xFFFF)
-            Store (And (Arg0, 0xFF), LLPD) /* \_SB_.LLPD */
-            Store (And (ShiftRight (Arg0, 0x08), 0xFF), LUPD) /* \_SB_.LUPD */
-            Store (And (Arg0, 0xFF), LPDG) /* \_SB_.LPDG */
+            Store (And (Arg0, 0xFF), LLPD)
+            Store (And (ShiftRight (Arg0, 0x08), 0xFF), LUPD)
+            Store (And (Arg0, 0xFF), LPDG)
             Release (LDPS)
             Return (0x00)
         }
-
         Method (ODGD, 1, NotSerialized)
         {
             Return (0x00)
         }
-
         Method (OTBY, 1, NotSerialized)
         {
             Return (0x00)
         }
-
         Method (OTWD, 1, NotSerialized)
         {
             Return (0x00)
         }
-
         Method (OTDD, 1, NotSerialized)
         {
             Return (0x00)
         }
-
         Method (ISDR, 0, NotSerialized)
         {
             Return (0x00)
         }
-
         Method (EODB, 0, Serialized)
         {
             Acquire (LEXD, 0xFFFF)
             ODBG (EDDA)
             Release (LEXD)
         }
-
         Method (EODW, 0, Serialized)
         {
             Acquire (LEXD, 0xFFFF)
             ODGW (EDDA)
             Release (LEXD)
         }
-
         Method (EODD, 0, Serialized)
         {
             Acquire (LEXD, 0xFFFF)
@@ -27748,7 +25731,6 @@
             Release (LEXD)
         }
     }
-
     Method (\_SB.DCKD, 0, Serialized)
     {
         Store (0x01, Local0)
@@ -27756,48 +25738,42 @@
         {
             Store (0x00, Local0)
         }
-
         Return (Local0)
     }
-
     Method (\_SB.HST1.ISUD, 0, Serialized)
     {
         Return (0x01)
     }
-
     Method (\_GPE.DKET, 0, Serialized)
     {
         If (LEqual (ICPT, 0x00))
         {
             If (\_SB.DCKD ())
             {
-                Notify (\_SB.PCI0.LPCB.SIO.COM1, 0x00) // Bus Check
+                Notify (\_SB.PCI0.LPCB.SIO.COM1, 0x00)
             }
             Else
             {
-                Notify (\_SB.PCI0.LPCB.SIO.COM1, 0x01) // Device Check
+                Notify (\_SB.PCI0.LPCB.SIO.COM1, 0x01)
             }
         }
     }
-
     Method (\_SB.PCI0.ACEL.ALED, 1, Serialized)
     {
         If (Arg0)
         {
-            Or (GPL2, 0x02, GPL2) /* \GPL2 */
+            Or (GPL2, 0x02, GPL2)
         }
         Else
         {
-            And (GPL2, Not (0x02), GPL2) /* \GPL2 */
+            And (GPL2, Not (0x02), GPL2)
         }
     }
-
     Method (\_SB.GRFS, 0, Serialized)
     {
         Store (\_SB.PCI0.LPCB.EC0.KRFS (), Local0)
         Return (Local0)
     }
-
     Method (\_SB.HODM, 3, NotSerialized)
     {
         Return (Package (0x02)
@@ -27806,25 +25782,22 @@
             0x00
         })
     }
-
     Method (PPTS, 1, Serialized)
     {
         \_SB.SSMI (0x5D, 0x03, 0x00, 0x00, 0x00)
         Store (0x00, Local0)
     }
-
     Method (PWAK, 1, Serialized)
     {
-        Notify (\_SB.PCI0.LPCB.SIO.COM1, 0x00) // Bus Check
-        Notify (\_SB.PCI0.RP02, 0x00) // Bus Check
-        Notify (\_SB.PCI0.EHC1, 0x00) // Bus Check
-        Notify (\_SB.PCI0.EHC2, 0x00) // Bus Check
+        Notify (\_SB.PCI0.LPCB.SIO.COM1, 0x00)
+        Notify (\_SB.PCI0.RP02, 0x00)
+        Notify (\_SB.PCI0.EHC1, 0x00)
+        Notify (\_SB.PCI0.EHC2, 0x00)
         If (LOr (LEqual (Arg0, 0x04), LEqual (Arg0, 0x03)))
         {
             \_SB.SSMI (0x5D, 0x01, 0x00, 0x00, 0x00)
-            Notify (\_SB.PCI0.RP03, 0x00) // Bus Check
+            Notify (\_SB.PCI0.RP03, 0x00)
         }
-
         If (LOr (LEqual (Arg0, 0x04), LEqual (Arg0, 0x03)))
         {
             If (LEqual (\WCOS (), 0x06))
@@ -27833,17 +25806,16 @@
                 {
                     If (\_SB.DCKD ())
                     {
-                        Notify (\_SB.PCI0.RP06.NIC, 0x00) // Bus Check
+                        Notify (\_SB.PCI0.RP06.NIC, 0x00)
                     }
                 }
             }
         }
     }
-
-    Method (\_SB.PCI0.LPCB.PS2M._HID, 0, Serialized)  // _HID: Hardware ID
+    Method (\_SB.PCI0.LPCB.PS2M._HID, 0, Serialized)
     {
-        Name (_T_0, Zero)  // _T_x: Emitted by ASL Compiler
-        Store (PRDT, _T_0) /* \_SB_.PCI0.LPCB.PS2M._HID._T_0 */
+        Name (_T_0, Zero)
+        Store (PRDT, _T_0)
         If (LEqual (_T_0, 0x01))
         {
             Store (0x7C012E4F, Local1)
@@ -27908,33 +25880,30 @@
                 }
             }
         }
-
         Return (Local1)
     }
-
-    Name (_S0, Package (0x03)  // _S0_: S0 System State
+    Name (_S0, Package (0x03)
     {
         0x00, 
         0x00, 
         0x00
     })
-    Name (_S3, Package (0x03)  // _S3_: S3 System State
+    Name (_S3, Package (0x03)
     {
         0x05, 
         0x05, 
         0x00
     })
-    Name (_S4, Package (0x03)  // _S4_: S4 System State
+    Name (_S4, Package (0x03)
     {
         0x06, 
         0x06, 
         0x00
     })
-    Name (_S5, Package (0x03)  // _S5_: S5 System State
+    Name (_S5, Package (0x03)
     {
         0x07, 
         0x07, 
         0x00
     })
 }
-
